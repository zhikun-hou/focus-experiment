ApertureComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'lineColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'shape', 'nVertices']
ApertureComponent.anchor.default:'center'
ApertureComponent.anchor.allowedLabels:[]
ApertureComponent.anchor.allowedTypes:[]
ApertureComponent.anchor.allowedUpdates:None
ApertureComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
ApertureComponent.anchor.canBePath:True
ApertureComponent.anchor.categ:Layout
ApertureComponent.anchor.codeWanted:False
ApertureComponent.anchor.direct:True
ApertureComponent.anchor.hint:Which point on the aperture should be anchored to its exact position?
ApertureComponent.anchor.inputType:choice
ApertureComponent.anchor.label:Anchor
ApertureComponent.anchor.readOnly:False
ApertureComponent.anchor.staticUpdater:None
ApertureComponent.anchor.updates:constant
ApertureComponent.anchor.val:center
ApertureComponent.anchor.valType:str
ApertureComponent.disabled.default:False
ApertureComponent.disabled.allowedLabels:[]
ApertureComponent.disabled.allowedTypes:[]
ApertureComponent.disabled.allowedUpdates:None
ApertureComponent.disabled.allowedVals:[]
ApertureComponent.disabled.canBePath:True
ApertureComponent.disabled.categ:Testing
ApertureComponent.disabled.codeWanted:False
ApertureComponent.disabled.direct:False
ApertureComponent.disabled.hint:Disable this component
ApertureComponent.disabled.inputType:bool
ApertureComponent.disabled.label:Disable component
ApertureComponent.disabled.readOnly:False
ApertureComponent.disabled.staticUpdater:None
ApertureComponent.disabled.updates:None
ApertureComponent.disabled.val:False
ApertureComponent.disabled.valType:bool
ApertureComponent.durationEstim.default:
ApertureComponent.durationEstim.allowedLabels:[]
ApertureComponent.durationEstim.allowedTypes:[]
ApertureComponent.durationEstim.allowedUpdates:None
ApertureComponent.durationEstim.allowedVals:[]
ApertureComponent.durationEstim.canBePath:True
ApertureComponent.durationEstim.categ:Basic
ApertureComponent.durationEstim.codeWanted:False
ApertureComponent.durationEstim.direct:False
ApertureComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ApertureComponent.durationEstim.inputType:single
ApertureComponent.durationEstim.label:Expected duration (s)
ApertureComponent.durationEstim.readOnly:False
ApertureComponent.durationEstim.staticUpdater:None
ApertureComponent.durationEstim.updates:None
ApertureComponent.durationEstim.val:
ApertureComponent.durationEstim.valType:code
ApertureComponent.nVertices.default:4
ApertureComponent.nVertices.allowedLabels:[]
ApertureComponent.nVertices.allowedTypes:[]
ApertureComponent.nVertices.allowedUpdates:['constant']
ApertureComponent.nVertices.allowedVals:[]
ApertureComponent.nVertices.canBePath:True
ApertureComponent.nVertices.categ:Basic
ApertureComponent.nVertices.codeWanted:False
ApertureComponent.nVertices.direct:True
ApertureComponent.nVertices.hint:How many vertices in your regular polygon?
ApertureComponent.nVertices.inputType:single
ApertureComponent.nVertices.label:Num. vertices
ApertureComponent.nVertices.readOnly:False
ApertureComponent.nVertices.staticUpdater:None
ApertureComponent.nVertices.updates:constant
ApertureComponent.nVertices.val:4
ApertureComponent.nVertices.valType:int
ApertureComponent.name.default:aperture
ApertureComponent.name.allowedLabels:[]
ApertureComponent.name.allowedTypes:[]
ApertureComponent.name.allowedUpdates:None
ApertureComponent.name.allowedVals:[]
ApertureComponent.name.canBePath:True
ApertureComponent.name.categ:Basic
ApertureComponent.name.codeWanted:False
ApertureComponent.name.direct:True
ApertureComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
ApertureComponent.name.inputType:single
ApertureComponent.name.label:Name
ApertureComponent.name.readOnly:False
ApertureComponent.name.staticUpdater:None
ApertureComponent.name.val:aperture
ApertureComponent.name.valType:code
ApertureComponent.ori.default:0.0
ApertureComponent.ori.allowedLabels:[]
ApertureComponent.ori.allowedTypes:[]
ApertureComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.ori.allowedVals:[-360, 360]
ApertureComponent.ori.canBePath:True
ApertureComponent.ori.categ:Layout
ApertureComponent.ori.codeWanted:False
ApertureComponent.ori.direct:True
ApertureComponent.ori.hint:Orientation of this stimulus (in deg)
ApertureComponent.ori.inputType:spin
ApertureComponent.ori.label:Orientation
ApertureComponent.ori.readOnly:False
ApertureComponent.ori.staticUpdater:None
ApertureComponent.ori.updates:constant
ApertureComponent.ori.val:0
ApertureComponent.ori.valType:num
ApertureComponent.pos.default:(0, 0)
ApertureComponent.pos.allowedLabels:[]
ApertureComponent.pos.allowedTypes:[]
ApertureComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.pos.allowedVals:[]
ApertureComponent.pos.canBePath:True
ApertureComponent.pos.categ:Layout
ApertureComponent.pos.codeWanted:False
ApertureComponent.pos.direct:True
ApertureComponent.pos.hint:Where is the aperture centred?
ApertureComponent.pos.inputType:single
ApertureComponent.pos.label:Position [x,y]
ApertureComponent.pos.readOnly:False
ApertureComponent.pos.staticUpdater:None
ApertureComponent.pos.updates:constant
ApertureComponent.pos.val:(0, 0)
ApertureComponent.pos.valType:list
ApertureComponent.saveStartStop.default:True
ApertureComponent.saveStartStop.allowedLabels:[]
ApertureComponent.saveStartStop.allowedTypes:[]
ApertureComponent.saveStartStop.allowedUpdates:None
ApertureComponent.saveStartStop.allowedVals:[]
ApertureComponent.saveStartStop.canBePath:True
ApertureComponent.saveStartStop.categ:Data
ApertureComponent.saveStartStop.codeWanted:False
ApertureComponent.saveStartStop.direct:True
ApertureComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
ApertureComponent.saveStartStop.inputType:bool
ApertureComponent.saveStartStop.label:Save onset/offset times
ApertureComponent.saveStartStop.readOnly:False
ApertureComponent.saveStartStop.staticUpdater:None
ApertureComponent.saveStartStop.updates:None
ApertureComponent.saveStartStop.val:True
ApertureComponent.saveStartStop.valType:bool
ApertureComponent.shape.default:'triangle'
ApertureComponent.shape.allowedLabels:[]
ApertureComponent.shape.allowedTypes:[]
ApertureComponent.shape.allowedUpdates:None
ApertureComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'circle', 'cross', 'star', 'regular polygon...', 'custom polygon...']
ApertureComponent.shape.canBePath:True
ApertureComponent.shape.categ:Basic
ApertureComponent.shape.codeWanted:False
ApertureComponent.shape.direct:False
ApertureComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices and with 'custom polygon...' you can set vertices
ApertureComponent.shape.inputType:choice
ApertureComponent.shape.label:Shape
ApertureComponent.shape.readOnly:False
ApertureComponent.shape.staticUpdater:None
ApertureComponent.shape.updates:None
ApertureComponent.shape.val:triangle
ApertureComponent.shape.valType:str
ApertureComponent.size.default:[1]
ApertureComponent.size.allowedLabels:[]
ApertureComponent.size.allowedTypes:[]
ApertureComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.size.allowedVals:[]
ApertureComponent.size.canBePath:True
ApertureComponent.size.categ:Layout
ApertureComponent.size.codeWanted:False
ApertureComponent.size.direct:True
ApertureComponent.size.hint:How big is the aperture? (a single number for diameter)
ApertureComponent.size.inputType:single
ApertureComponent.size.label:Size
ApertureComponent.size.readOnly:False
ApertureComponent.size.staticUpdater:None
ApertureComponent.size.updates:constant
ApertureComponent.size.val:1
ApertureComponent.size.valType:list
ApertureComponent.startEstim.default:
ApertureComponent.startEstim.allowedLabels:[]
ApertureComponent.startEstim.allowedTypes:[]
ApertureComponent.startEstim.allowedUpdates:None
ApertureComponent.startEstim.allowedVals:[]
ApertureComponent.startEstim.canBePath:True
ApertureComponent.startEstim.categ:Basic
ApertureComponent.startEstim.codeWanted:False
ApertureComponent.startEstim.direct:False
ApertureComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ApertureComponent.startEstim.inputType:single
ApertureComponent.startEstim.label:Expected start (s)
ApertureComponent.startEstim.readOnly:False
ApertureComponent.startEstim.staticUpdater:None
ApertureComponent.startEstim.updates:None
ApertureComponent.startEstim.val:
ApertureComponent.startEstim.valType:code
ApertureComponent.startType.default:'time (s)'
ApertureComponent.startType.allowedLabels:[]
ApertureComponent.startType.allowedTypes:[]
ApertureComponent.startType.allowedUpdates:None
ApertureComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ApertureComponent.startType.canBePath:True
ApertureComponent.startType.categ:Basic
ApertureComponent.startType.codeWanted:False
ApertureComponent.startType.direct:False
ApertureComponent.startType.hint:How do you want to define your start point?
ApertureComponent.startType.inputType:choice
ApertureComponent.startType.label:start type
ApertureComponent.startType.readOnly:False
ApertureComponent.startType.staticUpdater:None
ApertureComponent.startType.updates:None
ApertureComponent.startType.val:time (s)
ApertureComponent.startType.valType:str
ApertureComponent.startVal.default:0.0
ApertureComponent.startVal.allowedLabels:[]
ApertureComponent.startVal.allowedTypes:[]
ApertureComponent.startVal.allowedUpdates:None
ApertureComponent.startVal.allowedVals:[]
ApertureComponent.startVal.canBePath:True
ApertureComponent.startVal.categ:Basic
ApertureComponent.startVal.codeWanted:False
ApertureComponent.startVal.direct:True
ApertureComponent.startVal.hint:When does the component start?
ApertureComponent.startVal.inputType:single
ApertureComponent.startVal.label:Start
ApertureComponent.startVal.readOnly:False
ApertureComponent.startVal.staticUpdater:None
ApertureComponent.startVal.updates:None
ApertureComponent.startVal.val:0.0
ApertureComponent.startVal.valType:code
ApertureComponent.stopType.default:'duration (s)'
ApertureComponent.stopType.allowedLabels:[]
ApertureComponent.stopType.allowedTypes:[]
ApertureComponent.stopType.allowedUpdates:None
ApertureComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ApertureComponent.stopType.canBePath:True
ApertureComponent.stopType.categ:Basic
ApertureComponent.stopType.codeWanted:False
ApertureComponent.stopType.direct:False
ApertureComponent.stopType.hint:How do you want to define your end point?
ApertureComponent.stopType.inputType:choice
ApertureComponent.stopType.label:stop type
ApertureComponent.stopType.readOnly:False
ApertureComponent.stopType.staticUpdater:None
ApertureComponent.stopType.updates:None
ApertureComponent.stopType.val:duration (s)
ApertureComponent.stopType.valType:str
ApertureComponent.stopVal.default:1.0
ApertureComponent.stopVal.allowedLabels:[]
ApertureComponent.stopVal.allowedTypes:[]
ApertureComponent.stopVal.allowedUpdates:[]
ApertureComponent.stopVal.allowedVals:[]
ApertureComponent.stopVal.canBePath:True
ApertureComponent.stopVal.categ:Basic
ApertureComponent.stopVal.codeWanted:False
ApertureComponent.stopVal.direct:True
ApertureComponent.stopVal.hint:When does the component end? (blank is endless)
ApertureComponent.stopVal.inputType:single
ApertureComponent.stopVal.label:Stop
ApertureComponent.stopVal.readOnly:False
ApertureComponent.stopVal.staticUpdater:None
ApertureComponent.stopVal.updates:constant
ApertureComponent.stopVal.val:1.0
ApertureComponent.stopVal.valType:code
ApertureComponent.syncScreenRefresh.default:True
ApertureComponent.syncScreenRefresh.allowedLabels:[]
ApertureComponent.syncScreenRefresh.allowedTypes:[]
ApertureComponent.syncScreenRefresh.allowedUpdates:None
ApertureComponent.syncScreenRefresh.allowedVals:[]
ApertureComponent.syncScreenRefresh.canBePath:True
ApertureComponent.syncScreenRefresh.categ:Data
ApertureComponent.syncScreenRefresh.codeWanted:False
ApertureComponent.syncScreenRefresh.direct:True
ApertureComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
ApertureComponent.syncScreenRefresh.inputType:bool
ApertureComponent.syncScreenRefresh.label:Sync timing with screen refresh
ApertureComponent.syncScreenRefresh.readOnly:True
ApertureComponent.syncScreenRefresh.staticUpdater:None
ApertureComponent.syncScreenRefresh.updates:None
ApertureComponent.syncScreenRefresh.val:True
ApertureComponent.syncScreenRefresh.valType:bool
ApertureComponent.units.default:'norm'
ApertureComponent.units.allowedLabels:[]
ApertureComponent.units.allowedTypes:[]
ApertureComponent.units.allowedUpdates:None
ApertureComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ApertureComponent.units.canBePath:True
ApertureComponent.units.categ:Layout
ApertureComponent.units.codeWanted:False
ApertureComponent.units.direct:True
ApertureComponent.units.hint:Units of dimensions for this stimulus
ApertureComponent.units.inputType:choice
ApertureComponent.units.label:Spatial Units
ApertureComponent.units.readOnly:False
ApertureComponent.units.staticUpdater:None
ApertureComponent.units.updates:None
ApertureComponent.units.val:norm
ApertureComponent.units.valType:str
ApertureComponent.vertices.default:[]
ApertureComponent.vertices.allowedLabels:[]
ApertureComponent.vertices.allowedTypes:[]
ApertureComponent.vertices.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.vertices.allowedVals:[]
ApertureComponent.vertices.canBePath:True
ApertureComponent.vertices.categ:Basic
ApertureComponent.vertices.codeWanted:False
ApertureComponent.vertices.direct:True
ApertureComponent.vertices.hint:What are the vertices of your polygon? Should be an nx2 array or a list of [x, y] lists
ApertureComponent.vertices.inputType:single
ApertureComponent.vertices.label:Vertices
ApertureComponent.vertices.readOnly:False
ApertureComponent.vertices.staticUpdater:None
ApertureComponent.vertices.updates:constant
ApertureComponent.vertices.val:
ApertureComponent.vertices.valType:list
BrushComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'size', 'pos', 'units', 'anchor', 'ori', 'lineWidth', 'lineColor', 'lineColorSpace', 'opacity']
BrushComponent.buttonRequired.default:True
BrushComponent.buttonRequired.allowedLabels:[]
BrushComponent.buttonRequired.allowedTypes:[]
BrushComponent.buttonRequired.allowedUpdates:['constant', 'set every repeat']
BrushComponent.buttonRequired.allowedVals:[]
BrushComponent.buttonRequired.canBePath:True
BrushComponent.buttonRequired.categ:Basic
BrushComponent.buttonRequired.codeWanted:False
BrushComponent.buttonRequired.direct:True
BrushComponent.buttonRequired.hint:Whether a button needs to be pressed to draw (True/False)
BrushComponent.buttonRequired.inputType:bool
BrushComponent.buttonRequired.label:Press Button
BrushComponent.buttonRequired.readOnly:False
BrushComponent.buttonRequired.staticUpdater:None
BrushComponent.buttonRequired.updates:constant
BrushComponent.buttonRequired.val:True
BrushComponent.buttonRequired.valType:bool
BrushComponent.contrast.default:1.0
BrushComponent.contrast.allowedLabels:[]
BrushComponent.contrast.allowedTypes:[]
BrushComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
BrushComponent.contrast.allowedVals:[]
BrushComponent.contrast.canBePath:True
BrushComponent.contrast.categ:Appearance
BrushComponent.contrast.codeWanted:False
BrushComponent.contrast.direct:True
BrushComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
BrushComponent.contrast.inputType:single
BrushComponent.contrast.label:Contrast
BrushComponent.contrast.readOnly:False
BrushComponent.contrast.staticUpdater:None
BrushComponent.contrast.updates:constant
BrushComponent.contrast.val:1
BrushComponent.contrast.valType:num
BrushComponent.disabled.default:False
BrushComponent.disabled.allowedLabels:[]
BrushComponent.disabled.allowedTypes:[]
BrushComponent.disabled.allowedUpdates:None
BrushComponent.disabled.allowedVals:[]
BrushComponent.disabled.canBePath:True
BrushComponent.disabled.categ:Testing
BrushComponent.disabled.codeWanted:False
BrushComponent.disabled.direct:False
BrushComponent.disabled.hint:Disable this component
BrushComponent.disabled.inputType:bool
BrushComponent.disabled.label:Disable component
BrushComponent.disabled.readOnly:False
BrushComponent.disabled.staticUpdater:None
BrushComponent.disabled.updates:None
BrushComponent.disabled.val:False
BrushComponent.disabled.valType:bool
BrushComponent.durationEstim.default:
BrushComponent.durationEstim.allowedLabels:[]
BrushComponent.durationEstim.allowedTypes:[]
BrushComponent.durationEstim.allowedUpdates:None
BrushComponent.durationEstim.allowedVals:[]
BrushComponent.durationEstim.canBePath:True
BrushComponent.durationEstim.categ:Basic
BrushComponent.durationEstim.codeWanted:False
BrushComponent.durationEstim.direct:False
BrushComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
BrushComponent.durationEstim.inputType:single
BrushComponent.durationEstim.label:Expected duration (s)
BrushComponent.durationEstim.readOnly:False
BrushComponent.durationEstim.staticUpdater:None
BrushComponent.durationEstim.updates:None
BrushComponent.durationEstim.val:
BrushComponent.durationEstim.valType:code
BrushComponent.lineColor.default:[1,1,1]
BrushComponent.lineColor.allowedLabels:[]
BrushComponent.lineColor.allowedTypes:[]
BrushComponent.lineColor.allowedUpdates:['constant', 'set every repeat']
BrushComponent.lineColor.allowedVals:[]
BrushComponent.lineColor.canBePath:True
BrushComponent.lineColor.categ:Appearance
BrushComponent.lineColor.codeWanted:True
BrushComponent.lineColor.direct:True
BrushComponent.lineColor.hint:Fill color of this brush
BrushComponent.lineColor.inputType:color
BrushComponent.lineColor.label:Brush Color
BrushComponent.lineColor.readOnly:False
BrushComponent.lineColor.staticUpdater:None
BrushComponent.lineColor.updates:constant
BrushComponent.lineColor.val:$[1,1,1]
BrushComponent.lineColor.valType:color
BrushComponent.lineColorSpace.default:'rgb'
BrushComponent.lineColorSpace.allowedLabels:[]
BrushComponent.lineColorSpace.allowedTypes:[]
BrushComponent.lineColorSpace.allowedUpdates:None
BrushComponent.lineColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
BrushComponent.lineColorSpace.canBePath:True
BrushComponent.lineColorSpace.categ:Appearance
BrushComponent.lineColorSpace.codeWanted:False
BrushComponent.lineColorSpace.direct:True
BrushComponent.lineColorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
BrushComponent.lineColorSpace.inputType:choice
BrushComponent.lineColorSpace.label:Color Space
BrushComponent.lineColorSpace.readOnly:False
BrushComponent.lineColorSpace.staticUpdater:None
BrushComponent.lineColorSpace.updates:constant
BrushComponent.lineColorSpace.val:rgb
BrushComponent.lineColorSpace.valType:str
BrushComponent.lineWidth.default:1.5
BrushComponent.lineWidth.allowedLabels:[]
BrushComponent.lineWidth.allowedTypes:[]
BrushComponent.lineWidth.allowedUpdates:['constant', 'set every repeat']
BrushComponent.lineWidth.allowedVals:[]
BrushComponent.lineWidth.canBePath:True
BrushComponent.lineWidth.categ:Appearance
BrushComponent.lineWidth.codeWanted:False
BrushComponent.lineWidth.direct:True
BrushComponent.lineWidth.hint:Width of the brush's line (always in pixels and limited to 10px max width)
BrushComponent.lineWidth.inputType:spin
BrushComponent.lineWidth.label:Brush Size
BrushComponent.lineWidth.readOnly:False
BrushComponent.lineWidth.staticUpdater:None
BrushComponent.lineWidth.updates:constant
BrushComponent.lineWidth.val:1.5
BrushComponent.lineWidth.valType:num
BrushComponent.name.default:brush
BrushComponent.name.allowedLabels:[]
BrushComponent.name.allowedTypes:[]
BrushComponent.name.allowedUpdates:None
BrushComponent.name.allowedVals:[]
BrushComponent.name.canBePath:True
BrushComponent.name.categ:Basic
BrushComponent.name.codeWanted:False
BrushComponent.name.direct:True
BrushComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
BrushComponent.name.inputType:single
BrushComponent.name.label:Name
BrushComponent.name.readOnly:False
BrushComponent.name.staticUpdater:None
BrushComponent.name.val:brush
BrushComponent.name.valType:code
BrushComponent.opacity.default:None
BrushComponent.opacity.allowedLabels:[]
BrushComponent.opacity.allowedTypes:[]
BrushComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
BrushComponent.opacity.allowedVals:[]
BrushComponent.opacity.canBePath:True
BrushComponent.opacity.categ:Appearance
BrushComponent.opacity.codeWanted:False
BrushComponent.opacity.direct:True
BrushComponent.opacity.hint:The line opacity
BrushComponent.opacity.inputType:single
BrushComponent.opacity.label:Opacity
BrushComponent.opacity.readOnly:False
BrushComponent.opacity.staticUpdater:None
BrushComponent.opacity.updates:constant
BrushComponent.opacity.val:
BrushComponent.opacity.valType:num
BrushComponent.saveStartStop.default:True
BrushComponent.saveStartStop.allowedLabels:[]
BrushComponent.saveStartStop.allowedTypes:[]
BrushComponent.saveStartStop.allowedUpdates:None
BrushComponent.saveStartStop.allowedVals:[]
BrushComponent.saveStartStop.canBePath:True
BrushComponent.saveStartStop.categ:Data
BrushComponent.saveStartStop.codeWanted:False
BrushComponent.saveStartStop.direct:True
BrushComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
BrushComponent.saveStartStop.inputType:bool
BrushComponent.saveStartStop.label:Save onset/offset times
BrushComponent.saveStartStop.readOnly:False
BrushComponent.saveStartStop.staticUpdater:None
BrushComponent.saveStartStop.updates:None
BrushComponent.saveStartStop.val:True
BrushComponent.saveStartStop.valType:bool
BrushComponent.startEstim.default:
BrushComponent.startEstim.allowedLabels:[]
BrushComponent.startEstim.allowedTypes:[]
BrushComponent.startEstim.allowedUpdates:None
BrushComponent.startEstim.allowedVals:[]
BrushComponent.startEstim.canBePath:True
BrushComponent.startEstim.categ:Basic
BrushComponent.startEstim.codeWanted:False
BrushComponent.startEstim.direct:False
BrushComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
BrushComponent.startEstim.inputType:single
BrushComponent.startEstim.label:Expected start (s)
BrushComponent.startEstim.readOnly:False
BrushComponent.startEstim.staticUpdater:None
BrushComponent.startEstim.updates:None
BrushComponent.startEstim.val:
BrushComponent.startEstim.valType:code
BrushComponent.startType.default:'time (s)'
BrushComponent.startType.allowedLabels:[]
BrushComponent.startType.allowedTypes:[]
BrushComponent.startType.allowedUpdates:None
BrushComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
BrushComponent.startType.canBePath:True
BrushComponent.startType.categ:Basic
BrushComponent.startType.codeWanted:False
BrushComponent.startType.direct:False
BrushComponent.startType.hint:How do you want to define your start point?
BrushComponent.startType.inputType:choice
BrushComponent.startType.label:start type
BrushComponent.startType.readOnly:False
BrushComponent.startType.staticUpdater:None
BrushComponent.startType.updates:None
BrushComponent.startType.val:time (s)
BrushComponent.startType.valType:str
BrushComponent.startVal.default:0.0
BrushComponent.startVal.allowedLabels:[]
BrushComponent.startVal.allowedTypes:[]
BrushComponent.startVal.allowedUpdates:None
BrushComponent.startVal.allowedVals:[]
BrushComponent.startVal.canBePath:True
BrushComponent.startVal.categ:Basic
BrushComponent.startVal.codeWanted:False
BrushComponent.startVal.direct:True
BrushComponent.startVal.hint:When does the component start?
BrushComponent.startVal.inputType:single
BrushComponent.startVal.label:Start
BrushComponent.startVal.readOnly:False
BrushComponent.startVal.staticUpdater:None
BrushComponent.startVal.updates:None
BrushComponent.startVal.val:0.0
BrushComponent.startVal.valType:code
BrushComponent.stopType.default:'duration (s)'
BrushComponent.stopType.allowedLabels:[]
BrushComponent.stopType.allowedTypes:[]
BrushComponent.stopType.allowedUpdates:None
BrushComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
BrushComponent.stopType.canBePath:True
BrushComponent.stopType.categ:Basic
BrushComponent.stopType.codeWanted:False
BrushComponent.stopType.direct:False
BrushComponent.stopType.hint:How do you want to define your end point?
BrushComponent.stopType.inputType:choice
BrushComponent.stopType.label:stop type
BrushComponent.stopType.readOnly:False
BrushComponent.stopType.staticUpdater:None
BrushComponent.stopType.updates:None
BrushComponent.stopType.val:duration (s)
BrushComponent.stopType.valType:str
BrushComponent.stopVal.default:1.0
BrushComponent.stopVal.allowedLabels:[]
BrushComponent.stopVal.allowedTypes:[]
BrushComponent.stopVal.allowedUpdates:[]
BrushComponent.stopVal.allowedVals:[]
BrushComponent.stopVal.canBePath:True
BrushComponent.stopVal.categ:Basic
BrushComponent.stopVal.codeWanted:False
BrushComponent.stopVal.direct:True
BrushComponent.stopVal.hint:When does the component end? (blank is endless)
BrushComponent.stopVal.inputType:single
BrushComponent.stopVal.label:Stop
BrushComponent.stopVal.readOnly:False
BrushComponent.stopVal.staticUpdater:None
BrushComponent.stopVal.updates:constant
BrushComponent.stopVal.val:1.0
BrushComponent.stopVal.valType:code
BrushComponent.syncScreenRefresh.default:True
BrushComponent.syncScreenRefresh.allowedLabels:[]
BrushComponent.syncScreenRefresh.allowedTypes:[]
BrushComponent.syncScreenRefresh.allowedUpdates:None
BrushComponent.syncScreenRefresh.allowedVals:[]
BrushComponent.syncScreenRefresh.canBePath:True
BrushComponent.syncScreenRefresh.categ:Data
BrushComponent.syncScreenRefresh.codeWanted:False
BrushComponent.syncScreenRefresh.direct:True
BrushComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
BrushComponent.syncScreenRefresh.inputType:bool
BrushComponent.syncScreenRefresh.label:Sync timing with screen refresh
BrushComponent.syncScreenRefresh.readOnly:True
BrushComponent.syncScreenRefresh.staticUpdater:None
BrushComponent.syncScreenRefresh.updates:None
BrushComponent.syncScreenRefresh.val:True
BrushComponent.syncScreenRefresh.valType:bool
ButtonComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'forceEndRoutine', 'text', 'callback', 'oncePerClick', 'borderWidth', 'opacity', 'font', 'letterHeight', 'lineSpacing', 'bold', 'italic']
ButtonComponent.anchor.default:'center'
ButtonComponent.anchor.allowedLabels:[]
ButtonComponent.anchor.allowedTypes:[]
ButtonComponent.anchor.allowedUpdates:None
ButtonComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
ButtonComponent.anchor.canBePath:True
ButtonComponent.anchor.categ:Layout
ButtonComponent.anchor.codeWanted:False
ButtonComponent.anchor.direct:True
ButtonComponent.anchor.hint:Should text anchor to the top, center or bottom of the box?
ButtonComponent.anchor.inputType:choice
ButtonComponent.anchor.label:Anchor
ButtonComponent.anchor.readOnly:False
ButtonComponent.anchor.staticUpdater:None
ButtonComponent.anchor.updates:constant
ButtonComponent.anchor.val:center
ButtonComponent.anchor.valType:str
ButtonComponent.bold.default:True
ButtonComponent.bold.allowedLabels:[]
ButtonComponent.bold.allowedTypes:[]
ButtonComponent.bold.allowedUpdates:None
ButtonComponent.bold.allowedVals:[]
ButtonComponent.bold.canBePath:True
ButtonComponent.bold.categ:Formatting
ButtonComponent.bold.codeWanted:False
ButtonComponent.bold.direct:True
ButtonComponent.bold.hint:Should text be bold?
ButtonComponent.bold.inputType:bool
ButtonComponent.bold.label:Bold
ButtonComponent.bold.readOnly:False
ButtonComponent.bold.staticUpdater:None
ButtonComponent.bold.updates:constant
ButtonComponent.bold.val:True
ButtonComponent.bold.valType:bool
ButtonComponent.borderColor.default:'None'
ButtonComponent.borderColor.allowedLabels:[]
ButtonComponent.borderColor.allowedTypes:[]
ButtonComponent.borderColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.borderColor.allowedVals:[]
ButtonComponent.borderColor.canBePath:True
ButtonComponent.borderColor.categ:Appearance
ButtonComponent.borderColor.codeWanted:False
ButtonComponent.borderColor.direct:True
ButtonComponent.borderColor.hint:Color of this stimulus (e.g. $[1,1,0], red )
ButtonComponent.borderColor.inputType:color
ButtonComponent.borderColor.label:Border Color
ButtonComponent.borderColor.readOnly:False
ButtonComponent.borderColor.staticUpdater:None
ButtonComponent.borderColor.updates:constant
ButtonComponent.borderColor.val:None
ButtonComponent.borderColor.valType:color
ButtonComponent.borderWidth.default:0.0
ButtonComponent.borderWidth.allowedLabels:[]
ButtonComponent.borderWidth.allowedTypes:[]
ButtonComponent.borderWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.borderWidth.allowedVals:[]
ButtonComponent.borderWidth.canBePath:True
ButtonComponent.borderWidth.categ:Appearance
ButtonComponent.borderWidth.codeWanted:False
ButtonComponent.borderWidth.direct:True
ButtonComponent.borderWidth.hint:Textbox border width
ButtonComponent.borderWidth.inputType:single
ButtonComponent.borderWidth.label:Border Width
ButtonComponent.borderWidth.readOnly:False
ButtonComponent.borderWidth.staticUpdater:None
ButtonComponent.borderWidth.updates:constant
ButtonComponent.borderWidth.val:0
ButtonComponent.borderWidth.valType:num
ButtonComponent.callback.default:
ButtonComponent.callback.allowedLabels:[]
ButtonComponent.callback.allowedTypes:[]
ButtonComponent.callback.allowedUpdates:None
ButtonComponent.callback.allowedVals:[]
ButtonComponent.callback.canBePath:True
ButtonComponent.callback.categ:Basic
ButtonComponent.callback.codeWanted:False
ButtonComponent.callback.direct:True
ButtonComponent.callback.hint:Code to run when button is clicked
ButtonComponent.callback.inputType:multi
ButtonComponent.callback.label:Callback Function
ButtonComponent.callback.readOnly:False
ButtonComponent.callback.staticUpdater:None
ButtonComponent.callback.updates:constant
ButtonComponent.callback.val:
ButtonComponent.callback.valType:extendedCode
ButtonComponent.color.default:'white'
ButtonComponent.color.allowedLabels:[]
ButtonComponent.color.allowedTypes:[]
ButtonComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.color.allowedVals:[]
ButtonComponent.color.canBePath:True
ButtonComponent.color.categ:Appearance
ButtonComponent.color.codeWanted:False
ButtonComponent.color.direct:True
ButtonComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
ButtonComponent.color.inputType:color
ButtonComponent.color.label:Text Color
ButtonComponent.color.readOnly:False
ButtonComponent.color.staticUpdater:None
ButtonComponent.color.updates:constant
ButtonComponent.color.val:white
ButtonComponent.color.valType:color
ButtonComponent.colorSpace.default:'rgb'
ButtonComponent.colorSpace.allowedLabels:[]
ButtonComponent.colorSpace.allowedTypes:[]
ButtonComponent.colorSpace.allowedUpdates:None
ButtonComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
ButtonComponent.colorSpace.canBePath:True
ButtonComponent.colorSpace.categ:Appearance
ButtonComponent.colorSpace.codeWanted:False
ButtonComponent.colorSpace.direct:True
ButtonComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
ButtonComponent.colorSpace.inputType:choice
ButtonComponent.colorSpace.label:Color Space
ButtonComponent.colorSpace.readOnly:False
ButtonComponent.colorSpace.staticUpdater:None
ButtonComponent.colorSpace.updates:constant
ButtonComponent.colorSpace.val:rgb
ButtonComponent.colorSpace.valType:str
ButtonComponent.contrast.default:1.0
ButtonComponent.contrast.allowedLabels:[]
ButtonComponent.contrast.allowedTypes:[]
ButtonComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.contrast.allowedVals:[]
ButtonComponent.contrast.canBePath:True
ButtonComponent.contrast.categ:Appearance
ButtonComponent.contrast.codeWanted:False
ButtonComponent.contrast.direct:True
ButtonComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
ButtonComponent.contrast.inputType:single
ButtonComponent.contrast.label:Contrast
ButtonComponent.contrast.readOnly:False
ButtonComponent.contrast.staticUpdater:None
ButtonComponent.contrast.updates:constant
ButtonComponent.contrast.val:1
ButtonComponent.contrast.valType:num
ButtonComponent.disabled.default:False
ButtonComponent.disabled.allowedLabels:[]
ButtonComponent.disabled.allowedTypes:[]
ButtonComponent.disabled.allowedUpdates:None
ButtonComponent.disabled.allowedVals:[]
ButtonComponent.disabled.canBePath:True
ButtonComponent.disabled.categ:Testing
ButtonComponent.disabled.codeWanted:False
ButtonComponent.disabled.direct:False
ButtonComponent.disabled.hint:Disable this component
ButtonComponent.disabled.inputType:bool
ButtonComponent.disabled.label:Disable component
ButtonComponent.disabled.readOnly:False
ButtonComponent.disabled.staticUpdater:None
ButtonComponent.disabled.updates:None
ButtonComponent.disabled.val:False
ButtonComponent.disabled.valType:bool
ButtonComponent.durationEstim.default:
ButtonComponent.durationEstim.allowedLabels:[]
ButtonComponent.durationEstim.allowedTypes:[]
ButtonComponent.durationEstim.allowedUpdates:None
ButtonComponent.durationEstim.allowedVals:[]
ButtonComponent.durationEstim.canBePath:True
ButtonComponent.durationEstim.categ:Basic
ButtonComponent.durationEstim.codeWanted:False
ButtonComponent.durationEstim.direct:False
ButtonComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ButtonComponent.durationEstim.inputType:single
ButtonComponent.durationEstim.label:Expected duration (s)
ButtonComponent.durationEstim.readOnly:False
ButtonComponent.durationEstim.staticUpdater:None
ButtonComponent.durationEstim.updates:None
ButtonComponent.durationEstim.val:
ButtonComponent.durationEstim.valType:code
ButtonComponent.fillColor.default:'darkgrey'
ButtonComponent.fillColor.allowedLabels:[]
ButtonComponent.fillColor.allowedTypes:[]
ButtonComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.fillColor.allowedVals:[]
ButtonComponent.fillColor.canBePath:True
ButtonComponent.fillColor.categ:Appearance
ButtonComponent.fillColor.codeWanted:False
ButtonComponent.fillColor.direct:True
ButtonComponent.fillColor.hint:Fill color of this stimulus (e.g. $[1,1,0], red )
ButtonComponent.fillColor.inputType:color
ButtonComponent.fillColor.label:Fill Color
ButtonComponent.fillColor.readOnly:False
ButtonComponent.fillColor.staticUpdater:None
ButtonComponent.fillColor.updates:constant
ButtonComponent.fillColor.val:darkgrey
ButtonComponent.fillColor.valType:color
ButtonComponent.font.default:'Arvo'
ButtonComponent.font.allowedLabels:[]
ButtonComponent.font.allowedTypes:[]
ButtonComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.font.allowedVals:[]
ButtonComponent.font.canBePath:True
ButtonComponent.font.categ:Formatting
ButtonComponent.font.codeWanted:False
ButtonComponent.font.direct:True
ButtonComponent.font.hint:The font name (e.g. Comic Sans)
ButtonComponent.font.inputType:single
ButtonComponent.font.label:Font
ButtonComponent.font.readOnly:False
ButtonComponent.font.staticUpdater:None
ButtonComponent.font.updates:constant
ButtonComponent.font.val:Arvo
ButtonComponent.font.valType:str
ButtonComponent.forceEndRoutine.default:True
ButtonComponent.forceEndRoutine.allowedLabels:[]
ButtonComponent.forceEndRoutine.allowedTypes:[]
ButtonComponent.forceEndRoutine.allowedUpdates:None
ButtonComponent.forceEndRoutine.allowedVals:[]
ButtonComponent.forceEndRoutine.canBePath:True
ButtonComponent.forceEndRoutine.categ:Basic
ButtonComponent.forceEndRoutine.codeWanted:False
ButtonComponent.forceEndRoutine.direct:False
ButtonComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
ButtonComponent.forceEndRoutine.inputType:bool
ButtonComponent.forceEndRoutine.label:Force end of Routine
ButtonComponent.forceEndRoutine.readOnly:False
ButtonComponent.forceEndRoutine.staticUpdater:None
ButtonComponent.forceEndRoutine.updates:constant
ButtonComponent.forceEndRoutine.val:True
ButtonComponent.forceEndRoutine.valType:bool
ButtonComponent.italic.default:False
ButtonComponent.italic.allowedLabels:[]
ButtonComponent.italic.allowedTypes:[]
ButtonComponent.italic.allowedUpdates:None
ButtonComponent.italic.allowedVals:[]
ButtonComponent.italic.canBePath:True
ButtonComponent.italic.categ:Formatting
ButtonComponent.italic.codeWanted:False
ButtonComponent.italic.direct:True
ButtonComponent.italic.hint:Should text be italic?
ButtonComponent.italic.inputType:bool
ButtonComponent.italic.label:Italic
ButtonComponent.italic.readOnly:False
ButtonComponent.italic.staticUpdater:None
ButtonComponent.italic.updates:constant
ButtonComponent.italic.val:False
ButtonComponent.italic.valType:bool
ButtonComponent.letterHeight.default:0.05
ButtonComponent.letterHeight.allowedLabels:[]
ButtonComponent.letterHeight.allowedTypes:[]
ButtonComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.letterHeight.allowedVals:[]
ButtonComponent.letterHeight.canBePath:True
ButtonComponent.letterHeight.categ:Formatting
ButtonComponent.letterHeight.codeWanted:False
ButtonComponent.letterHeight.direct:True
ButtonComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
ButtonComponent.letterHeight.inputType:single
ButtonComponent.letterHeight.label:Letter height
ButtonComponent.letterHeight.readOnly:False
ButtonComponent.letterHeight.staticUpdater:None
ButtonComponent.letterHeight.updates:constant
ButtonComponent.letterHeight.val:0.05
ButtonComponent.letterHeight.valType:num
ButtonComponent.name.default:button
ButtonComponent.name.allowedLabels:[]
ButtonComponent.name.allowedTypes:[]
ButtonComponent.name.allowedUpdates:None
ButtonComponent.name.allowedVals:[]
ButtonComponent.name.canBePath:True
ButtonComponent.name.categ:Basic
ButtonComponent.name.codeWanted:False
ButtonComponent.name.direct:True
ButtonComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
ButtonComponent.name.inputType:single
ButtonComponent.name.label:Name
ButtonComponent.name.readOnly:False
ButtonComponent.name.staticUpdater:None
ButtonComponent.name.val:button
ButtonComponent.name.valType:code
ButtonComponent.oncePerClick.default:True
ButtonComponent.oncePerClick.allowedLabels:[]
ButtonComponent.oncePerClick.allowedTypes:[]
ButtonComponent.oncePerClick.allowedUpdates:None
ButtonComponent.oncePerClick.allowedVals:[]
ButtonComponent.oncePerClick.canBePath:True
ButtonComponent.oncePerClick.categ:Basic
ButtonComponent.oncePerClick.codeWanted:False
ButtonComponent.oncePerClick.direct:True
ButtonComponent.oncePerClick.hint:Should the callback run once per click (True), or each frame until click is released (False)
ButtonComponent.oncePerClick.inputType:bool
ButtonComponent.oncePerClick.label:Run once per click
ButtonComponent.oncePerClick.readOnly:False
ButtonComponent.oncePerClick.staticUpdater:None
ButtonComponent.oncePerClick.updates:constant
ButtonComponent.oncePerClick.val:True
ButtonComponent.oncePerClick.valType:bool
ButtonComponent.opacity.default:None
ButtonComponent.opacity.allowedLabels:[]
ButtonComponent.opacity.allowedTypes:[]
ButtonComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.opacity.allowedVals:[]
ButtonComponent.opacity.canBePath:True
ButtonComponent.opacity.categ:Appearance
ButtonComponent.opacity.codeWanted:False
ButtonComponent.opacity.direct:True
ButtonComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
ButtonComponent.opacity.inputType:single
ButtonComponent.opacity.label:Opacity
ButtonComponent.opacity.readOnly:False
ButtonComponent.opacity.staticUpdater:None
ButtonComponent.opacity.updates:constant
ButtonComponent.opacity.val:
ButtonComponent.opacity.valType:num
ButtonComponent.ori.default:0.0
ButtonComponent.ori.allowedLabels:[]
ButtonComponent.ori.allowedTypes:[]
ButtonComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.ori.allowedVals:[-360, 360]
ButtonComponent.ori.canBePath:True
ButtonComponent.ori.categ:Layout
ButtonComponent.ori.codeWanted:False
ButtonComponent.ori.direct:True
ButtonComponent.ori.hint:Orientation of this stimulus (in deg)
ButtonComponent.ori.inputType:spin
ButtonComponent.ori.label:Orientation
ButtonComponent.ori.readOnly:False
ButtonComponent.ori.staticUpdater:None
ButtonComponent.ori.updates:constant
ButtonComponent.ori.val:0
ButtonComponent.ori.valType:num
ButtonComponent.padding.default:None
ButtonComponent.padding.allowedLabels:[]
ButtonComponent.padding.allowedTypes:[]
ButtonComponent.padding.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.padding.allowedVals:[]
ButtonComponent.padding.canBePath:True
ButtonComponent.padding.categ:Layout
ButtonComponent.padding.codeWanted:False
ButtonComponent.padding.direct:True
ButtonComponent.padding.hint:Defines the space between text and the textbox border
ButtonComponent.padding.inputType:single
ButtonComponent.padding.label:Padding
ButtonComponent.padding.readOnly:False
ButtonComponent.padding.staticUpdater:None
ButtonComponent.padding.updates:constant
ButtonComponent.padding.val:
ButtonComponent.padding.valType:num
ButtonComponent.pos.default:(0, 0)
ButtonComponent.pos.allowedLabels:[]
ButtonComponent.pos.allowedTypes:[]
ButtonComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.pos.allowedVals:[]
ButtonComponent.pos.canBePath:True
ButtonComponent.pos.categ:Layout
ButtonComponent.pos.codeWanted:False
ButtonComponent.pos.direct:True
ButtonComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
ButtonComponent.pos.inputType:single
ButtonComponent.pos.label:Position [x,y]
ButtonComponent.pos.readOnly:False
ButtonComponent.pos.staticUpdater:None
ButtonComponent.pos.updates:constant
ButtonComponent.pos.val:(0, 0)
ButtonComponent.pos.valType:list
ButtonComponent.save.default:'every click'
ButtonComponent.save.allowedLabels:[]
ButtonComponent.save.allowedTypes:[]
ButtonComponent.save.allowedUpdates:None
ButtonComponent.save.allowedVals:['first click', 'last click', 'every click', 'none']
ButtonComponent.save.canBePath:True
ButtonComponent.save.categ:Data
ButtonComponent.save.codeWanted:False
ButtonComponent.save.direct:False
ButtonComponent.save.hint:What clicks on this button should be saved to the data output?
ButtonComponent.save.inputType:choice
ButtonComponent.save.label:Record clicks
ButtonComponent.save.readOnly:False
ButtonComponent.save.staticUpdater:None
ButtonComponent.save.updates:None
ButtonComponent.save.val:every click
ButtonComponent.save.valType:str
ButtonComponent.saveStartStop.default:True
ButtonComponent.saveStartStop.allowedLabels:[]
ButtonComponent.saveStartStop.allowedTypes:[]
ButtonComponent.saveStartStop.allowedUpdates:None
ButtonComponent.saveStartStop.allowedVals:[]
ButtonComponent.saveStartStop.canBePath:True
ButtonComponent.saveStartStop.categ:Data
ButtonComponent.saveStartStop.codeWanted:False
ButtonComponent.saveStartStop.direct:True
ButtonComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
ButtonComponent.saveStartStop.inputType:bool
ButtonComponent.saveStartStop.label:Save onset/offset times
ButtonComponent.saveStartStop.readOnly:False
ButtonComponent.saveStartStop.staticUpdater:None
ButtonComponent.saveStartStop.updates:None
ButtonComponent.saveStartStop.val:True
ButtonComponent.saveStartStop.valType:bool
ButtonComponent.size.default:[]
ButtonComponent.size.allowedLabels:[]
ButtonComponent.size.allowedTypes:[]
ButtonComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.size.allowedVals:[]
ButtonComponent.size.canBePath:True
ButtonComponent.size.categ:Layout
ButtonComponent.size.codeWanted:False
ButtonComponent.size.direct:True
ButtonComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
ButtonComponent.size.inputType:single
ButtonComponent.size.label:Size [w,h]
ButtonComponent.size.readOnly:False
ButtonComponent.size.staticUpdater:None
ButtonComponent.size.updates:constant
ButtonComponent.size.val:
ButtonComponent.size.valType:list
ButtonComponent.startEstim.default:
ButtonComponent.startEstim.allowedLabels:[]
ButtonComponent.startEstim.allowedTypes:[]
ButtonComponent.startEstim.allowedUpdates:None
ButtonComponent.startEstim.allowedVals:[]
ButtonComponent.startEstim.canBePath:True
ButtonComponent.startEstim.categ:Basic
ButtonComponent.startEstim.codeWanted:False
ButtonComponent.startEstim.direct:False
ButtonComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ButtonComponent.startEstim.inputType:single
ButtonComponent.startEstim.label:Expected start (s)
ButtonComponent.startEstim.readOnly:False
ButtonComponent.startEstim.staticUpdater:None
ButtonComponent.startEstim.updates:None
ButtonComponent.startEstim.val:
ButtonComponent.startEstim.valType:code
ButtonComponent.startType.default:'time (s)'
ButtonComponent.startType.allowedLabels:[]
ButtonComponent.startType.allowedTypes:[]
ButtonComponent.startType.allowedUpdates:None
ButtonComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ButtonComponent.startType.canBePath:True
ButtonComponent.startType.categ:Basic
ButtonComponent.startType.codeWanted:False
ButtonComponent.startType.direct:False
ButtonComponent.startType.hint:How do you want to define your start point?
ButtonComponent.startType.inputType:choice
ButtonComponent.startType.label:start type
ButtonComponent.startType.readOnly:False
ButtonComponent.startType.staticUpdater:None
ButtonComponent.startType.updates:None
ButtonComponent.startType.val:time (s)
ButtonComponent.startType.valType:str
ButtonComponent.startVal.default:0
ButtonComponent.startVal.allowedLabels:[]
ButtonComponent.startVal.allowedTypes:[]
ButtonComponent.startVal.allowedUpdates:None
ButtonComponent.startVal.allowedVals:[]
ButtonComponent.startVal.canBePath:True
ButtonComponent.startVal.categ:Basic
ButtonComponent.startVal.codeWanted:False
ButtonComponent.startVal.direct:True
ButtonComponent.startVal.hint:When does the component start?
ButtonComponent.startVal.inputType:single
ButtonComponent.startVal.label:Start
ButtonComponent.startVal.readOnly:False
ButtonComponent.startVal.staticUpdater:None
ButtonComponent.startVal.updates:None
ButtonComponent.startVal.val:0
ButtonComponent.startVal.valType:code
ButtonComponent.stopType.default:'duration (s)'
ButtonComponent.stopType.allowedLabels:[]
ButtonComponent.stopType.allowedTypes:[]
ButtonComponent.stopType.allowedUpdates:None
ButtonComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ButtonComponent.stopType.canBePath:True
ButtonComponent.stopType.categ:Basic
ButtonComponent.stopType.codeWanted:False
ButtonComponent.stopType.direct:False
ButtonComponent.stopType.hint:How do you want to define your end point?
ButtonComponent.stopType.inputType:choice
ButtonComponent.stopType.label:stop type
ButtonComponent.stopType.readOnly:False
ButtonComponent.stopType.staticUpdater:None
ButtonComponent.stopType.updates:None
ButtonComponent.stopType.val:duration (s)
ButtonComponent.stopType.valType:str
ButtonComponent.stopVal.default:1.0
ButtonComponent.stopVal.allowedLabels:[]
ButtonComponent.stopVal.allowedTypes:[]
ButtonComponent.stopVal.allowedUpdates:[]
ButtonComponent.stopVal.allowedVals:[]
ButtonComponent.stopVal.canBePath:True
ButtonComponent.stopVal.categ:Basic
ButtonComponent.stopVal.codeWanted:False
ButtonComponent.stopVal.direct:True
ButtonComponent.stopVal.hint:When does the component end? (blank is endless)
ButtonComponent.stopVal.inputType:single
ButtonComponent.stopVal.label:Stop
ButtonComponent.stopVal.readOnly:False
ButtonComponent.stopVal.staticUpdater:None
ButtonComponent.stopVal.updates:constant
ButtonComponent.stopVal.val:1.0
ButtonComponent.stopVal.valType:code
ButtonComponent.syncScreenRefresh.default:True
ButtonComponent.syncScreenRefresh.allowedLabels:[]
ButtonComponent.syncScreenRefresh.allowedTypes:[]
ButtonComponent.syncScreenRefresh.allowedUpdates:None
ButtonComponent.syncScreenRefresh.allowedVals:[]
ButtonComponent.syncScreenRefresh.canBePath:True
ButtonComponent.syncScreenRefresh.categ:Data
ButtonComponent.syncScreenRefresh.codeWanted:False
ButtonComponent.syncScreenRefresh.direct:True
ButtonComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
ButtonComponent.syncScreenRefresh.inputType:bool
ButtonComponent.syncScreenRefresh.label:Sync timing with screen refresh
ButtonComponent.syncScreenRefresh.readOnly:True
ButtonComponent.syncScreenRefresh.staticUpdater:None
ButtonComponent.syncScreenRefresh.updates:None
ButtonComponent.syncScreenRefresh.val:True
ButtonComponent.syncScreenRefresh.valType:bool
ButtonComponent.text.default:'Click here'
ButtonComponent.text.allowedLabels:[]
ButtonComponent.text.allowedTypes:[]
ButtonComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ButtonComponent.text.allowedVals:[]
ButtonComponent.text.canBePath:True
ButtonComponent.text.categ:Basic
ButtonComponent.text.codeWanted:False
ButtonComponent.text.direct:True
ButtonComponent.text.hint:The text to be displayed
ButtonComponent.text.inputType:single
ButtonComponent.text.label:Button text
ButtonComponent.text.readOnly:False
ButtonComponent.text.staticUpdater:None
ButtonComponent.text.updates:constant
ButtonComponent.text.val:Click here
ButtonComponent.text.valType:str
ButtonComponent.timeRelativeTo.default:'button onset'
ButtonComponent.timeRelativeTo.allowedLabels:[]
ButtonComponent.timeRelativeTo.allowedTypes:[]
ButtonComponent.timeRelativeTo.allowedUpdates:None
ButtonComponent.timeRelativeTo.allowedVals:['button onset', 'experiment', 'routine']
ButtonComponent.timeRelativeTo.canBePath:True
ButtonComponent.timeRelativeTo.categ:Data
ButtonComponent.timeRelativeTo.codeWanted:False
ButtonComponent.timeRelativeTo.direct:False
ButtonComponent.timeRelativeTo.hint:What should the values of mouse.time should be relative to?
ButtonComponent.timeRelativeTo.inputType:choice
ButtonComponent.timeRelativeTo.label:Time relative to
ButtonComponent.timeRelativeTo.readOnly:False
ButtonComponent.timeRelativeTo.staticUpdater:None
ButtonComponent.timeRelativeTo.updates:constant
ButtonComponent.timeRelativeTo.val:button onset
ButtonComponent.timeRelativeTo.valType:str
ButtonComponent.units.default:'from exp settings'
ButtonComponent.units.allowedLabels:[]
ButtonComponent.units.allowedTypes:[]
ButtonComponent.units.allowedUpdates:None
ButtonComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ButtonComponent.units.canBePath:True
ButtonComponent.units.categ:Layout
ButtonComponent.units.codeWanted:False
ButtonComponent.units.direct:True
ButtonComponent.units.hint:Units of dimensions for this stimulus
ButtonComponent.units.inputType:choice
ButtonComponent.units.label:Spatial Units
ButtonComponent.units.readOnly:False
ButtonComponent.units.staticUpdater:None
ButtonComponent.units.updates:None
ButtonComponent.units.val:from exp settings
ButtonComponent.units.valType:str
CodeComponent.order:['name', 'Code Type', 'disabled', 'Before Experiment', 'Begin Experiment', 'Begin Routine', 'Each Frame', 'End Routine', 'End Experiment', 'Before JS Experiment', 'Begin JS Experiment', 'Begin JS Routine', 'Each JS Frame', 'End JS Routine', 'End JS Experiment']
CodeComponent.Before Experiment.default:
CodeComponent.Before Experiment.allowedLabels:[]
CodeComponent.Before Experiment.allowedTypes:[]
CodeComponent.Before Experiment.allowedUpdates:[]
CodeComponent.Before Experiment.allowedVals:[]
CodeComponent.Before Experiment.canBePath:True
CodeComponent.Before Experiment.categ:Basic
CodeComponent.Before Experiment.codeWanted:False
CodeComponent.Before Experiment.direct:True
CodeComponent.Before Experiment.hint:Code to run before the experiment starts (initialization); right-click checks syntax
CodeComponent.Before Experiment.inputType:multi
CodeComponent.Before Experiment.label:Before Experiment
CodeComponent.Before Experiment.readOnly:False
CodeComponent.Before Experiment.staticUpdater:None
CodeComponent.Before Experiment.updates:constant
CodeComponent.Before Experiment.val:
CodeComponent.Before Experiment.valType:extendedCode
CodeComponent.Before JS Experiment.default:
CodeComponent.Before JS Experiment.allowedLabels:[]
CodeComponent.Before JS Experiment.allowedTypes:[]
CodeComponent.Before JS Experiment.allowedUpdates:[]
CodeComponent.Before JS Experiment.allowedVals:[]
CodeComponent.Before JS Experiment.canBePath:True
CodeComponent.Before JS Experiment.categ:Basic
CodeComponent.Before JS Experiment.codeWanted:False
CodeComponent.Before JS Experiment.direct:True
CodeComponent.Before JS Experiment.hint:Code before the start of the experiment (initialization); right-click checks syntax
CodeComponent.Before JS Experiment.inputType:multi
CodeComponent.Before JS Experiment.label:Before JS Experiment
CodeComponent.Before JS Experiment.readOnly:False
CodeComponent.Before JS Experiment.staticUpdater:None
CodeComponent.Before JS Experiment.updates:constant
CodeComponent.Before JS Experiment.val:
CodeComponent.Before JS Experiment.valType:extendedCode
CodeComponent.Begin Experiment.default:
CodeComponent.Begin Experiment.allowedLabels:[]
CodeComponent.Begin Experiment.allowedTypes:[]
CodeComponent.Begin Experiment.allowedUpdates:[]
CodeComponent.Begin Experiment.allowedVals:[]
CodeComponent.Begin Experiment.canBePath:True
CodeComponent.Begin Experiment.categ:Basic
CodeComponent.Begin Experiment.codeWanted:False
CodeComponent.Begin Experiment.direct:True
CodeComponent.Begin Experiment.hint:Code at the start of the experiment ; right-click checks syntax
CodeComponent.Begin Experiment.inputType:multi
CodeComponent.Begin Experiment.label:Begin Experiment
CodeComponent.Begin Experiment.readOnly:False
CodeComponent.Begin Experiment.staticUpdater:None
CodeComponent.Begin Experiment.updates:constant
CodeComponent.Begin Experiment.val:
CodeComponent.Begin Experiment.valType:extendedCode
CodeComponent.Begin JS Experiment.default:
CodeComponent.Begin JS Experiment.allowedLabels:[]
CodeComponent.Begin JS Experiment.allowedTypes:[]
CodeComponent.Begin JS Experiment.allowedUpdates:[]
CodeComponent.Begin JS Experiment.allowedVals:[]
CodeComponent.Begin JS Experiment.canBePath:True
CodeComponent.Begin JS Experiment.categ:Basic
CodeComponent.Begin JS Experiment.codeWanted:False
CodeComponent.Begin JS Experiment.direct:True
CodeComponent.Begin JS Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin JS Experiment.inputType:multi
CodeComponent.Begin JS Experiment.label:Begin JS Experiment
CodeComponent.Begin JS Experiment.readOnly:False
CodeComponent.Begin JS Experiment.staticUpdater:None
CodeComponent.Begin JS Experiment.updates:constant
CodeComponent.Begin JS Experiment.val:
CodeComponent.Begin JS Experiment.valType:extendedCode
CodeComponent.Begin JS Routine.default:
CodeComponent.Begin JS Routine.allowedLabels:[]
CodeComponent.Begin JS Routine.allowedTypes:[]
CodeComponent.Begin JS Routine.allowedUpdates:[]
CodeComponent.Begin JS Routine.allowedVals:[]
CodeComponent.Begin JS Routine.canBePath:True
CodeComponent.Begin JS Routine.categ:Basic
CodeComponent.Begin JS Routine.codeWanted:False
CodeComponent.Begin JS Routine.direct:True
CodeComponent.Begin JS Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin JS Routine.inputType:multi
CodeComponent.Begin JS Routine.label:Begin JS Routine
CodeComponent.Begin JS Routine.readOnly:False
CodeComponent.Begin JS Routine.staticUpdater:None
CodeComponent.Begin JS Routine.updates:constant
CodeComponent.Begin JS Routine.val:
CodeComponent.Begin JS Routine.valType:extendedCode
CodeComponent.Begin Routine.default:
CodeComponent.Begin Routine.allowedLabels:[]
CodeComponent.Begin Routine.allowedTypes:[]
CodeComponent.Begin Routine.allowedUpdates:[]
CodeComponent.Begin Routine.allowedVals:[]
CodeComponent.Begin Routine.canBePath:True
CodeComponent.Begin Routine.categ:Basic
CodeComponent.Begin Routine.codeWanted:False
CodeComponent.Begin Routine.direct:True
CodeComponent.Begin Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin Routine.inputType:multi
CodeComponent.Begin Routine.label:Begin Routine
CodeComponent.Begin Routine.readOnly:False
CodeComponent.Begin Routine.staticUpdater:None
CodeComponent.Begin Routine.updates:constant
CodeComponent.Begin Routine.val:
CodeComponent.Begin Routine.valType:extendedCode
CodeComponent.Code Type.default:'Auto->JS'
CodeComponent.Code Type.allowedLabels:[]
CodeComponent.Code Type.allowedTypes:[]
CodeComponent.Code Type.allowedUpdates:None
CodeComponent.Code Type.allowedVals:['Py', 'JS', 'Both', 'Auto->JS']
CodeComponent.Code Type.canBePath:True
CodeComponent.Code Type.categ:Basic
CodeComponent.Code Type.codeWanted:False
CodeComponent.Code Type.direct:False
CodeComponent.Code Type.hint:Display Python or JS Code
CodeComponent.Code Type.inputType:choice
CodeComponent.Code Type.label:Code Type
CodeComponent.Code Type.readOnly:False
CodeComponent.Code Type.staticUpdater:None
CodeComponent.Code Type.updates:None
CodeComponent.Code Type.val:Auto->JS
CodeComponent.Code Type.valType:str
CodeComponent.Each Frame.default:
CodeComponent.Each Frame.allowedLabels:[]
CodeComponent.Each Frame.allowedTypes:[]
CodeComponent.Each Frame.allowedUpdates:[]
CodeComponent.Each Frame.allowedVals:[]
CodeComponent.Each Frame.canBePath:True
CodeComponent.Each Frame.categ:Basic
CodeComponent.Each Frame.codeWanted:False
CodeComponent.Each Frame.direct:True
CodeComponent.Each Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each Frame.inputType:multi
CodeComponent.Each Frame.label:Each Frame
CodeComponent.Each Frame.readOnly:False
CodeComponent.Each Frame.staticUpdater:None
CodeComponent.Each Frame.updates:constant
CodeComponent.Each Frame.val:
CodeComponent.Each Frame.valType:extendedCode
CodeComponent.Each JS Frame.default:
CodeComponent.Each JS Frame.allowedLabels:[]
CodeComponent.Each JS Frame.allowedTypes:[]
CodeComponent.Each JS Frame.allowedUpdates:[]
CodeComponent.Each JS Frame.allowedVals:[]
CodeComponent.Each JS Frame.canBePath:True
CodeComponent.Each JS Frame.categ:Basic
CodeComponent.Each JS Frame.codeWanted:False
CodeComponent.Each JS Frame.direct:True
CodeComponent.Each JS Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each JS Frame.inputType:multi
CodeComponent.Each JS Frame.label:Each JS Frame
CodeComponent.Each JS Frame.readOnly:False
CodeComponent.Each JS Frame.staticUpdater:None
CodeComponent.Each JS Frame.updates:constant
CodeComponent.Each JS Frame.val:
CodeComponent.Each JS Frame.valType:extendedCode
CodeComponent.End Experiment.default:
CodeComponent.End Experiment.allowedLabels:[]
CodeComponent.End Experiment.allowedTypes:[]
CodeComponent.End Experiment.allowedUpdates:[]
CodeComponent.End Experiment.allowedVals:[]
CodeComponent.End Experiment.canBePath:True
CodeComponent.End Experiment.categ:Basic
CodeComponent.End Experiment.codeWanted:False
CodeComponent.End Experiment.direct:True
CodeComponent.End Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End Experiment.inputType:multi
CodeComponent.End Experiment.label:End Experiment
CodeComponent.End Experiment.readOnly:False
CodeComponent.End Experiment.staticUpdater:None
CodeComponent.End Experiment.updates:constant
CodeComponent.End Experiment.val:
CodeComponent.End Experiment.valType:extendedCode
CodeComponent.End JS Experiment.default:
CodeComponent.End JS Experiment.allowedLabels:[]
CodeComponent.End JS Experiment.allowedTypes:[]
CodeComponent.End JS Experiment.allowedUpdates:[]
CodeComponent.End JS Experiment.allowedVals:[]
CodeComponent.End JS Experiment.canBePath:True
CodeComponent.End JS Experiment.categ:Basic
CodeComponent.End JS Experiment.codeWanted:False
CodeComponent.End JS Experiment.direct:True
CodeComponent.End JS Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End JS Experiment.inputType:multi
CodeComponent.End JS Experiment.label:End JS Experiment
CodeComponent.End JS Experiment.readOnly:False
CodeComponent.End JS Experiment.staticUpdater:None
CodeComponent.End JS Experiment.updates:constant
CodeComponent.End JS Experiment.val:
CodeComponent.End JS Experiment.valType:extendedCode
CodeComponent.End JS Routine.default:
CodeComponent.End JS Routine.allowedLabels:[]
CodeComponent.End JS Routine.allowedTypes:[]
CodeComponent.End JS Routine.allowedUpdates:[]
CodeComponent.End JS Routine.allowedVals:[]
CodeComponent.End JS Routine.canBePath:True
CodeComponent.End JS Routine.categ:Basic
CodeComponent.End JS Routine.codeWanted:False
CodeComponent.End JS Routine.direct:True
CodeComponent.End JS Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End JS Routine.inputType:multi
CodeComponent.End JS Routine.label:End JS Routine
CodeComponent.End JS Routine.readOnly:False
CodeComponent.End JS Routine.staticUpdater:None
CodeComponent.End JS Routine.updates:constant
CodeComponent.End JS Routine.val:
CodeComponent.End JS Routine.valType:extendedCode
CodeComponent.End Routine.default:
CodeComponent.End Routine.allowedLabels:[]
CodeComponent.End Routine.allowedTypes:[]
CodeComponent.End Routine.allowedUpdates:[]
CodeComponent.End Routine.allowedVals:[]
CodeComponent.End Routine.canBePath:True
CodeComponent.End Routine.categ:Basic
CodeComponent.End Routine.codeWanted:False
CodeComponent.End Routine.direct:True
CodeComponent.End Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End Routine.inputType:multi
CodeComponent.End Routine.label:End Routine
CodeComponent.End Routine.readOnly:False
CodeComponent.End Routine.staticUpdater:None
CodeComponent.End Routine.updates:constant
CodeComponent.End Routine.val:
CodeComponent.End Routine.valType:extendedCode
CodeComponent.disabled.default:False
CodeComponent.disabled.allowedLabels:[]
CodeComponent.disabled.allowedTypes:[]
CodeComponent.disabled.allowedUpdates:None
CodeComponent.disabled.allowedVals:[]
CodeComponent.disabled.canBePath:True
CodeComponent.disabled.categ:Testing
CodeComponent.disabled.codeWanted:False
CodeComponent.disabled.direct:False
CodeComponent.disabled.hint:Disable this component
CodeComponent.disabled.inputType:bool
CodeComponent.disabled.label:Disable component
CodeComponent.disabled.readOnly:False
CodeComponent.disabled.staticUpdater:None
CodeComponent.disabled.updates:None
CodeComponent.disabled.val:False
CodeComponent.disabled.valType:bool
CodeComponent.name.default:code
CodeComponent.name.allowedLabels:[]
CodeComponent.name.allowedTypes:[]
CodeComponent.name.allowedUpdates:None
CodeComponent.name.allowedVals:[]
CodeComponent.name.canBePath:True
CodeComponent.name.categ:Basic
CodeComponent.name.codeWanted:False
CodeComponent.name.direct:True
CodeComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
CodeComponent.name.inputType:single
CodeComponent.name.label:Name
CodeComponent.name.readOnly:False
CodeComponent.name.staticUpdater:None
CodeComponent.name.val:code
CodeComponent.name.valType:code
DotsComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'dotSize', 'fieldSize', 'size', 'fieldPos', 'pos', 'units', 'anchor', 'ori', 'nDots', 'dir', 'speed']
DotsComponent.anchor.default:'center'
DotsComponent.anchor.allowedLabels:[]
DotsComponent.anchor.allowedTypes:[]
DotsComponent.anchor.allowedUpdates:None
DotsComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
DotsComponent.anchor.canBePath:True
DotsComponent.anchor.categ:Layout
DotsComponent.anchor.codeWanted:False
DotsComponent.anchor.direct:True
DotsComponent.anchor.hint:Which point on the field should be anchored to its exact position?
DotsComponent.anchor.inputType:choice
DotsComponent.anchor.label:Field Anchor
DotsComponent.anchor.readOnly:False
DotsComponent.anchor.staticUpdater:None
DotsComponent.anchor.updates:constant
DotsComponent.anchor.val:center
DotsComponent.anchor.valType:str
DotsComponent.coherence.default:1.0
DotsComponent.coherence.allowedLabels:[]
DotsComponent.coherence.allowedTypes:[]
DotsComponent.coherence.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.coherence.allowedVals:[]
DotsComponent.coherence.canBePath:True
DotsComponent.coherence.categ:Dots
DotsComponent.coherence.codeWanted:False
DotsComponent.coherence.direct:True
DotsComponent.coherence.hint:Coherence of the dots (fraction moving in the signal direction on any one frame)
DotsComponent.coherence.inputType:single
DotsComponent.coherence.label:Coherence
DotsComponent.coherence.readOnly:False
DotsComponent.coherence.staticUpdater:None
DotsComponent.coherence.updates:constant
DotsComponent.coherence.val:1.0
DotsComponent.coherence.valType:num
DotsComponent.color.default:[1.0,1.0,1.0]
DotsComponent.color.allowedLabels:[]
DotsComponent.color.allowedTypes:[]
DotsComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.color.allowedVals:[]
DotsComponent.color.canBePath:True
DotsComponent.color.categ:Appearance
DotsComponent.color.codeWanted:True
DotsComponent.color.direct:True
DotsComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
DotsComponent.color.inputType:color
DotsComponent.color.label:Dot Color
DotsComponent.color.readOnly:False
DotsComponent.color.staticUpdater:None
DotsComponent.color.updates:constant
DotsComponent.color.val:$[1.0,1.0,1.0]
DotsComponent.color.valType:color
DotsComponent.colorSpace.default:'rgb'
DotsComponent.colorSpace.allowedLabels:[]
DotsComponent.colorSpace.allowedTypes:[]
DotsComponent.colorSpace.allowedUpdates:None
DotsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
DotsComponent.colorSpace.canBePath:True
DotsComponent.colorSpace.categ:Appearance
DotsComponent.colorSpace.codeWanted:False
DotsComponent.colorSpace.direct:True
DotsComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
DotsComponent.colorSpace.inputType:choice
DotsComponent.colorSpace.label:Dot Color Space
DotsComponent.colorSpace.readOnly:False
DotsComponent.colorSpace.staticUpdater:None
DotsComponent.colorSpace.updates:constant
DotsComponent.colorSpace.val:rgb
DotsComponent.colorSpace.valType:str
DotsComponent.contrast.default:1.0
DotsComponent.contrast.allowedLabels:[]
DotsComponent.contrast.allowedTypes:[]
DotsComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.contrast.allowedVals:[]
DotsComponent.contrast.canBePath:True
DotsComponent.contrast.categ:Appearance
DotsComponent.contrast.codeWanted:False
DotsComponent.contrast.direct:True
DotsComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
DotsComponent.contrast.inputType:single
DotsComponent.contrast.label:Contrast
DotsComponent.contrast.readOnly:False
DotsComponent.contrast.staticUpdater:None
DotsComponent.contrast.updates:constant
DotsComponent.contrast.val:1
DotsComponent.contrast.valType:num
DotsComponent.dir.default:0.0
DotsComponent.dir.allowedLabels:[]
DotsComponent.dir.allowedTypes:[]
DotsComponent.dir.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dir.allowedVals:[]
DotsComponent.dir.canBePath:True
DotsComponent.dir.categ:Dots
DotsComponent.dir.codeWanted:False
DotsComponent.dir.direct:True
DotsComponent.dir.hint:Direction of motion for the signal dots (degrees)
DotsComponent.dir.inputType:spin
DotsComponent.dir.label:Direction
DotsComponent.dir.readOnly:False
DotsComponent.dir.staticUpdater:None
DotsComponent.dir.updates:constant
DotsComponent.dir.val:0.0
DotsComponent.dir.valType:num
DotsComponent.disabled.default:False
DotsComponent.disabled.allowedLabels:[]
DotsComponent.disabled.allowedTypes:[]
DotsComponent.disabled.allowedUpdates:None
DotsComponent.disabled.allowedVals:[]
DotsComponent.disabled.canBePath:True
DotsComponent.disabled.categ:Testing
DotsComponent.disabled.codeWanted:False
DotsComponent.disabled.direct:False
DotsComponent.disabled.hint:Disable this component
DotsComponent.disabled.inputType:bool
DotsComponent.disabled.label:Disable component
DotsComponent.disabled.readOnly:False
DotsComponent.disabled.staticUpdater:None
DotsComponent.disabled.updates:None
DotsComponent.disabled.val:False
DotsComponent.disabled.valType:bool
DotsComponent.dotLife.default:3.0
DotsComponent.dotLife.allowedLabels:[]
DotsComponent.dotLife.allowedTypes:[]
DotsComponent.dotLife.allowedUpdates:None
DotsComponent.dotLife.allowedVals:[]
DotsComponent.dotLife.canBePath:True
DotsComponent.dotLife.categ:Dots
DotsComponent.dotLife.codeWanted:False
DotsComponent.dotLife.direct:True
DotsComponent.dotLife.hint:Number of frames before each dot is killed and randomly assigned a new position
DotsComponent.dotLife.inputType:spin
DotsComponent.dotLife.label:Dot life-time
DotsComponent.dotLife.readOnly:False
DotsComponent.dotLife.staticUpdater:None
DotsComponent.dotLife.updates:None
DotsComponent.dotLife.val:3
DotsComponent.dotLife.valType:num
DotsComponent.dotSize.default:2.0
DotsComponent.dotSize.allowedLabels:[]
DotsComponent.dotSize.allowedTypes:[]
DotsComponent.dotSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dotSize.allowedVals:[]
DotsComponent.dotSize.canBePath:True
DotsComponent.dotSize.categ:Layout
DotsComponent.dotSize.codeWanted:False
DotsComponent.dotSize.direct:True
DotsComponent.dotSize.hint:Size of the dots IN PIXELS regardless of the set units
DotsComponent.dotSize.inputType:spin
DotsComponent.dotSize.label:Dot size
DotsComponent.dotSize.readOnly:False
DotsComponent.dotSize.staticUpdater:None
DotsComponent.dotSize.updates:constant
DotsComponent.dotSize.val:2
DotsComponent.dotSize.valType:num
DotsComponent.durationEstim.default:
DotsComponent.durationEstim.allowedLabels:[]
DotsComponent.durationEstim.allowedTypes:[]
DotsComponent.durationEstim.allowedUpdates:None
DotsComponent.durationEstim.allowedVals:[]
DotsComponent.durationEstim.canBePath:True
DotsComponent.durationEstim.categ:Basic
DotsComponent.durationEstim.codeWanted:False
DotsComponent.durationEstim.direct:False
DotsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
DotsComponent.durationEstim.inputType:single
DotsComponent.durationEstim.label:Expected duration (s)
DotsComponent.durationEstim.readOnly:False
DotsComponent.durationEstim.staticUpdater:None
DotsComponent.durationEstim.updates:None
DotsComponent.durationEstim.val:
DotsComponent.durationEstim.valType:code
DotsComponent.fieldPos.default:(0.0, 0.0)
DotsComponent.fieldPos.allowedLabels:[]
DotsComponent.fieldPos.allowedTypes:[]
DotsComponent.fieldPos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldPos.allowedVals:[]
DotsComponent.fieldPos.canBePath:True
DotsComponent.fieldPos.categ:Layout
DotsComponent.fieldPos.codeWanted:False
DotsComponent.fieldPos.direct:True
DotsComponent.fieldPos.hint:Where is the field centred (in the specified units)?
DotsComponent.fieldPos.inputType:single
DotsComponent.fieldPos.label:Field position
DotsComponent.fieldPos.readOnly:False
DotsComponent.fieldPos.staticUpdater:None
DotsComponent.fieldPos.updates:constant
DotsComponent.fieldPos.val:(0.0, 0.0)
DotsComponent.fieldPos.valType:list
DotsComponent.fieldShape.default:'circle'
DotsComponent.fieldShape.allowedLabels:[]
DotsComponent.fieldShape.allowedTypes:[]
DotsComponent.fieldShape.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldShape.allowedVals:['circle', 'square']
DotsComponent.fieldShape.canBePath:True
DotsComponent.fieldShape.categ:Layout
DotsComponent.fieldShape.codeWanted:False
DotsComponent.fieldShape.direct:True
DotsComponent.fieldShape.hint:What is the shape of the field?
DotsComponent.fieldShape.inputType:choice
DotsComponent.fieldShape.label:Field shape
DotsComponent.fieldShape.readOnly:False
DotsComponent.fieldShape.staticUpdater:None
DotsComponent.fieldShape.updates:constant
DotsComponent.fieldShape.val:circle
DotsComponent.fieldShape.valType:str
DotsComponent.fieldSize.default:1.0
DotsComponent.fieldSize.allowedLabels:[]
DotsComponent.fieldSize.allowedTypes:[]
DotsComponent.fieldSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldSize.allowedVals:[]
DotsComponent.fieldSize.canBePath:True
DotsComponent.fieldSize.categ:Layout
DotsComponent.fieldSize.codeWanted:False
DotsComponent.fieldSize.direct:True
DotsComponent.fieldSize.hint:What is the size of the field (in the specified units)?
DotsComponent.fieldSize.inputType:single
DotsComponent.fieldSize.label:Field size
DotsComponent.fieldSize.readOnly:False
DotsComponent.fieldSize.staticUpdater:None
DotsComponent.fieldSize.updates:constant
DotsComponent.fieldSize.val:1.0
DotsComponent.fieldSize.valType:num
DotsComponent.nDots.default:100
DotsComponent.nDots.allowedLabels:[]
DotsComponent.nDots.allowedTypes:[]
DotsComponent.nDots.allowedUpdates:None
DotsComponent.nDots.allowedVals:[]
DotsComponent.nDots.canBePath:True
DotsComponent.nDots.categ:Dots
DotsComponent.nDots.codeWanted:False
DotsComponent.nDots.direct:True
DotsComponent.nDots.hint:Number of dots in the field (for circular fields this will be average number of dots)
DotsComponent.nDots.inputType:spin
DotsComponent.nDots.label:Number of dots
DotsComponent.nDots.readOnly:False
DotsComponent.nDots.staticUpdater:None
DotsComponent.nDots.updates:constant
DotsComponent.nDots.val:100
DotsComponent.nDots.valType:int
DotsComponent.name.default:dots
DotsComponent.name.allowedLabels:[]
DotsComponent.name.allowedTypes:[]
DotsComponent.name.allowedUpdates:None
DotsComponent.name.allowedVals:[]
DotsComponent.name.canBePath:True
DotsComponent.name.categ:Basic
DotsComponent.name.codeWanted:False
DotsComponent.name.direct:True
DotsComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
DotsComponent.name.inputType:single
DotsComponent.name.label:Name
DotsComponent.name.readOnly:False
DotsComponent.name.staticUpdater:None
DotsComponent.name.val:dots
DotsComponent.name.valType:code
DotsComponent.noiseDots.default:'direction'
DotsComponent.noiseDots.allowedLabels:[]
DotsComponent.noiseDots.allowedTypes:[]
DotsComponent.noiseDots.allowedUpdates:None
DotsComponent.noiseDots.allowedVals:['direction', 'position', 'walk']
DotsComponent.noiseDots.canBePath:True
DotsComponent.noiseDots.categ:Dots
DotsComponent.noiseDots.codeWanted:False
DotsComponent.noiseDots.direct:True
DotsComponent.noiseDots.hint:What governs the behaviour of the noise dots? See Scase et al.
DotsComponent.noiseDots.inputType:choice
DotsComponent.noiseDots.label:Noise dots
DotsComponent.noiseDots.readOnly:False
DotsComponent.noiseDots.staticUpdater:None
DotsComponent.noiseDots.updates:None
DotsComponent.noiseDots.val:direction
DotsComponent.noiseDots.valType:str
DotsComponent.opacity.default:None
DotsComponent.opacity.allowedLabels:[]
DotsComponent.opacity.allowedTypes:[]
DotsComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.opacity.allowedVals:[]
DotsComponent.opacity.canBePath:True
DotsComponent.opacity.categ:Appearance
DotsComponent.opacity.codeWanted:False
DotsComponent.opacity.direct:True
DotsComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
DotsComponent.opacity.inputType:single
DotsComponent.opacity.label:Opacity
DotsComponent.opacity.readOnly:False
DotsComponent.opacity.staticUpdater:None
DotsComponent.opacity.updates:constant
DotsComponent.opacity.val:
DotsComponent.opacity.valType:num
DotsComponent.refreshDots.default:'repeat'
DotsComponent.refreshDots.allowedLabels:[]
DotsComponent.refreshDots.allowedTypes:[]
DotsComponent.refreshDots.allowedUpdates:[]
DotsComponent.refreshDots.allowedVals:['none', 'repeat']
DotsComponent.refreshDots.canBePath:True
DotsComponent.refreshDots.categ:Dots
DotsComponent.refreshDots.codeWanted:False
DotsComponent.refreshDots.direct:False
DotsComponent.refreshDots.hint:When should the whole sample of dots be refreshed
DotsComponent.refreshDots.inputType:choice
DotsComponent.refreshDots.label:Dot refresh rule
DotsComponent.refreshDots.readOnly:False
DotsComponent.refreshDots.staticUpdater:None
DotsComponent.refreshDots.updates:None
DotsComponent.refreshDots.val:repeat
DotsComponent.refreshDots.valType:str
DotsComponent.saveStartStop.default:True
DotsComponent.saveStartStop.allowedLabels:[]
DotsComponent.saveStartStop.allowedTypes:[]
DotsComponent.saveStartStop.allowedUpdates:None
DotsComponent.saveStartStop.allowedVals:[]
DotsComponent.saveStartStop.canBePath:True
DotsComponent.saveStartStop.categ:Data
DotsComponent.saveStartStop.codeWanted:False
DotsComponent.saveStartStop.direct:True
DotsComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
DotsComponent.saveStartStop.inputType:bool
DotsComponent.saveStartStop.label:Save onset/offset times
DotsComponent.saveStartStop.readOnly:False
DotsComponent.saveStartStop.staticUpdater:None
DotsComponent.saveStartStop.updates:None
DotsComponent.saveStartStop.val:True
DotsComponent.saveStartStop.valType:bool
DotsComponent.signalDots.default:'same'
DotsComponent.signalDots.allowedLabels:[]
DotsComponent.signalDots.allowedTypes:[]
DotsComponent.signalDots.allowedUpdates:None
DotsComponent.signalDots.allowedVals:['same', 'different']
DotsComponent.signalDots.canBePath:True
DotsComponent.signalDots.categ:Dots
DotsComponent.signalDots.codeWanted:False
DotsComponent.signalDots.direct:True
DotsComponent.signalDots.hint:On each frame are the signals dots remaining the same or changing? See Scase et al.
DotsComponent.signalDots.inputType:choice
DotsComponent.signalDots.label:Signal dots
DotsComponent.signalDots.readOnly:False
DotsComponent.signalDots.staticUpdater:None
DotsComponent.signalDots.updates:None
DotsComponent.signalDots.val:same
DotsComponent.signalDots.valType:str
DotsComponent.speed.default:0.1
DotsComponent.speed.allowedLabels:[]
DotsComponent.speed.allowedTypes:[]
DotsComponent.speed.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.speed.allowedVals:[]
DotsComponent.speed.canBePath:True
DotsComponent.speed.categ:Dots
DotsComponent.speed.codeWanted:False
DotsComponent.speed.direct:True
DotsComponent.speed.hint:Speed of the dots (displacement per frame in the specified units)
DotsComponent.speed.inputType:single
DotsComponent.speed.label:Speed
DotsComponent.speed.readOnly:False
DotsComponent.speed.staticUpdater:None
DotsComponent.speed.updates:constant
DotsComponent.speed.val:0.1
DotsComponent.speed.valType:num
DotsComponent.startEstim.default:
DotsComponent.startEstim.allowedLabels:[]
DotsComponent.startEstim.allowedTypes:[]
DotsComponent.startEstim.allowedUpdates:None
DotsComponent.startEstim.allowedVals:[]
DotsComponent.startEstim.canBePath:True
DotsComponent.startEstim.categ:Basic
DotsComponent.startEstim.codeWanted:False
DotsComponent.startEstim.direct:False
DotsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
DotsComponent.startEstim.inputType:single
DotsComponent.startEstim.label:Expected start (s)
DotsComponent.startEstim.readOnly:False
DotsComponent.startEstim.staticUpdater:None
DotsComponent.startEstim.updates:None
DotsComponent.startEstim.val:
DotsComponent.startEstim.valType:code
DotsComponent.startType.default:'time (s)'
DotsComponent.startType.allowedLabels:[]
DotsComponent.startType.allowedTypes:[]
DotsComponent.startType.allowedUpdates:None
DotsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
DotsComponent.startType.canBePath:True
DotsComponent.startType.categ:Basic
DotsComponent.startType.codeWanted:False
DotsComponent.startType.direct:False
DotsComponent.startType.hint:How do you want to define your start point?
DotsComponent.startType.inputType:choice
DotsComponent.startType.label:start type
DotsComponent.startType.readOnly:False
DotsComponent.startType.staticUpdater:None
DotsComponent.startType.updates:None
DotsComponent.startType.val:time (s)
DotsComponent.startType.valType:str
DotsComponent.startVal.default:0.0
DotsComponent.startVal.allowedLabels:[]
DotsComponent.startVal.allowedTypes:[]
DotsComponent.startVal.allowedUpdates:None
DotsComponent.startVal.allowedVals:[]
DotsComponent.startVal.canBePath:True
DotsComponent.startVal.categ:Basic
DotsComponent.startVal.codeWanted:False
DotsComponent.startVal.direct:True
DotsComponent.startVal.hint:When does the component start?
DotsComponent.startVal.inputType:single
DotsComponent.startVal.label:Start
DotsComponent.startVal.readOnly:False
DotsComponent.startVal.staticUpdater:None
DotsComponent.startVal.updates:None
DotsComponent.startVal.val:0.0
DotsComponent.startVal.valType:code
DotsComponent.stopType.default:'duration (s)'
DotsComponent.stopType.allowedLabels:[]
DotsComponent.stopType.allowedTypes:[]
DotsComponent.stopType.allowedUpdates:None
DotsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
DotsComponent.stopType.canBePath:True
DotsComponent.stopType.categ:Basic
DotsComponent.stopType.codeWanted:False
DotsComponent.stopType.direct:False
DotsComponent.stopType.hint:How do you want to define your end point?
DotsComponent.stopType.inputType:choice
DotsComponent.stopType.label:stop type
DotsComponent.stopType.readOnly:False
DotsComponent.stopType.staticUpdater:None
DotsComponent.stopType.updates:None
DotsComponent.stopType.val:duration (s)
DotsComponent.stopType.valType:str
DotsComponent.stopVal.default:1.0
DotsComponent.stopVal.allowedLabels:[]
DotsComponent.stopVal.allowedTypes:[]
DotsComponent.stopVal.allowedUpdates:[]
DotsComponent.stopVal.allowedVals:[]
DotsComponent.stopVal.canBePath:True
DotsComponent.stopVal.categ:Basic
DotsComponent.stopVal.codeWanted:False
DotsComponent.stopVal.direct:True
DotsComponent.stopVal.hint:When does the component end? (blank is endless)
DotsComponent.stopVal.inputType:single
DotsComponent.stopVal.label:Stop
DotsComponent.stopVal.readOnly:False
DotsComponent.stopVal.staticUpdater:None
DotsComponent.stopVal.updates:constant
DotsComponent.stopVal.val:1.0
DotsComponent.stopVal.valType:code
DotsComponent.syncScreenRefresh.default:True
DotsComponent.syncScreenRefresh.allowedLabels:[]
DotsComponent.syncScreenRefresh.allowedTypes:[]
DotsComponent.syncScreenRefresh.allowedUpdates:None
DotsComponent.syncScreenRefresh.allowedVals:[]
DotsComponent.syncScreenRefresh.canBePath:True
DotsComponent.syncScreenRefresh.categ:Data
DotsComponent.syncScreenRefresh.codeWanted:False
DotsComponent.syncScreenRefresh.direct:True
DotsComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
DotsComponent.syncScreenRefresh.inputType:bool
DotsComponent.syncScreenRefresh.label:Sync timing with screen refresh
DotsComponent.syncScreenRefresh.readOnly:True
DotsComponent.syncScreenRefresh.staticUpdater:None
DotsComponent.syncScreenRefresh.updates:None
DotsComponent.syncScreenRefresh.val:True
DotsComponent.syncScreenRefresh.valType:bool
DotsComponent.units.default:'from exp settings'
DotsComponent.units.allowedLabels:[]
DotsComponent.units.allowedTypes:[]
DotsComponent.units.allowedUpdates:None
DotsComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
DotsComponent.units.canBePath:True
DotsComponent.units.categ:Layout
DotsComponent.units.codeWanted:False
DotsComponent.units.direct:True
DotsComponent.units.hint:Units of dimensions for this stimulus
DotsComponent.units.inputType:choice
DotsComponent.units.label:Spatial Units
DotsComponent.units.readOnly:False
DotsComponent.units.staticUpdater:None
DotsComponent.units.updates:None
DotsComponent.units.val:from exp settings
DotsComponent.units.valType:str
EmotivMarkingComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'emotiv_marker_label', 'emotiv_marker_value', 'emotiv_stop_marker']
EmotivMarkingComponent.disabled.default:False
EmotivMarkingComponent.disabled.allowedLabels:[]
EmotivMarkingComponent.disabled.allowedTypes:[]
EmotivMarkingComponent.disabled.allowedUpdates:None
EmotivMarkingComponent.disabled.allowedVals:[]
EmotivMarkingComponent.disabled.canBePath:True
EmotivMarkingComponent.disabled.categ:Testing
EmotivMarkingComponent.disabled.codeWanted:False
EmotivMarkingComponent.disabled.direct:False
EmotivMarkingComponent.disabled.hint:Disable this component
EmotivMarkingComponent.disabled.inputType:bool
EmotivMarkingComponent.disabled.label:Disable component
EmotivMarkingComponent.disabled.readOnly:False
EmotivMarkingComponent.disabled.staticUpdater:None
EmotivMarkingComponent.disabled.updates:None
EmotivMarkingComponent.disabled.val:False
EmotivMarkingComponent.disabled.valType:bool
EmotivMarkingComponent.durationEstim.default:0.01
EmotivMarkingComponent.durationEstim.allowedLabels:[]
EmotivMarkingComponent.durationEstim.allowedTypes:[]
EmotivMarkingComponent.durationEstim.allowedUpdates:None
EmotivMarkingComponent.durationEstim.allowedVals:[]
EmotivMarkingComponent.durationEstim.canBePath:True
EmotivMarkingComponent.durationEstim.categ:Basic
EmotivMarkingComponent.durationEstim.codeWanted:False
EmotivMarkingComponent.durationEstim.direct:False
EmotivMarkingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EmotivMarkingComponent.durationEstim.inputType:single
EmotivMarkingComponent.durationEstim.label:Expected duration (s)
EmotivMarkingComponent.durationEstim.readOnly:False
EmotivMarkingComponent.durationEstim.staticUpdater:None
EmotivMarkingComponent.durationEstim.updates:None
EmotivMarkingComponent.durationEstim.val:0.01
EmotivMarkingComponent.durationEstim.valType:code
EmotivMarkingComponent.emotiv_marker_label.default:'label'
EmotivMarkingComponent.emotiv_marker_label.allowedLabels:[]
EmotivMarkingComponent.emotiv_marker_label.allowedTypes:[]
EmotivMarkingComponent.emotiv_marker_label.allowedUpdates:['constant', 'set every repeat']
EmotivMarkingComponent.emotiv_marker_label.allowedVals:[]
EmotivMarkingComponent.emotiv_marker_label.canBePath:True
EmotivMarkingComponent.emotiv_marker_label.categ:Basic
EmotivMarkingComponent.emotiv_marker_label.codeWanted:False
EmotivMarkingComponent.emotiv_marker_label.direct:True
EmotivMarkingComponent.emotiv_marker_label.hint:Label of the marker to be inserted (interpreted as a string)
EmotivMarkingComponent.emotiv_marker_label.inputType:single
EmotivMarkingComponent.emotiv_marker_label.label:Marker Label
EmotivMarkingComponent.emotiv_marker_label.readOnly:False
EmotivMarkingComponent.emotiv_marker_label.staticUpdater:None
EmotivMarkingComponent.emotiv_marker_label.updates:constant
EmotivMarkingComponent.emotiv_marker_label.val:label
EmotivMarkingComponent.emotiv_marker_label.valType:str
EmotivMarkingComponent.emotiv_marker_value.default:'1'
EmotivMarkingComponent.emotiv_marker_value.allowedLabels:[]
EmotivMarkingComponent.emotiv_marker_value.allowedTypes:[]
EmotivMarkingComponent.emotiv_marker_value.allowedUpdates:['constant', 'set every repeat']
EmotivMarkingComponent.emotiv_marker_value.allowedVals:[]
EmotivMarkingComponent.emotiv_marker_value.canBePath:True
EmotivMarkingComponent.emotiv_marker_value.categ:Basic
EmotivMarkingComponent.emotiv_marker_value.codeWanted:False
EmotivMarkingComponent.emotiv_marker_value.direct:True
EmotivMarkingComponent.emotiv_marker_value.hint:Value of the marker to be inserted (interpreted as a string)
EmotivMarkingComponent.emotiv_marker_value.inputType:single
EmotivMarkingComponent.emotiv_marker_value.label:Marker Value
EmotivMarkingComponent.emotiv_marker_value.readOnly:False
EmotivMarkingComponent.emotiv_marker_value.staticUpdater:None
EmotivMarkingComponent.emotiv_marker_value.updates:constant
EmotivMarkingComponent.emotiv_marker_value.val:1
EmotivMarkingComponent.emotiv_marker_value.valType:str
EmotivMarkingComponent.name.default:eeg_marker
EmotivMarkingComponent.name.allowedLabels:[]
EmotivMarkingComponent.name.allowedTypes:[]
EmotivMarkingComponent.name.allowedUpdates:None
EmotivMarkingComponent.name.allowedVals:[]
EmotivMarkingComponent.name.canBePath:True
EmotivMarkingComponent.name.categ:Basic
EmotivMarkingComponent.name.codeWanted:False
EmotivMarkingComponent.name.direct:True
EmotivMarkingComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
EmotivMarkingComponent.name.inputType:single
EmotivMarkingComponent.name.label:Name
EmotivMarkingComponent.name.readOnly:False
EmotivMarkingComponent.name.staticUpdater:None
EmotivMarkingComponent.name.val:eeg_marker
EmotivMarkingComponent.name.valType:code
EmotivMarkingComponent.saveStartStop.default:True
EmotivMarkingComponent.saveStartStop.allowedLabels:[]
EmotivMarkingComponent.saveStartStop.allowedTypes:[]
EmotivMarkingComponent.saveStartStop.allowedUpdates:None
EmotivMarkingComponent.saveStartStop.allowedVals:[]
EmotivMarkingComponent.saveStartStop.canBePath:True
EmotivMarkingComponent.saveStartStop.categ:Data
EmotivMarkingComponent.saveStartStop.codeWanted:False
EmotivMarkingComponent.saveStartStop.direct:True
EmotivMarkingComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
EmotivMarkingComponent.saveStartStop.inputType:bool
EmotivMarkingComponent.saveStartStop.label:Save onset/offset times
EmotivMarkingComponent.saveStartStop.readOnly:False
EmotivMarkingComponent.saveStartStop.staticUpdater:None
EmotivMarkingComponent.saveStartStop.updates:None
EmotivMarkingComponent.saveStartStop.val:True
EmotivMarkingComponent.saveStartStop.valType:bool
EmotivMarkingComponent.startEstim.default:
EmotivMarkingComponent.startEstim.allowedLabels:[]
EmotivMarkingComponent.startEstim.allowedTypes:[]
EmotivMarkingComponent.startEstim.allowedUpdates:None
EmotivMarkingComponent.startEstim.allowedVals:[]
EmotivMarkingComponent.startEstim.canBePath:True
EmotivMarkingComponent.startEstim.categ:Basic
EmotivMarkingComponent.startEstim.codeWanted:False
EmotivMarkingComponent.startEstim.direct:False
EmotivMarkingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EmotivMarkingComponent.startEstim.inputType:single
EmotivMarkingComponent.startEstim.label:Expected start (s)
EmotivMarkingComponent.startEstim.readOnly:False
EmotivMarkingComponent.startEstim.staticUpdater:None
EmotivMarkingComponent.startEstim.updates:None
EmotivMarkingComponent.startEstim.val:
EmotivMarkingComponent.startEstim.valType:code
EmotivMarkingComponent.startType.default:'time (s)'
EmotivMarkingComponent.startType.allowedLabels:[]
EmotivMarkingComponent.startType.allowedTypes:[]
EmotivMarkingComponent.startType.allowedUpdates:None
EmotivMarkingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EmotivMarkingComponent.startType.canBePath:True
EmotivMarkingComponent.startType.categ:Basic
EmotivMarkingComponent.startType.codeWanted:False
EmotivMarkingComponent.startType.direct:False
EmotivMarkingComponent.startType.hint:How do you want to define your start point?
EmotivMarkingComponent.startType.inputType:choice
EmotivMarkingComponent.startType.label:start type
EmotivMarkingComponent.startType.readOnly:False
EmotivMarkingComponent.startType.staticUpdater:None
EmotivMarkingComponent.startType.updates:None
EmotivMarkingComponent.startType.val:time (s)
EmotivMarkingComponent.startType.valType:str
EmotivMarkingComponent.startVal.default:0.0
EmotivMarkingComponent.startVal.allowedLabels:[]
EmotivMarkingComponent.startVal.allowedTypes:[]
EmotivMarkingComponent.startVal.allowedUpdates:None
EmotivMarkingComponent.startVal.allowedVals:[]
EmotivMarkingComponent.startVal.canBePath:True
EmotivMarkingComponent.startVal.categ:Basic
EmotivMarkingComponent.startVal.codeWanted:False
EmotivMarkingComponent.startVal.direct:True
EmotivMarkingComponent.startVal.hint:When does the component start?
EmotivMarkingComponent.startVal.inputType:single
EmotivMarkingComponent.startVal.label:Start
EmotivMarkingComponent.startVal.readOnly:False
EmotivMarkingComponent.startVal.staticUpdater:None
EmotivMarkingComponent.startVal.updates:None
EmotivMarkingComponent.startVal.val:0.0
EmotivMarkingComponent.startVal.valType:code
EmotivMarkingComponent.stopType.default:'duration (s)'
EmotivMarkingComponent.stopType.allowedLabels:[]
EmotivMarkingComponent.stopType.allowedTypes:[]
EmotivMarkingComponent.stopType.allowedUpdates:None
EmotivMarkingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EmotivMarkingComponent.stopType.canBePath:True
EmotivMarkingComponent.stopType.categ:Basic
EmotivMarkingComponent.stopType.codeWanted:False
EmotivMarkingComponent.stopType.direct:False
EmotivMarkingComponent.stopType.hint:How do you want to define your end point?
EmotivMarkingComponent.stopType.inputType:choice
EmotivMarkingComponent.stopType.label:stop type
EmotivMarkingComponent.stopType.readOnly:False
EmotivMarkingComponent.stopType.staticUpdater:None
EmotivMarkingComponent.stopType.updates:None
EmotivMarkingComponent.stopType.val:duration (s)
EmotivMarkingComponent.stopType.valType:str
EmotivMarkingComponent.stopVal.default:1
EmotivMarkingComponent.stopVal.allowedLabels:[]
EmotivMarkingComponent.stopVal.allowedTypes:[]
EmotivMarkingComponent.stopVal.allowedUpdates:[]
EmotivMarkingComponent.stopVal.allowedVals:[]
EmotivMarkingComponent.stopVal.canBePath:True
EmotivMarkingComponent.stopVal.categ:Basic
EmotivMarkingComponent.stopVal.codeWanted:False
EmotivMarkingComponent.stopVal.direct:True
EmotivMarkingComponent.stopVal.hint:When does the component end? (blank is endless)
EmotivMarkingComponent.stopVal.inputType:single
EmotivMarkingComponent.stopVal.label:Stop
EmotivMarkingComponent.stopVal.readOnly:False
EmotivMarkingComponent.stopVal.staticUpdater:None
EmotivMarkingComponent.stopVal.updates:constant
EmotivMarkingComponent.stopVal.val:1
EmotivMarkingComponent.stopVal.valType:code
EmotivMarkingComponent.emotiv_stop_marker.default:False
EmotivMarkingComponent.emotiv_stop_marker.allowedLabels:[]
EmotivMarkingComponent.emotiv_stop_marker.allowedTypes:[]
EmotivMarkingComponent.emotiv_stop_marker.allowedUpdates:[]
EmotivMarkingComponent.emotiv_stop_marker.allowedVals:[True, False]
EmotivMarkingComponent.emotiv_stop_marker.canBePath:True
EmotivMarkingComponent.emotiv_stop_marker.categ:Basic
EmotivMarkingComponent.emotiv_stop_marker.codeWanted:False
EmotivMarkingComponent.emotiv_stop_marker.direct:True
EmotivMarkingComponent.emotiv_stop_marker.hint:Check this box to include a stop marker
EmotivMarkingComponent.emotiv_stop_marker.inputType:bool
EmotivMarkingComponent.emotiv_stop_marker.label:Stop Marker
EmotivMarkingComponent.emotiv_stop_marker.readOnly:False
EmotivMarkingComponent.emotiv_stop_marker.staticUpdater:None
EmotivMarkingComponent.emotiv_stop_marker.updates:constant
EmotivMarkingComponent.emotiv_stop_marker.val:False
EmotivMarkingComponent.emotiv_stop_marker.valType:bool
EmotivMarkingComponent.syncScreenRefresh.default:False
EmotivMarkingComponent.syncScreenRefresh.allowedLabels:[]
EmotivMarkingComponent.syncScreenRefresh.allowedTypes:[]
EmotivMarkingComponent.syncScreenRefresh.allowedUpdates:None
EmotivMarkingComponent.syncScreenRefresh.allowedVals:[]
EmotivMarkingComponent.syncScreenRefresh.canBePath:True
EmotivMarkingComponent.syncScreenRefresh.categ:Data
EmotivMarkingComponent.syncScreenRefresh.codeWanted:False
EmotivMarkingComponent.syncScreenRefresh.direct:True
EmotivMarkingComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
EmotivMarkingComponent.syncScreenRefresh.inputType:bool
EmotivMarkingComponent.syncScreenRefresh.label:Sync timing with screen refresh
EmotivMarkingComponent.syncScreenRefresh.readOnly:False
EmotivMarkingComponent.syncScreenRefresh.staticUpdater:None
EmotivMarkingComponent.syncScreenRefresh.updates:None
EmotivMarkingComponent.syncScreenRefresh.val:False
EmotivMarkingComponent.syncScreenRefresh.valType:bool
EmotivRecordingComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType']
EmotivRecordingComponent.disabled.default:False
EmotivRecordingComponent.disabled.allowedLabels:[]
EmotivRecordingComponent.disabled.allowedTypes:[]
EmotivRecordingComponent.disabled.allowedUpdates:None
EmotivRecordingComponent.disabled.allowedVals:[]
EmotivRecordingComponent.disabled.canBePath:True
EmotivRecordingComponent.disabled.categ:Testing
EmotivRecordingComponent.disabled.codeWanted:False
EmotivRecordingComponent.disabled.direct:False
EmotivRecordingComponent.disabled.hint:Disable this component
EmotivRecordingComponent.disabled.inputType:bool
EmotivRecordingComponent.disabled.label:Disable component
EmotivRecordingComponent.disabled.readOnly:False
EmotivRecordingComponent.disabled.staticUpdater:None
EmotivRecordingComponent.disabled.updates:None
EmotivRecordingComponent.disabled.val:False
EmotivRecordingComponent.disabled.valType:bool
EmotivRecordingComponent.durationEstim.default:
EmotivRecordingComponent.durationEstim.allowedLabels:[]
EmotivRecordingComponent.durationEstim.allowedTypes:[]
EmotivRecordingComponent.durationEstim.allowedUpdates:None
EmotivRecordingComponent.durationEstim.allowedVals:[]
EmotivRecordingComponent.durationEstim.canBePath:True
EmotivRecordingComponent.durationEstim.categ:Basic
EmotivRecordingComponent.durationEstim.codeWanted:False
EmotivRecordingComponent.durationEstim.direct:False
EmotivRecordingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EmotivRecordingComponent.durationEstim.inputType:single
EmotivRecordingComponent.durationEstim.label:Expected duration (s)
EmotivRecordingComponent.durationEstim.readOnly:False
EmotivRecordingComponent.durationEstim.staticUpdater:None
EmotivRecordingComponent.durationEstim.updates:None
EmotivRecordingComponent.durationEstim.val:
EmotivRecordingComponent.durationEstim.valType:code
EmotivRecordingComponent.name.default:cortex_rec
EmotivRecordingComponent.name.allowedLabels:[]
EmotivRecordingComponent.name.allowedTypes:[]
EmotivRecordingComponent.name.allowedUpdates:None
EmotivRecordingComponent.name.allowedVals:[]
EmotivRecordingComponent.name.canBePath:True
EmotivRecordingComponent.name.categ:Basic
EmotivRecordingComponent.name.codeWanted:False
EmotivRecordingComponent.name.direct:True
EmotivRecordingComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
EmotivRecordingComponent.name.inputType:single
EmotivRecordingComponent.name.label:Name
EmotivRecordingComponent.name.readOnly:False
EmotivRecordingComponent.name.staticUpdater:None
EmotivRecordingComponent.name.val:cortex_rec
EmotivRecordingComponent.name.valType:code
EmotivRecordingComponent.saveStartStop.default:False
EmotivRecordingComponent.saveStartStop.allowedLabels:[]
EmotivRecordingComponent.saveStartStop.allowedTypes:[]
EmotivRecordingComponent.saveStartStop.allowedUpdates:None
EmotivRecordingComponent.saveStartStop.allowedVals:[]
EmotivRecordingComponent.saveStartStop.canBePath:True
EmotivRecordingComponent.saveStartStop.categ:Data
EmotivRecordingComponent.saveStartStop.codeWanted:False
EmotivRecordingComponent.saveStartStop.direct:True
EmotivRecordingComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
EmotivRecordingComponent.saveStartStop.inputType:bool
EmotivRecordingComponent.saveStartStop.label:Save onset/offset times
EmotivRecordingComponent.saveStartStop.readOnly:False
EmotivRecordingComponent.saveStartStop.staticUpdater:None
EmotivRecordingComponent.saveStartStop.updates:None
EmotivRecordingComponent.saveStartStop.val:False
EmotivRecordingComponent.saveStartStop.valType:bool
EmotivRecordingComponent.startEstim.default:
EmotivRecordingComponent.startEstim.allowedLabels:[]
EmotivRecordingComponent.startEstim.allowedTypes:[]
EmotivRecordingComponent.startEstim.allowedUpdates:None
EmotivRecordingComponent.startEstim.allowedVals:[]
EmotivRecordingComponent.startEstim.canBePath:True
EmotivRecordingComponent.startEstim.categ:Basic
EmotivRecordingComponent.startEstim.codeWanted:False
EmotivRecordingComponent.startEstim.direct:False
EmotivRecordingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EmotivRecordingComponent.startEstim.inputType:single
EmotivRecordingComponent.startEstim.label:Expected start (s)
EmotivRecordingComponent.startEstim.readOnly:False
EmotivRecordingComponent.startEstim.staticUpdater:None
EmotivRecordingComponent.startEstim.updates:None
EmotivRecordingComponent.startEstim.val:
EmotivRecordingComponent.startEstim.valType:code
EmotivRecordingComponent.startType.default:'time (s)'
EmotivRecordingComponent.startType.allowedLabels:[]
EmotivRecordingComponent.startType.allowedTypes:[]
EmotivRecordingComponent.startType.allowedUpdates:None
EmotivRecordingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EmotivRecordingComponent.startType.canBePath:True
EmotivRecordingComponent.startType.categ:Basic
EmotivRecordingComponent.startType.codeWanted:False
EmotivRecordingComponent.startType.direct:False
EmotivRecordingComponent.startType.hint:How do you want to define your start point?
EmotivRecordingComponent.startType.inputType:choice
EmotivRecordingComponent.startType.label:start type
EmotivRecordingComponent.startType.readOnly:False
EmotivRecordingComponent.startType.staticUpdater:None
EmotivRecordingComponent.startType.updates:None
EmotivRecordingComponent.startType.val:time (s)
EmotivRecordingComponent.startType.valType:str
EmotivRecordingComponent.startVal.default:0
EmotivRecordingComponent.startVal.allowedLabels:[]
EmotivRecordingComponent.startVal.allowedTypes:[]
EmotivRecordingComponent.startVal.allowedUpdates:None
EmotivRecordingComponent.startVal.allowedVals:[]
EmotivRecordingComponent.startVal.canBePath:True
EmotivRecordingComponent.startVal.categ:Basic
EmotivRecordingComponent.startVal.codeWanted:False
EmotivRecordingComponent.startVal.direct:True
EmotivRecordingComponent.startVal.hint:When does the component start?
EmotivRecordingComponent.startVal.inputType:single
EmotivRecordingComponent.startVal.label:Start
EmotivRecordingComponent.startVal.readOnly:False
EmotivRecordingComponent.startVal.staticUpdater:None
EmotivRecordingComponent.startVal.updates:None
EmotivRecordingComponent.startVal.val:0
EmotivRecordingComponent.startVal.valType:code
EmotivRecordingComponent.stopType.default:'duration (s)'
EmotivRecordingComponent.stopType.allowedLabels:[]
EmotivRecordingComponent.stopType.allowedTypes:[]
EmotivRecordingComponent.stopType.allowedUpdates:None
EmotivRecordingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EmotivRecordingComponent.stopType.canBePath:True
EmotivRecordingComponent.stopType.categ:Basic
EmotivRecordingComponent.stopType.codeWanted:False
EmotivRecordingComponent.stopType.direct:False
EmotivRecordingComponent.stopType.hint:How do you want to define your end point?
EmotivRecordingComponent.stopType.inputType:choice
EmotivRecordingComponent.stopType.label:stop type
EmotivRecordingComponent.stopType.readOnly:False
EmotivRecordingComponent.stopType.staticUpdater:None
EmotivRecordingComponent.stopType.updates:None
EmotivRecordingComponent.stopType.val:duration (s)
EmotivRecordingComponent.stopType.valType:str
EmotivRecordingComponent.stopVal.default:1
EmotivRecordingComponent.stopVal.allowedLabels:[]
EmotivRecordingComponent.stopVal.allowedTypes:[]
EmotivRecordingComponent.stopVal.allowedUpdates:[]
EmotivRecordingComponent.stopVal.allowedVals:[]
EmotivRecordingComponent.stopVal.canBePath:True
EmotivRecordingComponent.stopVal.categ:Basic
EmotivRecordingComponent.stopVal.codeWanted:False
EmotivRecordingComponent.stopVal.direct:True
EmotivRecordingComponent.stopVal.hint:When does the component end? (blank is endless)
EmotivRecordingComponent.stopVal.inputType:single
EmotivRecordingComponent.stopVal.label:Stop
EmotivRecordingComponent.stopVal.readOnly:False
EmotivRecordingComponent.stopVal.staticUpdater:None
EmotivRecordingComponent.stopVal.updates:constant
EmotivRecordingComponent.stopVal.val:1
EmotivRecordingComponent.stopVal.valType:code
EmotivRecordingComponent.syncScreenRefresh.default:False
EmotivRecordingComponent.syncScreenRefresh.allowedLabels:[]
EmotivRecordingComponent.syncScreenRefresh.allowedTypes:[]
EmotivRecordingComponent.syncScreenRefresh.allowedUpdates:None
EmotivRecordingComponent.syncScreenRefresh.allowedVals:[]
EmotivRecordingComponent.syncScreenRefresh.canBePath:True
EmotivRecordingComponent.syncScreenRefresh.categ:Data
EmotivRecordingComponent.syncScreenRefresh.codeWanted:False
EmotivRecordingComponent.syncScreenRefresh.direct:True
EmotivRecordingComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
EmotivRecordingComponent.syncScreenRefresh.inputType:bool
EmotivRecordingComponent.syncScreenRefresh.label:Sync timing with screen refresh
EmotivRecordingComponent.syncScreenRefresh.readOnly:False
EmotivRecordingComponent.syncScreenRefresh.staticUpdater:None
EmotivRecordingComponent.syncScreenRefresh.updates:None
EmotivRecordingComponent.syncScreenRefresh.val:False
EmotivRecordingComponent.syncScreenRefresh.valType:bool
EnvGratingComponent.order:['carrier', 'mask']
EnvGratingComponent.anchor.default:'center'
EnvGratingComponent.anchor.allowedLabels:[]
EnvGratingComponent.anchor.allowedTypes:[]
EnvGratingComponent.anchor.allowedUpdates:None
EnvGratingComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
EnvGratingComponent.anchor.canBePath:True
EnvGratingComponent.anchor.categ:Layout
EnvGratingComponent.anchor.codeWanted:False
EnvGratingComponent.anchor.direct:True
EnvGratingComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
EnvGratingComponent.anchor.inputType:choice
EnvGratingComponent.anchor.label:Anchor
EnvGratingComponent.anchor.readOnly:False
EnvGratingComponent.anchor.staticUpdater:None
EnvGratingComponent.anchor.updates:constant
EnvGratingComponent.anchor.val:center
EnvGratingComponent.anchor.valType:str
EnvGratingComponent.beat.default:False
EnvGratingComponent.beat.allowedLabels:[]
EnvGratingComponent.beat.allowedTypes:[]
EnvGratingComponent.beat.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.beat.allowedVals:[]
EnvGratingComponent.beat.canBePath:True
EnvGratingComponent.beat.categ:Envelope
EnvGratingComponent.beat.codeWanted:False
EnvGratingComponent.beat.direct:True
EnvGratingComponent.beat.hint:Do you want a 'beat'? [beat = carrier*envelope, no beat = carrier*(1+envelope), True/False, Y/N]
EnvGratingComponent.beat.inputType:single
EnvGratingComponent.beat.label:Is modulation a beat
EnvGratingComponent.beat.readOnly:False
EnvGratingComponent.beat.staticUpdater:None
EnvGratingComponent.beat.updates:constant
EnvGratingComponent.beat.val:False
EnvGratingComponent.beat.valType:str
EnvGratingComponent.blendmode.default:'avg'
EnvGratingComponent.blendmode.allowedLabels:[]
EnvGratingComponent.blendmode.allowedTypes:[]
EnvGratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.blendmode.allowedVals:['avg', 'add']
EnvGratingComponent.blendmode.canBePath:True
EnvGratingComponent.blendmode.categ:Appearance
EnvGratingComponent.blendmode.codeWanted:False
EnvGratingComponent.blendmode.direct:True
EnvGratingComponent.blendmode.hint:OpenGL Blendmode. Avg is most common mode in PsychoPy, add is useful if combining a beat with the carrier image or numpy array at point of display
EnvGratingComponent.blendmode.inputType:choice
EnvGratingComponent.blendmode.label:OpenGL blend mode
EnvGratingComponent.blendmode.readOnly:False
EnvGratingComponent.blendmode.staticUpdater:None
EnvGratingComponent.blendmode.updates:constant
EnvGratingComponent.blendmode.val:avg
EnvGratingComponent.blendmode.valType:str
EnvGratingComponent.carrier.default:'sin'
EnvGratingComponent.carrier.allowedLabels:[]
EnvGratingComponent.carrier.allowedTypes:[]
EnvGratingComponent.carrier.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.carrier.allowedVals:['sin', 'sqr', 'sinXsin']
EnvGratingComponent.carrier.canBePath:True
EnvGratingComponent.carrier.categ:Carrier
EnvGratingComponent.carrier.codeWanted:False
EnvGratingComponent.carrier.direct:True
EnvGratingComponent.carrier.hint:The (2D) texture of the background - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.carrier.inputType:file
EnvGratingComponent.carrier.label:Carrier texture
EnvGratingComponent.carrier.readOnly:False
EnvGratingComponent.carrier.staticUpdater:None
EnvGratingComponent.carrier.updates:constant
EnvGratingComponent.carrier.val:sin
EnvGratingComponent.carrier.valType:file
EnvGratingComponent.color.default:[1,1,1]
EnvGratingComponent.color.allowedLabels:[]
EnvGratingComponent.color.allowedTypes:[]
EnvGratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.color.allowedVals:[]
EnvGratingComponent.color.canBePath:True
EnvGratingComponent.color.categ:Appearance
EnvGratingComponent.color.codeWanted:True
EnvGratingComponent.color.direct:True
EnvGratingComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
EnvGratingComponent.color.inputType:color
EnvGratingComponent.color.label:Foreground Color
EnvGratingComponent.color.readOnly:False
EnvGratingComponent.color.staticUpdater:None
EnvGratingComponent.color.updates:constant
EnvGratingComponent.color.val:$[1,1,1]
EnvGratingComponent.color.valType:color
EnvGratingComponent.colorSpace.default:'rgb'
EnvGratingComponent.colorSpace.allowedLabels:[]
EnvGratingComponent.colorSpace.allowedTypes:[]
EnvGratingComponent.colorSpace.allowedUpdates:None
EnvGratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
EnvGratingComponent.colorSpace.canBePath:True
EnvGratingComponent.colorSpace.categ:Appearance
EnvGratingComponent.colorSpace.codeWanted:False
EnvGratingComponent.colorSpace.direct:True
EnvGratingComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
EnvGratingComponent.colorSpace.inputType:choice
EnvGratingComponent.colorSpace.label:Color Space
EnvGratingComponent.colorSpace.readOnly:False
EnvGratingComponent.colorSpace.staticUpdater:None
EnvGratingComponent.colorSpace.updates:constant
EnvGratingComponent.colorSpace.val:rgb
EnvGratingComponent.colorSpace.valType:str
EnvGratingComponent.contrast.default:0.5
EnvGratingComponent.contrast.allowedLabels:[]
EnvGratingComponent.contrast.allowedTypes:[]
EnvGratingComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.contrast.allowedVals:[]
EnvGratingComponent.contrast.canBePath:True
EnvGratingComponent.contrast.categ:Carrier
EnvGratingComponent.contrast.codeWanted:False
EnvGratingComponent.contrast.direct:True
EnvGratingComponent.contrast.hint:Contrast of background carrier
EnvGratingComponent.contrast.inputType:single
EnvGratingComponent.contrast.label:Carrier contrast
EnvGratingComponent.contrast.readOnly:False
EnvGratingComponent.contrast.staticUpdater:None
EnvGratingComponent.contrast.updates:constant
EnvGratingComponent.contrast.val:0.5
EnvGratingComponent.contrast.valType:num
EnvGratingComponent.disabled.default:False
EnvGratingComponent.disabled.allowedLabels:[]
EnvGratingComponent.disabled.allowedTypes:[]
EnvGratingComponent.disabled.allowedUpdates:None
EnvGratingComponent.disabled.allowedVals:[]
EnvGratingComponent.disabled.canBePath:True
EnvGratingComponent.disabled.categ:Testing
EnvGratingComponent.disabled.codeWanted:False
EnvGratingComponent.disabled.direct:False
EnvGratingComponent.disabled.hint:Disable this component
EnvGratingComponent.disabled.inputType:bool
EnvGratingComponent.disabled.label:Disable component
EnvGratingComponent.disabled.readOnly:False
EnvGratingComponent.disabled.staticUpdater:None
EnvGratingComponent.disabled.updates:None
EnvGratingComponent.disabled.val:False
EnvGratingComponent.disabled.valType:bool
EnvGratingComponent.durationEstim.default:
EnvGratingComponent.durationEstim.allowedLabels:[]
EnvGratingComponent.durationEstim.allowedTypes:[]
EnvGratingComponent.durationEstim.allowedUpdates:None
EnvGratingComponent.durationEstim.allowedVals:[]
EnvGratingComponent.durationEstim.canBePath:True
EnvGratingComponent.durationEstim.categ:Basic
EnvGratingComponent.durationEstim.codeWanted:False
EnvGratingComponent.durationEstim.direct:False
EnvGratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EnvGratingComponent.durationEstim.inputType:single
EnvGratingComponent.durationEstim.label:Expected duration (s)
EnvGratingComponent.durationEstim.readOnly:False
EnvGratingComponent.durationEstim.staticUpdater:None
EnvGratingComponent.durationEstim.updates:None
EnvGratingComponent.durationEstim.val:
EnvGratingComponent.durationEstim.valType:code
EnvGratingComponent.envelope.default:'sin'
EnvGratingComponent.envelope.allowedLabels:[]
EnvGratingComponent.envelope.allowedTypes:[]
EnvGratingComponent.envelope.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envelope.allowedVals:['sin', 'sqr', 'sinXsin']
EnvGratingComponent.envelope.canBePath:True
EnvGratingComponent.envelope.categ:Envelope
EnvGratingComponent.envelope.codeWanted:False
EnvGratingComponent.envelope.direct:True
EnvGratingComponent.envelope.hint:The (2D) texture of the envelope - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.envelope.inputType:file
EnvGratingComponent.envelope.label:Envelope texture
EnvGratingComponent.envelope.readOnly:False
EnvGratingComponent.envelope.staticUpdater:None
EnvGratingComponent.envelope.updates:constant
EnvGratingComponent.envelope.val:sin
EnvGratingComponent.envelope.valType:file
EnvGratingComponent.envori.default:0.0
EnvGratingComponent.envori.allowedLabels:[]
EnvGratingComponent.envori.allowedTypes:[]
EnvGratingComponent.envori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envori.allowedVals:[]
EnvGratingComponent.envori.canBePath:True
EnvGratingComponent.envori.categ:Envelope
EnvGratingComponent.envori.codeWanted:False
EnvGratingComponent.envori.direct:True
EnvGratingComponent.envori.hint:Orientation of the modulation envelope(wraps in range 0-360)
EnvGratingComponent.envori.inputType:single
EnvGratingComponent.envori.label:Envelope orientation
EnvGratingComponent.envori.readOnly:False
EnvGratingComponent.envori.staticUpdater:None
EnvGratingComponent.envori.updates:constant
EnvGratingComponent.envori.val:0.0
EnvGratingComponent.envori.valType:num
EnvGratingComponent.envphase.default:0.0
EnvGratingComponent.envphase.allowedLabels:[]
EnvGratingComponent.envphase.allowedTypes:[]
EnvGratingComponent.envphase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envphase.allowedVals:[]
EnvGratingComponent.envphase.canBePath:True
EnvGratingComponent.envphase.categ:Envelope
EnvGratingComponent.envphase.codeWanted:False
EnvGratingComponent.envphase.direct:True
EnvGratingComponent.envphase.hint:Spatial positioning of the modulation envelope(wraps in range 0-1.0)
EnvGratingComponent.envphase.inputType:single
EnvGratingComponent.envphase.label:Envelope phase
EnvGratingComponent.envphase.readOnly:False
EnvGratingComponent.envphase.staticUpdater:None
EnvGratingComponent.envphase.updates:constant
EnvGratingComponent.envphase.val:0.0
EnvGratingComponent.envphase.valType:num
EnvGratingComponent.envsf.default:1.0
EnvGratingComponent.envsf.allowedLabels:[]
EnvGratingComponent.envsf.allowedTypes:[]
EnvGratingComponent.envsf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envsf.allowedVals:[]
EnvGratingComponent.envsf.canBePath:True
EnvGratingComponent.envsf.categ:Envelope
EnvGratingComponent.envsf.codeWanted:False
EnvGratingComponent.envsf.direct:True
EnvGratingComponent.envsf.hint:Spatial frequency of the modulation envelope repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.envsf.inputType:single
EnvGratingComponent.envsf.label:Envelope spatial frequency
EnvGratingComponent.envsf.readOnly:False
EnvGratingComponent.envsf.staticUpdater:None
EnvGratingComponent.envsf.updates:constant
EnvGratingComponent.envsf.val:1.0
EnvGratingComponent.envsf.valType:num
EnvGratingComponent.interpolate.default:'linear'
EnvGratingComponent.interpolate.allowedLabels:[]
EnvGratingComponent.interpolate.allowedTypes:[]
EnvGratingComponent.interpolate.allowedUpdates:[]
EnvGratingComponent.interpolate.allowedVals:['linear', 'nearest']
EnvGratingComponent.interpolate.canBePath:True
EnvGratingComponent.interpolate.categ:Carrier
EnvGratingComponent.interpolate.codeWanted:False
EnvGratingComponent.interpolate.direct:False
EnvGratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
EnvGratingComponent.interpolate.inputType:choice
EnvGratingComponent.interpolate.label:Interpolate
EnvGratingComponent.interpolate.readOnly:False
EnvGratingComponent.interpolate.staticUpdater:None
EnvGratingComponent.interpolate.updates:constant
EnvGratingComponent.interpolate.val:linear
EnvGratingComponent.interpolate.valType:str
EnvGratingComponent.mask.default:'None'
EnvGratingComponent.mask.allowedLabels:[]
EnvGratingComponent.mask.allowedTypes:[]
EnvGratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.mask.allowedVals:['gauss', 'circle']
EnvGratingComponent.mask.canBePath:True
EnvGratingComponent.mask.categ:Carrier
EnvGratingComponent.mask.codeWanted:False
EnvGratingComponent.mask.direct:True
EnvGratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
EnvGratingComponent.mask.inputType:file
EnvGratingComponent.mask.label:Mask
EnvGratingComponent.mask.readOnly:False
EnvGratingComponent.mask.staticUpdater:None
EnvGratingComponent.mask.updates:constant
EnvGratingComponent.mask.val:None
EnvGratingComponent.mask.valType:file
EnvGratingComponent.moddepth.default:1.0
EnvGratingComponent.moddepth.allowedLabels:[]
EnvGratingComponent.moddepth.allowedTypes:[]
EnvGratingComponent.moddepth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.moddepth.allowedVals:[]
EnvGratingComponent.moddepth.canBePath:True
EnvGratingComponent.moddepth.categ:Envelope
EnvGratingComponent.moddepth.codeWanted:False
EnvGratingComponent.moddepth.direct:True
EnvGratingComponent.moddepth.hint:Modulation depth of modulation envelope
EnvGratingComponent.moddepth.inputType:single
EnvGratingComponent.moddepth.label:Envelope modulation depth
EnvGratingComponent.moddepth.readOnly:False
EnvGratingComponent.moddepth.staticUpdater:None
EnvGratingComponent.moddepth.updates:constant
EnvGratingComponent.moddepth.val:1.0
EnvGratingComponent.moddepth.valType:num
EnvGratingComponent.name.default:env_grating
EnvGratingComponent.name.allowedLabels:[]
EnvGratingComponent.name.allowedTypes:[]
EnvGratingComponent.name.allowedUpdates:None
EnvGratingComponent.name.allowedVals:[]
EnvGratingComponent.name.canBePath:True
EnvGratingComponent.name.categ:Basic
EnvGratingComponent.name.codeWanted:False
EnvGratingComponent.name.direct:True
EnvGratingComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
EnvGratingComponent.name.inputType:single
EnvGratingComponent.name.label:Name
EnvGratingComponent.name.readOnly:False
EnvGratingComponent.name.staticUpdater:None
EnvGratingComponent.name.val:env_grating
EnvGratingComponent.name.valType:code
EnvGratingComponent.opacity.default:None
EnvGratingComponent.opacity.allowedLabels:[]
EnvGratingComponent.opacity.allowedTypes:[]
EnvGratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.opacity.allowedVals:[]
EnvGratingComponent.opacity.canBePath:True
EnvGratingComponent.opacity.categ:Appearance
EnvGratingComponent.opacity.codeWanted:False
EnvGratingComponent.opacity.direct:True
EnvGratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
EnvGratingComponent.opacity.inputType:single
EnvGratingComponent.opacity.label:Opacity
EnvGratingComponent.opacity.readOnly:False
EnvGratingComponent.opacity.staticUpdater:None
EnvGratingComponent.opacity.updates:constant
EnvGratingComponent.opacity.val:
EnvGratingComponent.opacity.valType:num
EnvGratingComponent.ori.default:0.0
EnvGratingComponent.ori.allowedLabels:[]
EnvGratingComponent.ori.allowedTypes:[]
EnvGratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.ori.allowedVals:[-360, 360]
EnvGratingComponent.ori.canBePath:True
EnvGratingComponent.ori.categ:Carrier
EnvGratingComponent.ori.codeWanted:False
EnvGratingComponent.ori.direct:True
EnvGratingComponent.ori.hint:Orientation of this stimulus (in deg)
EnvGratingComponent.ori.inputType:spin
EnvGratingComponent.ori.label:Orientation
EnvGratingComponent.ori.readOnly:False
EnvGratingComponent.ori.staticUpdater:None
EnvGratingComponent.ori.updates:constant
EnvGratingComponent.ori.val:0
EnvGratingComponent.ori.valType:num
EnvGratingComponent.phase.default:0.0
EnvGratingComponent.phase.allowedLabels:[]
EnvGratingComponent.phase.allowedTypes:[]
EnvGratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.phase.allowedVals:[]
EnvGratingComponent.phase.canBePath:True
EnvGratingComponent.phase.categ:Carrier
EnvGratingComponent.phase.codeWanted:False
EnvGratingComponent.phase.direct:True
EnvGratingComponent.phase.hint:Spatial positioning of the background carrier (wraps in range 0-1.0)
EnvGratingComponent.phase.inputType:single
EnvGratingComponent.phase.label:Carrier phase (in cycles)
EnvGratingComponent.phase.readOnly:False
EnvGratingComponent.phase.staticUpdater:None
EnvGratingComponent.phase.updates:constant
EnvGratingComponent.phase.val:0.0
EnvGratingComponent.phase.valType:num
EnvGratingComponent.pos.default:(0, 0)
EnvGratingComponent.pos.allowedLabels:[]
EnvGratingComponent.pos.allowedTypes:[]
EnvGratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.pos.allowedVals:[]
EnvGratingComponent.pos.canBePath:True
EnvGratingComponent.pos.categ:Layout
EnvGratingComponent.pos.codeWanted:False
EnvGratingComponent.pos.direct:True
EnvGratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
EnvGratingComponent.pos.inputType:single
EnvGratingComponent.pos.label:Position [x,y]
EnvGratingComponent.pos.readOnly:False
EnvGratingComponent.pos.staticUpdater:None
EnvGratingComponent.pos.updates:constant
EnvGratingComponent.pos.val:(0, 0)
EnvGratingComponent.pos.valType:list
EnvGratingComponent.power.default:1.0
EnvGratingComponent.power.allowedLabels:[]
EnvGratingComponent.power.allowedTypes:[]
EnvGratingComponent.power.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.power.allowedVals:[]
EnvGratingComponent.power.canBePath:True
EnvGratingComponent.power.categ:Envelope
EnvGratingComponent.power.codeWanted:False
EnvGratingComponent.power.direct:True
EnvGratingComponent.power.hint:Power of modulation envelope. The modulator will be raised to this power according to the equation S=cC*(1+mM)^power, where C is the carrier and M is the modulator. and c and m are there respective contrast and modulation depth. Only works with AM envelopes (hence +1) in equation. Power is ignored if a beat is requested. This is used to obtain the square root of the modulator (power = 0.5) which is useful if combining two envelope gratings with different carriers and a 180 degree phase shift as the resulting combined signal will not have any reduction in local contrast at any point in the image. This is similar - but not identical to - the method used by Landy and Oruc, Vis Res 2002. Note overall contrast (apparent carrier contrast) will be altered.
EnvGratingComponent.power.inputType:single
EnvGratingComponent.power.label:Power to which envelope is raised
EnvGratingComponent.power.readOnly:False
EnvGratingComponent.power.staticUpdater:None
EnvGratingComponent.power.updates:constant
EnvGratingComponent.power.val:1.0
EnvGratingComponent.power.valType:num
EnvGratingComponent.saveStartStop.default:True
EnvGratingComponent.saveStartStop.allowedLabels:[]
EnvGratingComponent.saveStartStop.allowedTypes:[]
EnvGratingComponent.saveStartStop.allowedUpdates:None
EnvGratingComponent.saveStartStop.allowedVals:[]
EnvGratingComponent.saveStartStop.canBePath:True
EnvGratingComponent.saveStartStop.categ:Data
EnvGratingComponent.saveStartStop.codeWanted:False
EnvGratingComponent.saveStartStop.direct:True
EnvGratingComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
EnvGratingComponent.saveStartStop.inputType:bool
EnvGratingComponent.saveStartStop.label:Save onset/offset times
EnvGratingComponent.saveStartStop.readOnly:False
EnvGratingComponent.saveStartStop.staticUpdater:None
EnvGratingComponent.saveStartStop.updates:None
EnvGratingComponent.saveStartStop.val:True
EnvGratingComponent.saveStartStop.valType:bool
EnvGratingComponent.sf.default:1.0
EnvGratingComponent.sf.allowedLabels:[]
EnvGratingComponent.sf.allowedTypes:[]
EnvGratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.sf.allowedVals:[]
EnvGratingComponent.sf.canBePath:True
EnvGratingComponent.sf.categ:Carrier
EnvGratingComponent.sf.codeWanted:False
EnvGratingComponent.sf.direct:True
EnvGratingComponent.sf.hint:Spatial frequency of background carrier repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.sf.inputType:single
EnvGratingComponent.sf.label:Carrier spatial frequency
EnvGratingComponent.sf.readOnly:False
EnvGratingComponent.sf.staticUpdater:None
EnvGratingComponent.sf.updates:constant
EnvGratingComponent.sf.val:1.0
EnvGratingComponent.sf.valType:num
EnvGratingComponent.size.default:(0.5, 0.5)
EnvGratingComponent.size.allowedLabels:[]
EnvGratingComponent.size.allowedTypes:[]
EnvGratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.size.allowedVals:[]
EnvGratingComponent.size.canBePath:True
EnvGratingComponent.size.categ:Layout
EnvGratingComponent.size.codeWanted:False
EnvGratingComponent.size.direct:True
EnvGratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
EnvGratingComponent.size.inputType:single
EnvGratingComponent.size.label:Size [w,h]
EnvGratingComponent.size.readOnly:False
EnvGratingComponent.size.staticUpdater:None
EnvGratingComponent.size.updates:constant
EnvGratingComponent.size.val:(0.5, 0.5)
EnvGratingComponent.size.valType:list
EnvGratingComponent.startEstim.default:
EnvGratingComponent.startEstim.allowedLabels:[]
EnvGratingComponent.startEstim.allowedTypes:[]
EnvGratingComponent.startEstim.allowedUpdates:None
EnvGratingComponent.startEstim.allowedVals:[]
EnvGratingComponent.startEstim.canBePath:True
EnvGratingComponent.startEstim.categ:Basic
EnvGratingComponent.startEstim.codeWanted:False
EnvGratingComponent.startEstim.direct:False
EnvGratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EnvGratingComponent.startEstim.inputType:single
EnvGratingComponent.startEstim.label:Expected start (s)
EnvGratingComponent.startEstim.readOnly:False
EnvGratingComponent.startEstim.staticUpdater:None
EnvGratingComponent.startEstim.updates:None
EnvGratingComponent.startEstim.val:
EnvGratingComponent.startEstim.valType:code
EnvGratingComponent.startType.default:'time (s)'
EnvGratingComponent.startType.allowedLabels:[]
EnvGratingComponent.startType.allowedTypes:[]
EnvGratingComponent.startType.allowedUpdates:None
EnvGratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EnvGratingComponent.startType.canBePath:True
EnvGratingComponent.startType.categ:Basic
EnvGratingComponent.startType.codeWanted:False
EnvGratingComponent.startType.direct:False
EnvGratingComponent.startType.hint:How do you want to define your start point?
EnvGratingComponent.startType.inputType:choice
EnvGratingComponent.startType.label:start type
EnvGratingComponent.startType.readOnly:False
EnvGratingComponent.startType.staticUpdater:None
EnvGratingComponent.startType.updates:None
EnvGratingComponent.startType.val:time (s)
EnvGratingComponent.startType.valType:str
EnvGratingComponent.startVal.default:0.0
EnvGratingComponent.startVal.allowedLabels:[]
EnvGratingComponent.startVal.allowedTypes:[]
EnvGratingComponent.startVal.allowedUpdates:None
EnvGratingComponent.startVal.allowedVals:[]
EnvGratingComponent.startVal.canBePath:True
EnvGratingComponent.startVal.categ:Basic
EnvGratingComponent.startVal.codeWanted:False
EnvGratingComponent.startVal.direct:True
EnvGratingComponent.startVal.hint:When does the component start?
EnvGratingComponent.startVal.inputType:single
EnvGratingComponent.startVal.label:Start
EnvGratingComponent.startVal.readOnly:False
EnvGratingComponent.startVal.staticUpdater:None
EnvGratingComponent.startVal.updates:None
EnvGratingComponent.startVal.val:0.0
EnvGratingComponent.startVal.valType:code
EnvGratingComponent.stopType.default:'duration (s)'
EnvGratingComponent.stopType.allowedLabels:[]
EnvGratingComponent.stopType.allowedTypes:[]
EnvGratingComponent.stopType.allowedUpdates:None
EnvGratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EnvGratingComponent.stopType.canBePath:True
EnvGratingComponent.stopType.categ:Basic
EnvGratingComponent.stopType.codeWanted:False
EnvGratingComponent.stopType.direct:False
EnvGratingComponent.stopType.hint:How do you want to define your end point?
EnvGratingComponent.stopType.inputType:choice
EnvGratingComponent.stopType.label:stop type
EnvGratingComponent.stopType.readOnly:False
EnvGratingComponent.stopType.staticUpdater:None
EnvGratingComponent.stopType.updates:None
EnvGratingComponent.stopType.val:duration (s)
EnvGratingComponent.stopType.valType:str
EnvGratingComponent.stopVal.default:1.0
EnvGratingComponent.stopVal.allowedLabels:[]
EnvGratingComponent.stopVal.allowedTypes:[]
EnvGratingComponent.stopVal.allowedUpdates:[]
EnvGratingComponent.stopVal.allowedVals:[]
EnvGratingComponent.stopVal.canBePath:True
EnvGratingComponent.stopVal.categ:Basic
EnvGratingComponent.stopVal.codeWanted:False
EnvGratingComponent.stopVal.direct:True
EnvGratingComponent.stopVal.hint:When does the component end? (blank is endless)
EnvGratingComponent.stopVal.inputType:single
EnvGratingComponent.stopVal.label:Stop
EnvGratingComponent.stopVal.readOnly:False
EnvGratingComponent.stopVal.staticUpdater:None
EnvGratingComponent.stopVal.updates:constant
EnvGratingComponent.stopVal.val:1.0
EnvGratingComponent.stopVal.valType:code
EnvGratingComponent.syncScreenRefresh.default:True
EnvGratingComponent.syncScreenRefresh.allowedLabels:[]
EnvGratingComponent.syncScreenRefresh.allowedTypes:[]
EnvGratingComponent.syncScreenRefresh.allowedUpdates:None
EnvGratingComponent.syncScreenRefresh.allowedVals:[]
EnvGratingComponent.syncScreenRefresh.canBePath:True
EnvGratingComponent.syncScreenRefresh.categ:Data
EnvGratingComponent.syncScreenRefresh.codeWanted:False
EnvGratingComponent.syncScreenRefresh.direct:True
EnvGratingComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
EnvGratingComponent.syncScreenRefresh.inputType:bool
EnvGratingComponent.syncScreenRefresh.label:Sync timing with screen refresh
EnvGratingComponent.syncScreenRefresh.readOnly:True
EnvGratingComponent.syncScreenRefresh.staticUpdater:None
EnvGratingComponent.syncScreenRefresh.updates:None
EnvGratingComponent.syncScreenRefresh.val:True
EnvGratingComponent.syncScreenRefresh.valType:bool
EnvGratingComponent.texture resolution.default:128
EnvGratingComponent.texture resolution.allowedLabels:[]
EnvGratingComponent.texture resolution.allowedTypes:[]
EnvGratingComponent.texture resolution.allowedUpdates:[]
EnvGratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
EnvGratingComponent.texture resolution.canBePath:True
EnvGratingComponent.texture resolution.categ:Carrier
EnvGratingComponent.texture resolution.codeWanted:False
EnvGratingComponent.texture resolution.direct:True
EnvGratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
EnvGratingComponent.texture resolution.inputType:choice
EnvGratingComponent.texture resolution.label:Texture resolution
EnvGratingComponent.texture resolution.readOnly:False
EnvGratingComponent.texture resolution.staticUpdater:None
EnvGratingComponent.texture resolution.updates:constant
EnvGratingComponent.texture resolution.val:128
EnvGratingComponent.texture resolution.valType:code
EnvGratingComponent.units.default:'from exp settings'
EnvGratingComponent.units.allowedLabels:[]
EnvGratingComponent.units.allowedTypes:[]
EnvGratingComponent.units.allowedUpdates:None
EnvGratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
EnvGratingComponent.units.canBePath:True
EnvGratingComponent.units.categ:Layout
EnvGratingComponent.units.codeWanted:False
EnvGratingComponent.units.direct:True
EnvGratingComponent.units.hint:Units of dimensions for this stimulus
EnvGratingComponent.units.inputType:choice
EnvGratingComponent.units.label:Spatial Units
EnvGratingComponent.units.readOnly:False
EnvGratingComponent.units.staticUpdater:None
EnvGratingComponent.units.updates:None
EnvGratingComponent.units.val:from exp settings
EnvGratingComponent.units.valType:str
EyetrackerRecordComponent.order:['name', 'actionType', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType']
EyetrackerRecordComponent.actionType.default:'Start and Stop'
EyetrackerRecordComponent.actionType.allowedLabels:[]
EyetrackerRecordComponent.actionType.allowedTypes:[]
EyetrackerRecordComponent.actionType.allowedUpdates:None
EyetrackerRecordComponent.actionType.allowedVals:['Start and Stop', 'Start Only', 'Stop Only']
EyetrackerRecordComponent.actionType.canBePath:True
EyetrackerRecordComponent.actionType.categ:Basic
EyetrackerRecordComponent.actionType.codeWanted:False
EyetrackerRecordComponent.actionType.direct:True
EyetrackerRecordComponent.actionType.hint:Should this component start and / or stop eye tracker recording?
EyetrackerRecordComponent.actionType.inputType:choice
EyetrackerRecordComponent.actionType.label:Record Actions
EyetrackerRecordComponent.actionType.readOnly:False
EyetrackerRecordComponent.actionType.staticUpdater:None
EyetrackerRecordComponent.actionType.updates:None
EyetrackerRecordComponent.actionType.val:Start and Stop
EyetrackerRecordComponent.actionType.valType:str
EyetrackerRecordComponent.disabled.default:False
EyetrackerRecordComponent.disabled.allowedLabels:[]
EyetrackerRecordComponent.disabled.allowedTypes:[]
EyetrackerRecordComponent.disabled.allowedUpdates:None
EyetrackerRecordComponent.disabled.allowedVals:[]
EyetrackerRecordComponent.disabled.canBePath:True
EyetrackerRecordComponent.disabled.categ:Testing
EyetrackerRecordComponent.disabled.codeWanted:False
EyetrackerRecordComponent.disabled.direct:False
EyetrackerRecordComponent.disabled.hint:Disable this component
EyetrackerRecordComponent.disabled.inputType:bool
EyetrackerRecordComponent.disabled.label:Disable component
EyetrackerRecordComponent.disabled.readOnly:False
EyetrackerRecordComponent.disabled.staticUpdater:None
EyetrackerRecordComponent.disabled.updates:None
EyetrackerRecordComponent.disabled.val:False
EyetrackerRecordComponent.disabled.valType:bool
EyetrackerRecordComponent.durationEstim.default:
EyetrackerRecordComponent.durationEstim.allowedLabels:[]
EyetrackerRecordComponent.durationEstim.allowedTypes:[]
EyetrackerRecordComponent.durationEstim.allowedUpdates:None
EyetrackerRecordComponent.durationEstim.allowedVals:[]
EyetrackerRecordComponent.durationEstim.canBePath:True
EyetrackerRecordComponent.durationEstim.categ:Basic
EyetrackerRecordComponent.durationEstim.codeWanted:False
EyetrackerRecordComponent.durationEstim.direct:False
EyetrackerRecordComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EyetrackerRecordComponent.durationEstim.inputType:single
EyetrackerRecordComponent.durationEstim.label:Expected duration (s)
EyetrackerRecordComponent.durationEstim.readOnly:False
EyetrackerRecordComponent.durationEstim.staticUpdater:None
EyetrackerRecordComponent.durationEstim.updates:None
EyetrackerRecordComponent.durationEstim.val:
EyetrackerRecordComponent.durationEstim.valType:code
EyetrackerRecordComponent.name.default:etRecord
EyetrackerRecordComponent.name.allowedLabels:[]
EyetrackerRecordComponent.name.allowedTypes:[]
EyetrackerRecordComponent.name.allowedUpdates:None
EyetrackerRecordComponent.name.allowedVals:[]
EyetrackerRecordComponent.name.canBePath:True
EyetrackerRecordComponent.name.categ:Basic
EyetrackerRecordComponent.name.codeWanted:False
EyetrackerRecordComponent.name.direct:True
EyetrackerRecordComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
EyetrackerRecordComponent.name.inputType:single
EyetrackerRecordComponent.name.label:Name
EyetrackerRecordComponent.name.readOnly:False
EyetrackerRecordComponent.name.staticUpdater:None
EyetrackerRecordComponent.name.val:etRecord
EyetrackerRecordComponent.name.valType:code
EyetrackerRecordComponent.saveStartStop.default:True
EyetrackerRecordComponent.saveStartStop.allowedLabels:[]
EyetrackerRecordComponent.saveStartStop.allowedTypes:[]
EyetrackerRecordComponent.saveStartStop.allowedUpdates:None
EyetrackerRecordComponent.saveStartStop.allowedVals:[]
EyetrackerRecordComponent.saveStartStop.canBePath:True
EyetrackerRecordComponent.saveStartStop.categ:Data
EyetrackerRecordComponent.saveStartStop.codeWanted:False
EyetrackerRecordComponent.saveStartStop.direct:True
EyetrackerRecordComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
EyetrackerRecordComponent.saveStartStop.inputType:bool
EyetrackerRecordComponent.saveStartStop.label:Save onset/offset times
EyetrackerRecordComponent.saveStartStop.readOnly:False
EyetrackerRecordComponent.saveStartStop.staticUpdater:None
EyetrackerRecordComponent.saveStartStop.updates:None
EyetrackerRecordComponent.saveStartStop.val:True
EyetrackerRecordComponent.saveStartStop.valType:bool
EyetrackerRecordComponent.startEstim.default:
EyetrackerRecordComponent.startEstim.allowedLabels:[]
EyetrackerRecordComponent.startEstim.allowedTypes:[]
EyetrackerRecordComponent.startEstim.allowedUpdates:None
EyetrackerRecordComponent.startEstim.allowedVals:[]
EyetrackerRecordComponent.startEstim.canBePath:True
EyetrackerRecordComponent.startEstim.categ:Basic
EyetrackerRecordComponent.startEstim.codeWanted:False
EyetrackerRecordComponent.startEstim.direct:False
EyetrackerRecordComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EyetrackerRecordComponent.startEstim.inputType:single
EyetrackerRecordComponent.startEstim.label:Expected start (s)
EyetrackerRecordComponent.startEstim.readOnly:False
EyetrackerRecordComponent.startEstim.staticUpdater:None
EyetrackerRecordComponent.startEstim.updates:None
EyetrackerRecordComponent.startEstim.val:
EyetrackerRecordComponent.startEstim.valType:code
EyetrackerRecordComponent.startType.default:'time (s)'
EyetrackerRecordComponent.startType.allowedLabels:[]
EyetrackerRecordComponent.startType.allowedTypes:[]
EyetrackerRecordComponent.startType.allowedUpdates:None
EyetrackerRecordComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EyetrackerRecordComponent.startType.canBePath:True
EyetrackerRecordComponent.startType.categ:Basic
EyetrackerRecordComponent.startType.codeWanted:False
EyetrackerRecordComponent.startType.direct:False
EyetrackerRecordComponent.startType.hint:How do you want to define your start point?
EyetrackerRecordComponent.startType.inputType:choice
EyetrackerRecordComponent.startType.label:start type
EyetrackerRecordComponent.startType.readOnly:False
EyetrackerRecordComponent.startType.staticUpdater:None
EyetrackerRecordComponent.startType.updates:None
EyetrackerRecordComponent.startType.val:time (s)
EyetrackerRecordComponent.startType.valType:str
EyetrackerRecordComponent.startVal.default:0.0
EyetrackerRecordComponent.startVal.allowedLabels:[]
EyetrackerRecordComponent.startVal.allowedTypes:[]
EyetrackerRecordComponent.startVal.allowedUpdates:None
EyetrackerRecordComponent.startVal.allowedVals:[]
EyetrackerRecordComponent.startVal.canBePath:True
EyetrackerRecordComponent.startVal.categ:Basic
EyetrackerRecordComponent.startVal.codeWanted:False
EyetrackerRecordComponent.startVal.direct:True
EyetrackerRecordComponent.startVal.hint:When does the component start?
EyetrackerRecordComponent.startVal.inputType:single
EyetrackerRecordComponent.startVal.label:Start
EyetrackerRecordComponent.startVal.readOnly:False
EyetrackerRecordComponent.startVal.staticUpdater:None
EyetrackerRecordComponent.startVal.updates:None
EyetrackerRecordComponent.startVal.val:0.0
EyetrackerRecordComponent.startVal.valType:code
EyetrackerRecordComponent.stopType.default:'duration (s)'
EyetrackerRecordComponent.stopType.allowedLabels:[]
EyetrackerRecordComponent.stopType.allowedTypes:[]
EyetrackerRecordComponent.stopType.allowedUpdates:None
EyetrackerRecordComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EyetrackerRecordComponent.stopType.canBePath:True
EyetrackerRecordComponent.stopType.categ:Basic
EyetrackerRecordComponent.stopType.codeWanted:False
EyetrackerRecordComponent.stopType.direct:False
EyetrackerRecordComponent.stopType.hint:How do you want to define your end point?
EyetrackerRecordComponent.stopType.inputType:choice
EyetrackerRecordComponent.stopType.label:stop type
EyetrackerRecordComponent.stopType.readOnly:False
EyetrackerRecordComponent.stopType.staticUpdater:None
EyetrackerRecordComponent.stopType.updates:None
EyetrackerRecordComponent.stopType.val:duration (s)
EyetrackerRecordComponent.stopType.valType:str
EyetrackerRecordComponent.stopVal.default:1.0
EyetrackerRecordComponent.stopVal.allowedLabels:[]
EyetrackerRecordComponent.stopVal.allowedTypes:[]
EyetrackerRecordComponent.stopVal.allowedUpdates:[]
EyetrackerRecordComponent.stopVal.allowedVals:[]
EyetrackerRecordComponent.stopVal.canBePath:True
EyetrackerRecordComponent.stopVal.categ:Basic
EyetrackerRecordComponent.stopVal.codeWanted:False
EyetrackerRecordComponent.stopVal.direct:True
EyetrackerRecordComponent.stopVal.hint:When does the component end? (blank is endless)
EyetrackerRecordComponent.stopVal.inputType:single
EyetrackerRecordComponent.stopVal.label:Stop
EyetrackerRecordComponent.stopVal.readOnly:False
EyetrackerRecordComponent.stopVal.staticUpdater:None
EyetrackerRecordComponent.stopVal.updates:constant
EyetrackerRecordComponent.stopVal.val:1.0
EyetrackerRecordComponent.stopVal.valType:code
EyetrackerRecordComponent.syncScreenRefresh.default:False
EyetrackerRecordComponent.syncScreenRefresh.allowedLabels:[]
EyetrackerRecordComponent.syncScreenRefresh.allowedTypes:[]
EyetrackerRecordComponent.syncScreenRefresh.allowedUpdates:None
EyetrackerRecordComponent.syncScreenRefresh.allowedVals:[]
EyetrackerRecordComponent.syncScreenRefresh.canBePath:True
EyetrackerRecordComponent.syncScreenRefresh.categ:Data
EyetrackerRecordComponent.syncScreenRefresh.codeWanted:False
EyetrackerRecordComponent.syncScreenRefresh.direct:True
EyetrackerRecordComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
EyetrackerRecordComponent.syncScreenRefresh.inputType:bool
EyetrackerRecordComponent.syncScreenRefresh.label:Sync timing with screen refresh
EyetrackerRecordComponent.syncScreenRefresh.readOnly:False
EyetrackerRecordComponent.syncScreenRefresh.staticUpdater:None
EyetrackerRecordComponent.syncScreenRefresh.updates:None
EyetrackerRecordComponent.syncScreenRefresh.val:False
EyetrackerRecordComponent.syncScreenRefresh.valType:bool
FormComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'itemColor', 'responseColor', 'markerColor', 'Style', 'colorSpace', 'opacity', 'size', 'pos', 'Item Padding', 'units', 'anchor', 'ori', 'Items', 'Randomize', 'Data Format']
FormComponent.Data Format.default:'rows'
FormComponent.Data Format.allowedLabels:[]
FormComponent.Data Format.allowedTypes:[]
FormComponent.Data Format.allowedUpdates:None
FormComponent.Data Format.allowedVals:['columns', 'rows']
FormComponent.Data Format.canBePath:True
FormComponent.Data Format.categ:Basic
FormComponent.Data Format.codeWanted:False
FormComponent.Data Format.direct:True
FormComponent.Data Format.hint:Store item data by columns, or rows
FormComponent.Data Format.inputType:choice
FormComponent.Data Format.label:Data Format
FormComponent.Data Format.readOnly:False
FormComponent.Data Format.staticUpdater:None
FormComponent.Data Format.updates:constant
FormComponent.Data Format.val:rows
FormComponent.Data Format.valType:str
FormComponent.Font.default:'Open Sans'
FormComponent.Font.allowedLabels:[]
FormComponent.Font.allowedTypes:[]
FormComponent.Font.allowedUpdates:['constant']
FormComponent.Font.allowedVals:[]
FormComponent.Font.canBePath:True
FormComponent.Font.categ:Formatting
FormComponent.Font.codeWanted:False
FormComponent.Font.direct:True
FormComponent.Font.hint:The font name (e.g. Comic Sans)
FormComponent.Font.inputType:single
FormComponent.Font.label:Font
FormComponent.Font.readOnly:False
FormComponent.Font.staticUpdater:None
FormComponent.Font.updates:constant
FormComponent.Font.val:Open Sans
FormComponent.Font.valType:str
FormComponent.Item Padding.default:0.05
FormComponent.Item Padding.allowedLabels:[]
FormComponent.Item Padding.allowedTypes:[]
FormComponent.Item Padding.allowedUpdates:None
FormComponent.Item Padding.allowedVals:[]
FormComponent.Item Padding.canBePath:True
FormComponent.Item Padding.categ:Layout
FormComponent.Item Padding.codeWanted:False
FormComponent.Item Padding.direct:True
FormComponent.Item Padding.hint:The padding or space between items.
FormComponent.Item Padding.inputType:single
FormComponent.Item Padding.label:Item Padding
FormComponent.Item Padding.readOnly:False
FormComponent.Item Padding.staticUpdater:None
FormComponent.Item Padding.updates:constant
FormComponent.Item Padding.val:0.05
FormComponent.Item Padding.valType:num
FormComponent.Items.default:'.csv'
FormComponent.Items.allowedLabels:[]
FormComponent.Items.allowedTypes:[]
FormComponent.Items.allowedUpdates:None
FormComponent.Items.allowedVals:[]
FormComponent.Items.canBePath:True
FormComponent.Items.categ:Basic
FormComponent.Items.codeWanted:False
FormComponent.Items.direct:True
FormComponent.Items.hint:The csv filename containing the items for your survey.
FormComponent.Items.inputType:table
FormComponent.Items.label:Items
FormComponent.Items.readOnly:False
FormComponent.Items.staticUpdater:None
FormComponent.Items.updates:constant
FormComponent.Items.val:.csv
FormComponent.Items.valType:file
FormComponent.Randomize.default:False
FormComponent.Randomize.allowedLabels:[]
FormComponent.Randomize.allowedTypes:[]
FormComponent.Randomize.allowedUpdates:None
FormComponent.Randomize.allowedVals:[]
FormComponent.Randomize.canBePath:True
FormComponent.Randomize.categ:Basic
FormComponent.Randomize.codeWanted:False
FormComponent.Randomize.direct:True
FormComponent.Randomize.hint:Do you want to randomize the order of your questions?
FormComponent.Randomize.inputType:bool
FormComponent.Randomize.label:Randomize
FormComponent.Randomize.readOnly:False
FormComponent.Randomize.staticUpdater:None
FormComponent.Randomize.updates:constant
FormComponent.Randomize.val:False
FormComponent.Randomize.valType:bool
FormComponent.Style.default:'dark'
FormComponent.Style.allowedLabels:[]
FormComponent.Style.allowedTypes:[]
FormComponent.Style.allowedUpdates:None
FormComponent.Style.allowedVals:['light', 'dark', 'custom...']
FormComponent.Style.canBePath:True
FormComponent.Style.categ:Appearance
FormComponent.Style.codeWanted:False
FormComponent.Style.direct:True
FormComponent.Style.hint:Styles determine the appearance of the form
FormComponent.Style.inputType:choice
FormComponent.Style.label:Styles
FormComponent.Style.readOnly:False
FormComponent.Style.staticUpdater:None
FormComponent.Style.updates:constant
FormComponent.Style.val:dark
FormComponent.Style.valType:str
FormComponent.Text Height.default:0.03
FormComponent.Text Height.allowedLabels:[]
FormComponent.Text Height.allowedTypes:[]
FormComponent.Text Height.allowedUpdates:None
FormComponent.Text Height.allowedVals:[]
FormComponent.Text Height.canBePath:True
FormComponent.Text Height.categ:Formatting
FormComponent.Text Height.codeWanted:False
FormComponent.Text Height.direct:True
FormComponent.Text Height.hint:The size of the item text for Form
FormComponent.Text Height.inputType:single
FormComponent.Text Height.label:Text Height
FormComponent.Text Height.readOnly:False
FormComponent.Text Height.staticUpdater:None
FormComponent.Text Height.updates:constant
FormComponent.Text Height.val:0.03
FormComponent.Text Height.valType:num
FormComponent.borderColor.default:''
FormComponent.borderColor.allowedLabels:[]
FormComponent.borderColor.allowedTypes:[]
FormComponent.borderColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.borderColor.allowedVals:[]
FormComponent.borderColor.canBePath:True
FormComponent.borderColor.categ:Appearance
FormComponent.borderColor.codeWanted:False
FormComponent.borderColor.direct:True
FormComponent.borderColor.hint:Color of the outline around the form
FormComponent.borderColor.inputType:color
FormComponent.borderColor.label:Border Color
FormComponent.borderColor.readOnly:False
FormComponent.borderColor.staticUpdater:None
FormComponent.borderColor.updates:constant
FormComponent.borderColor.val:
FormComponent.borderColor.valType:color
FormComponent.colorSpace.default:'rgb'
FormComponent.colorSpace.allowedLabels:[]
FormComponent.colorSpace.allowedTypes:[]
FormComponent.colorSpace.allowedUpdates:None
FormComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
FormComponent.colorSpace.canBePath:True
FormComponent.colorSpace.categ:Appearance
FormComponent.colorSpace.codeWanted:False
FormComponent.colorSpace.direct:True
FormComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
FormComponent.colorSpace.inputType:choice
FormComponent.colorSpace.label:Color Space
FormComponent.colorSpace.readOnly:False
FormComponent.colorSpace.staticUpdater:None
FormComponent.colorSpace.updates:constant
FormComponent.colorSpace.val:rgb
FormComponent.colorSpace.valType:str
FormComponent.contrast.default:1.0
FormComponent.contrast.allowedLabels:[]
FormComponent.contrast.allowedTypes:[]
FormComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.contrast.allowedVals:[]
FormComponent.contrast.canBePath:True
FormComponent.contrast.categ:Appearance
FormComponent.contrast.codeWanted:False
FormComponent.contrast.direct:True
FormComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
FormComponent.contrast.inputType:single
FormComponent.contrast.label:Contrast
FormComponent.contrast.readOnly:False
FormComponent.contrast.staticUpdater:None
FormComponent.contrast.updates:constant
FormComponent.contrast.val:1
FormComponent.contrast.valType:num
FormComponent.disabled.default:False
FormComponent.disabled.allowedLabels:[]
FormComponent.disabled.allowedTypes:[]
FormComponent.disabled.allowedUpdates:None
FormComponent.disabled.allowedVals:[]
FormComponent.disabled.canBePath:True
FormComponent.disabled.categ:Testing
FormComponent.disabled.codeWanted:False
FormComponent.disabled.direct:False
FormComponent.disabled.hint:Disable this component
FormComponent.disabled.inputType:bool
FormComponent.disabled.label:Disable component
FormComponent.disabled.readOnly:False
FormComponent.disabled.staticUpdater:None
FormComponent.disabled.updates:None
FormComponent.disabled.val:False
FormComponent.disabled.valType:bool
FormComponent.durationEstim.default:
FormComponent.durationEstim.allowedLabels:[]
FormComponent.durationEstim.allowedTypes:[]
FormComponent.durationEstim.allowedUpdates:None
FormComponent.durationEstim.allowedVals:[]
FormComponent.durationEstim.canBePath:True
FormComponent.durationEstim.categ:Basic
FormComponent.durationEstim.codeWanted:False
FormComponent.durationEstim.direct:False
FormComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
FormComponent.durationEstim.inputType:single
FormComponent.durationEstim.label:Expected duration (s)
FormComponent.durationEstim.readOnly:False
FormComponent.durationEstim.staticUpdater:None
FormComponent.durationEstim.updates:None
FormComponent.durationEstim.val:
FormComponent.durationEstim.valType:code
FormComponent.fillColor.default:''
FormComponent.fillColor.allowedLabels:[]
FormComponent.fillColor.allowedTypes:[]
FormComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.fillColor.allowedVals:[]
FormComponent.fillColor.canBePath:True
FormComponent.fillColor.categ:Appearance
FormComponent.fillColor.codeWanted:False
FormComponent.fillColor.direct:True
FormComponent.fillColor.hint:Color of the form's background
FormComponent.fillColor.inputType:color
FormComponent.fillColor.label:Fill Color
FormComponent.fillColor.readOnly:False
FormComponent.fillColor.staticUpdater:None
FormComponent.fillColor.updates:constant
FormComponent.fillColor.val:
FormComponent.fillColor.valType:color
FormComponent.itemColor.default:'white'
FormComponent.itemColor.allowedLabels:[]
FormComponent.itemColor.allowedTypes:[]
FormComponent.itemColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.itemColor.allowedVals:[]
FormComponent.itemColor.canBePath:True
FormComponent.itemColor.categ:Appearance
FormComponent.itemColor.codeWanted:False
FormComponent.itemColor.direct:True
FormComponent.itemColor.hint:Base text color for questions
FormComponent.itemColor.inputType:color
FormComponent.itemColor.label:Item Color
FormComponent.itemColor.readOnly:False
FormComponent.itemColor.staticUpdater:None
FormComponent.itemColor.updates:constant
FormComponent.itemColor.val:white
FormComponent.itemColor.valType:color
FormComponent.markerColor.default:'red'
FormComponent.markerColor.allowedLabels:[]
FormComponent.markerColor.allowedTypes:[]
FormComponent.markerColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.markerColor.allowedVals:[]
FormComponent.markerColor.canBePath:True
FormComponent.markerColor.categ:Appearance
FormComponent.markerColor.codeWanted:False
FormComponent.markerColor.direct:True
FormComponent.markerColor.hint:Color of markers and the scrollbar
FormComponent.markerColor.inputType:color
FormComponent.markerColor.label:Marker Color
FormComponent.markerColor.readOnly:False
FormComponent.markerColor.staticUpdater:None
FormComponent.markerColor.updates:constant
FormComponent.markerColor.val:red
FormComponent.markerColor.valType:color
FormComponent.name.default:form
FormComponent.name.allowedLabels:[]
FormComponent.name.allowedTypes:[]
FormComponent.name.allowedUpdates:None
FormComponent.name.allowedVals:[]
FormComponent.name.canBePath:True
FormComponent.name.categ:Basic
FormComponent.name.codeWanted:False
FormComponent.name.direct:True
FormComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
FormComponent.name.inputType:single
FormComponent.name.label:Name
FormComponent.name.readOnly:False
FormComponent.name.staticUpdater:None
FormComponent.name.val:form
FormComponent.name.valType:code
FormComponent.opacity.default:None
FormComponent.opacity.allowedLabels:[]
FormComponent.opacity.allowedTypes:[]
FormComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.opacity.allowedVals:[]
FormComponent.opacity.canBePath:True
FormComponent.opacity.categ:Appearance
FormComponent.opacity.codeWanted:False
FormComponent.opacity.direct:True
FormComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
FormComponent.opacity.inputType:single
FormComponent.opacity.label:Opacity
FormComponent.opacity.readOnly:False
FormComponent.opacity.staticUpdater:None
FormComponent.opacity.updates:constant
FormComponent.opacity.val:
FormComponent.opacity.valType:num
FormComponent.pos.default:(0, 0)
FormComponent.pos.allowedLabels:[]
FormComponent.pos.allowedTypes:[]
FormComponent.pos.allowedUpdates:[]
FormComponent.pos.allowedVals:[]
FormComponent.pos.canBePath:True
FormComponent.pos.categ:Layout
FormComponent.pos.codeWanted:False
FormComponent.pos.direct:True
FormComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
FormComponent.pos.inputType:single
FormComponent.pos.label:Position [x,y]
FormComponent.pos.readOnly:False
FormComponent.pos.staticUpdater:None
FormComponent.pos.updates:constant
FormComponent.pos.val:(0, 0)
FormComponent.pos.valType:list
FormComponent.responseColor.default:'white'
FormComponent.responseColor.allowedLabels:[]
FormComponent.responseColor.allowedTypes:[]
FormComponent.responseColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
FormComponent.responseColor.allowedVals:[]
FormComponent.responseColor.canBePath:True
FormComponent.responseColor.categ:Appearance
FormComponent.responseColor.codeWanted:False
FormComponent.responseColor.direct:True
FormComponent.responseColor.hint:Base text color for responses, also sets color of lines in sliders and borders of textboxes
FormComponent.responseColor.inputType:color
FormComponent.responseColor.label:Response Color
FormComponent.responseColor.readOnly:False
FormComponent.responseColor.staticUpdater:None
FormComponent.responseColor.updates:constant
FormComponent.responseColor.val:white
FormComponent.responseColor.valType:color
FormComponent.saveStartStop.default:True
FormComponent.saveStartStop.allowedLabels:[]
FormComponent.saveStartStop.allowedTypes:[]
FormComponent.saveStartStop.allowedUpdates:None
FormComponent.saveStartStop.allowedVals:[]
FormComponent.saveStartStop.canBePath:True
FormComponent.saveStartStop.categ:Data
FormComponent.saveStartStop.codeWanted:False
FormComponent.saveStartStop.direct:True
FormComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
FormComponent.saveStartStop.inputType:bool
FormComponent.saveStartStop.label:Save onset/offset times
FormComponent.saveStartStop.readOnly:False
FormComponent.saveStartStop.staticUpdater:None
FormComponent.saveStartStop.updates:None
FormComponent.saveStartStop.val:True
FormComponent.saveStartStop.valType:bool
FormComponent.size.default:(1, 0.7)
FormComponent.size.allowedLabels:[]
FormComponent.size.allowedTypes:[]
FormComponent.size.allowedUpdates:[]
FormComponent.size.allowedVals:[]
FormComponent.size.canBePath:True
FormComponent.size.categ:Layout
FormComponent.size.codeWanted:False
FormComponent.size.direct:True
FormComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
FormComponent.size.inputType:single
FormComponent.size.label:Size [w,h]
FormComponent.size.readOnly:False
FormComponent.size.staticUpdater:None
FormComponent.size.updates:constant
FormComponent.size.val:(1, 0.7)
FormComponent.size.valType:list
FormComponent.startEstim.default:
FormComponent.startEstim.allowedLabels:[]
FormComponent.startEstim.allowedTypes:[]
FormComponent.startEstim.allowedUpdates:None
FormComponent.startEstim.allowedVals:[]
FormComponent.startEstim.canBePath:True
FormComponent.startEstim.categ:Basic
FormComponent.startEstim.codeWanted:False
FormComponent.startEstim.direct:False
FormComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
FormComponent.startEstim.inputType:single
FormComponent.startEstim.label:Expected start (s)
FormComponent.startEstim.readOnly:False
FormComponent.startEstim.staticUpdater:None
FormComponent.startEstim.updates:None
FormComponent.startEstim.val:
FormComponent.startEstim.valType:code
FormComponent.startType.default:'time (s)'
FormComponent.startType.allowedLabels:[]
FormComponent.startType.allowedTypes:[]
FormComponent.startType.allowedUpdates:None
FormComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
FormComponent.startType.canBePath:True
FormComponent.startType.categ:Basic
FormComponent.startType.codeWanted:False
FormComponent.startType.direct:False
FormComponent.startType.hint:How do you want to define your start point?
FormComponent.startType.inputType:choice
FormComponent.startType.label:start type
FormComponent.startType.readOnly:False
FormComponent.startType.staticUpdater:None
FormComponent.startType.updates:None
FormComponent.startType.val:time (s)
FormComponent.startType.valType:str
FormComponent.startVal.default:0.0
FormComponent.startVal.allowedLabels:[]
FormComponent.startVal.allowedTypes:[]
FormComponent.startVal.allowedUpdates:None
FormComponent.startVal.allowedVals:[]
FormComponent.startVal.canBePath:True
FormComponent.startVal.categ:Basic
FormComponent.startVal.codeWanted:False
FormComponent.startVal.direct:True
FormComponent.startVal.hint:When does the component start?
FormComponent.startVal.inputType:single
FormComponent.startVal.label:Start
FormComponent.startVal.readOnly:False
FormComponent.startVal.staticUpdater:None
FormComponent.startVal.updates:None
FormComponent.startVal.val:0.0
FormComponent.startVal.valType:code
FormComponent.stopType.default:'duration (s)'
FormComponent.stopType.allowedLabels:[]
FormComponent.stopType.allowedTypes:[]
FormComponent.stopType.allowedUpdates:None
FormComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
FormComponent.stopType.canBePath:True
FormComponent.stopType.categ:Basic
FormComponent.stopType.codeWanted:False
FormComponent.stopType.direct:False
FormComponent.stopType.hint:How do you want to define your end point?
FormComponent.stopType.inputType:choice
FormComponent.stopType.label:stop type
FormComponent.stopType.readOnly:False
FormComponent.stopType.staticUpdater:None
FormComponent.stopType.updates:None
FormComponent.stopType.val:duration (s)
FormComponent.stopType.valType:str
FormComponent.stopVal.default:
FormComponent.stopVal.allowedLabels:[]
FormComponent.stopVal.allowedTypes:[]
FormComponent.stopVal.allowedUpdates:[]
FormComponent.stopVal.allowedVals:[]
FormComponent.stopVal.canBePath:True
FormComponent.stopVal.categ:Basic
FormComponent.stopVal.codeWanted:False
FormComponent.stopVal.direct:True
FormComponent.stopVal.hint:When does the component end? (blank is endless)
FormComponent.stopVal.inputType:single
FormComponent.stopVal.label:Stop
FormComponent.stopVal.readOnly:False
FormComponent.stopVal.staticUpdater:None
FormComponent.stopVal.updates:constant
FormComponent.stopVal.val:
FormComponent.stopVal.valType:code
FormComponent.syncScreenRefresh.default:True
FormComponent.syncScreenRefresh.allowedLabels:[]
FormComponent.syncScreenRefresh.allowedTypes:[]
FormComponent.syncScreenRefresh.allowedUpdates:None
FormComponent.syncScreenRefresh.allowedVals:[]
FormComponent.syncScreenRefresh.canBePath:True
FormComponent.syncScreenRefresh.categ:Data
FormComponent.syncScreenRefresh.codeWanted:False
FormComponent.syncScreenRefresh.direct:True
FormComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
FormComponent.syncScreenRefresh.inputType:bool
FormComponent.syncScreenRefresh.label:Sync timing with screen refresh
FormComponent.syncScreenRefresh.readOnly:True
FormComponent.syncScreenRefresh.staticUpdater:None
FormComponent.syncScreenRefresh.updates:None
FormComponent.syncScreenRefresh.val:True
FormComponent.syncScreenRefresh.valType:bool
GratingComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'tex', 'mask', 'phase', 'sf', 'texture resolution', 'interpolate']
GratingComponent.anchor.default:'center'
GratingComponent.anchor.allowedLabels:[]
GratingComponent.anchor.allowedTypes:[]
GratingComponent.anchor.allowedUpdates:None
GratingComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
GratingComponent.anchor.canBePath:True
GratingComponent.anchor.categ:Layout
GratingComponent.anchor.codeWanted:False
GratingComponent.anchor.direct:True
GratingComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
GratingComponent.anchor.inputType:choice
GratingComponent.anchor.label:Anchor
GratingComponent.anchor.readOnly:False
GratingComponent.anchor.staticUpdater:None
GratingComponent.anchor.updates:constant
GratingComponent.anchor.val:center
GratingComponent.anchor.valType:str
GratingComponent.blendmode.default:'avg'
GratingComponent.blendmode.allowedLabels:[]
GratingComponent.blendmode.allowedTypes:[]
GratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.blendmode.allowedVals:['avg', 'add']
GratingComponent.blendmode.canBePath:True
GratingComponent.blendmode.categ:Appearance
GratingComponent.blendmode.codeWanted:False
GratingComponent.blendmode.direct:True
GratingComponent.blendmode.hint:OpenGL Blendmode: avg gives traditional transparency, add is important to combine gratings)]
GratingComponent.blendmode.inputType:choice
GratingComponent.blendmode.label:OpenGL blend mode
GratingComponent.blendmode.readOnly:False
GratingComponent.blendmode.staticUpdater:None
GratingComponent.blendmode.updates:constant
GratingComponent.blendmode.val:avg
GratingComponent.blendmode.valType:str
GratingComponent.color.default:[1,1,1]
GratingComponent.color.allowedLabels:[]
GratingComponent.color.allowedTypes:[]
GratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.color.allowedVals:[]
GratingComponent.color.canBePath:True
GratingComponent.color.categ:Appearance
GratingComponent.color.codeWanted:True
GratingComponent.color.direct:True
GratingComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
GratingComponent.color.inputType:color
GratingComponent.color.label:Foreground Color
GratingComponent.color.readOnly:False
GratingComponent.color.staticUpdater:None
GratingComponent.color.updates:constant
GratingComponent.color.val:$[1,1,1]
GratingComponent.color.valType:color
GratingComponent.colorSpace.default:'rgb'
GratingComponent.colorSpace.allowedLabels:[]
GratingComponent.colorSpace.allowedTypes:[]
GratingComponent.colorSpace.allowedUpdates:None
GratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
GratingComponent.colorSpace.canBePath:True
GratingComponent.colorSpace.categ:Appearance
GratingComponent.colorSpace.codeWanted:False
GratingComponent.colorSpace.direct:True
GratingComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
GratingComponent.colorSpace.inputType:choice
GratingComponent.colorSpace.label:Color Space
GratingComponent.colorSpace.readOnly:False
GratingComponent.colorSpace.staticUpdater:None
GratingComponent.colorSpace.updates:constant
GratingComponent.colorSpace.val:rgb
GratingComponent.colorSpace.valType:str
GratingComponent.contrast.default:1.0
GratingComponent.contrast.allowedLabels:[]
GratingComponent.contrast.allowedTypes:[]
GratingComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.contrast.allowedVals:[]
GratingComponent.contrast.canBePath:True
GratingComponent.contrast.categ:Appearance
GratingComponent.contrast.codeWanted:False
GratingComponent.contrast.direct:True
GratingComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
GratingComponent.contrast.inputType:single
GratingComponent.contrast.label:Contrast
GratingComponent.contrast.readOnly:False
GratingComponent.contrast.staticUpdater:None
GratingComponent.contrast.updates:constant
GratingComponent.contrast.val:1.0
GratingComponent.contrast.valType:num
GratingComponent.disabled.default:False
GratingComponent.disabled.allowedLabels:[]
GratingComponent.disabled.allowedTypes:[]
GratingComponent.disabled.allowedUpdates:None
GratingComponent.disabled.allowedVals:[]
GratingComponent.disabled.canBePath:True
GratingComponent.disabled.categ:Testing
GratingComponent.disabled.codeWanted:False
GratingComponent.disabled.direct:False
GratingComponent.disabled.hint:Disable this component
GratingComponent.disabled.inputType:bool
GratingComponent.disabled.label:Disable component
GratingComponent.disabled.readOnly:False
GratingComponent.disabled.staticUpdater:None
GratingComponent.disabled.updates:None
GratingComponent.disabled.val:False
GratingComponent.disabled.valType:bool
GratingComponent.durationEstim.default:
GratingComponent.durationEstim.allowedLabels:[]
GratingComponent.durationEstim.allowedTypes:[]
GratingComponent.durationEstim.allowedUpdates:None
GratingComponent.durationEstim.allowedVals:[]
GratingComponent.durationEstim.canBePath:True
GratingComponent.durationEstim.categ:Basic
GratingComponent.durationEstim.codeWanted:False
GratingComponent.durationEstim.direct:False
GratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
GratingComponent.durationEstim.inputType:single
GratingComponent.durationEstim.label:Expected duration (s)
GratingComponent.durationEstim.readOnly:False
GratingComponent.durationEstim.staticUpdater:None
GratingComponent.durationEstim.updates:None
GratingComponent.durationEstim.val:
GratingComponent.durationEstim.valType:code
GratingComponent.interpolate.default:'linear'
GratingComponent.interpolate.allowedLabels:[]
GratingComponent.interpolate.allowedTypes:[]
GratingComponent.interpolate.allowedUpdates:[]
GratingComponent.interpolate.allowedVals:['linear', 'nearest']
GratingComponent.interpolate.canBePath:True
GratingComponent.interpolate.categ:Texture
GratingComponent.interpolate.codeWanted:False
GratingComponent.interpolate.direct:False
GratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
GratingComponent.interpolate.inputType:choice
GratingComponent.interpolate.label:Interpolate
GratingComponent.interpolate.readOnly:False
GratingComponent.interpolate.staticUpdater:None
GratingComponent.interpolate.updates:constant
GratingComponent.interpolate.val:linear
GratingComponent.interpolate.valType:str
GratingComponent.mask.default:'.'
GratingComponent.mask.allowedLabels:[]
GratingComponent.mask.allowedTypes:[]
GratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.mask.allowedVals:['gauss', 'circle']
GratingComponent.mask.canBePath:True
GratingComponent.mask.categ:Texture
GratingComponent.mask.codeWanted:False
GratingComponent.mask.direct:True
GratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
GratingComponent.mask.inputType:file
GratingComponent.mask.label:Mask
GratingComponent.mask.readOnly:False
GratingComponent.mask.staticUpdater:None
GratingComponent.mask.updates:constant
GratingComponent.mask.val:
GratingComponent.mask.valType:file
GratingComponent.name.default:grating
GratingComponent.name.allowedLabels:[]
GratingComponent.name.allowedTypes:[]
GratingComponent.name.allowedUpdates:None
GratingComponent.name.allowedVals:[]
GratingComponent.name.canBePath:True
GratingComponent.name.categ:Basic
GratingComponent.name.codeWanted:False
GratingComponent.name.direct:True
GratingComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
GratingComponent.name.inputType:single
GratingComponent.name.label:Name
GratingComponent.name.readOnly:False
GratingComponent.name.staticUpdater:None
GratingComponent.name.val:grating
GratingComponent.name.valType:code
GratingComponent.opacity.default:None
GratingComponent.opacity.allowedLabels:[]
GratingComponent.opacity.allowedTypes:[]
GratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.opacity.allowedVals:[]
GratingComponent.opacity.canBePath:True
GratingComponent.opacity.categ:Appearance
GratingComponent.opacity.codeWanted:False
GratingComponent.opacity.direct:True
GratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
GratingComponent.opacity.inputType:single
GratingComponent.opacity.label:Opacity
GratingComponent.opacity.readOnly:False
GratingComponent.opacity.staticUpdater:None
GratingComponent.opacity.updates:constant
GratingComponent.opacity.val:
GratingComponent.opacity.valType:num
GratingComponent.ori.default:0.0
GratingComponent.ori.allowedLabels:[]
GratingComponent.ori.allowedTypes:[]
GratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.ori.allowedVals:[-360, 360]
GratingComponent.ori.canBePath:True
GratingComponent.ori.categ:Layout
GratingComponent.ori.codeWanted:False
GratingComponent.ori.direct:True
GratingComponent.ori.hint:Orientation of this stimulus (in deg)
GratingComponent.ori.inputType:spin
GratingComponent.ori.label:Orientation
GratingComponent.ori.readOnly:False
GratingComponent.ori.staticUpdater:None
GratingComponent.ori.updates:constant
GratingComponent.ori.val:0
GratingComponent.ori.valType:num
GratingComponent.phase.default:0.0
GratingComponent.phase.allowedLabels:[]
GratingComponent.phase.allowedTypes:[]
GratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.phase.allowedVals:[]
GratingComponent.phase.canBePath:True
GratingComponent.phase.categ:Texture
GratingComponent.phase.codeWanted:False
GratingComponent.phase.direct:True
GratingComponent.phase.hint:Spatial positioning of the image on the grating (wraps in range 0-1.0)
GratingComponent.phase.inputType:single
GratingComponent.phase.label:Phase (in cycles)
GratingComponent.phase.readOnly:False
GratingComponent.phase.staticUpdater:None
GratingComponent.phase.updates:constant
GratingComponent.phase.val:0.0
GratingComponent.phase.valType:num
GratingComponent.pos.default:(0, 0)
GratingComponent.pos.allowedLabels:[]
GratingComponent.pos.allowedTypes:[]
GratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.pos.allowedVals:[]
GratingComponent.pos.canBePath:True
GratingComponent.pos.categ:Layout
GratingComponent.pos.codeWanted:False
GratingComponent.pos.direct:True
GratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
GratingComponent.pos.inputType:single
GratingComponent.pos.label:Position [x,y]
GratingComponent.pos.readOnly:False
GratingComponent.pos.staticUpdater:None
GratingComponent.pos.updates:constant
GratingComponent.pos.val:(0, 0)
GratingComponent.pos.valType:list
GratingComponent.saveStartStop.default:True
GratingComponent.saveStartStop.allowedLabels:[]
GratingComponent.saveStartStop.allowedTypes:[]
GratingComponent.saveStartStop.allowedUpdates:None
GratingComponent.saveStartStop.allowedVals:[]
GratingComponent.saveStartStop.canBePath:True
GratingComponent.saveStartStop.categ:Data
GratingComponent.saveStartStop.codeWanted:False
GratingComponent.saveStartStop.direct:True
GratingComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
GratingComponent.saveStartStop.inputType:bool
GratingComponent.saveStartStop.label:Save onset/offset times
GratingComponent.saveStartStop.readOnly:False
GratingComponent.saveStartStop.staticUpdater:None
GratingComponent.saveStartStop.updates:None
GratingComponent.saveStartStop.val:True
GratingComponent.saveStartStop.valType:bool
GratingComponent.sf.default:None
GratingComponent.sf.allowedLabels:[]
GratingComponent.sf.allowedTypes:[]
GratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.sf.allowedVals:[]
GratingComponent.sf.canBePath:True
GratingComponent.sf.categ:Texture
GratingComponent.sf.codeWanted:False
GratingComponent.sf.direct:True
GratingComponent.sf.hint:Spatial frequency of image repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
GratingComponent.sf.inputType:single
GratingComponent.sf.label:Spatial frequency
GratingComponent.sf.readOnly:False
GratingComponent.sf.staticUpdater:None
GratingComponent.sf.updates:constant
GratingComponent.sf.val:
GratingComponent.sf.valType:num
GratingComponent.size.default:(0.5, 0.5)
GratingComponent.size.allowedLabels:[]
GratingComponent.size.allowedTypes:[]
GratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.size.allowedVals:[]
GratingComponent.size.canBePath:True
GratingComponent.size.categ:Layout
GratingComponent.size.codeWanted:False
GratingComponent.size.direct:True
GratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
GratingComponent.size.inputType:single
GratingComponent.size.label:Size [w,h]
GratingComponent.size.readOnly:False
GratingComponent.size.staticUpdater:None
GratingComponent.size.updates:constant
GratingComponent.size.val:(0.5, 0.5)
GratingComponent.size.valType:list
GratingComponent.startEstim.default:
GratingComponent.startEstim.allowedLabels:[]
GratingComponent.startEstim.allowedTypes:[]
GratingComponent.startEstim.allowedUpdates:None
GratingComponent.startEstim.allowedVals:[]
GratingComponent.startEstim.canBePath:True
GratingComponent.startEstim.categ:Basic
GratingComponent.startEstim.codeWanted:False
GratingComponent.startEstim.direct:False
GratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
GratingComponent.startEstim.inputType:single
GratingComponent.startEstim.label:Expected start (s)
GratingComponent.startEstim.readOnly:False
GratingComponent.startEstim.staticUpdater:None
GratingComponent.startEstim.updates:None
GratingComponent.startEstim.val:
GratingComponent.startEstim.valType:code
GratingComponent.startType.default:'time (s)'
GratingComponent.startType.allowedLabels:[]
GratingComponent.startType.allowedTypes:[]
GratingComponent.startType.allowedUpdates:None
GratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
GratingComponent.startType.canBePath:True
GratingComponent.startType.categ:Basic
GratingComponent.startType.codeWanted:False
GratingComponent.startType.direct:False
GratingComponent.startType.hint:How do you want to define your start point?
GratingComponent.startType.inputType:choice
GratingComponent.startType.label:start type
GratingComponent.startType.readOnly:False
GratingComponent.startType.staticUpdater:None
GratingComponent.startType.updates:None
GratingComponent.startType.val:time (s)
GratingComponent.startType.valType:str
GratingComponent.startVal.default:0.0
GratingComponent.startVal.allowedLabels:[]
GratingComponent.startVal.allowedTypes:[]
GratingComponent.startVal.allowedUpdates:None
GratingComponent.startVal.allowedVals:[]
GratingComponent.startVal.canBePath:True
GratingComponent.startVal.categ:Basic
GratingComponent.startVal.codeWanted:False
GratingComponent.startVal.direct:True
GratingComponent.startVal.hint:When does the component start?
GratingComponent.startVal.inputType:single
GratingComponent.startVal.label:Start
GratingComponent.startVal.readOnly:False
GratingComponent.startVal.staticUpdater:None
GratingComponent.startVal.updates:None
GratingComponent.startVal.val:0.0
GratingComponent.startVal.valType:code
GratingComponent.stopType.default:'duration (s)'
GratingComponent.stopType.allowedLabels:[]
GratingComponent.stopType.allowedTypes:[]
GratingComponent.stopType.allowedUpdates:None
GratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
GratingComponent.stopType.canBePath:True
GratingComponent.stopType.categ:Basic
GratingComponent.stopType.codeWanted:False
GratingComponent.stopType.direct:False
GratingComponent.stopType.hint:How do you want to define your end point?
GratingComponent.stopType.inputType:choice
GratingComponent.stopType.label:stop type
GratingComponent.stopType.readOnly:False
GratingComponent.stopType.staticUpdater:None
GratingComponent.stopType.updates:None
GratingComponent.stopType.val:duration (s)
GratingComponent.stopType.valType:str
GratingComponent.stopVal.default:1.0
GratingComponent.stopVal.allowedLabels:[]
GratingComponent.stopVal.allowedTypes:[]
GratingComponent.stopVal.allowedUpdates:[]
GratingComponent.stopVal.allowedVals:[]
GratingComponent.stopVal.canBePath:True
GratingComponent.stopVal.categ:Basic
GratingComponent.stopVal.codeWanted:False
GratingComponent.stopVal.direct:True
GratingComponent.stopVal.hint:When does the component end? (blank is endless)
GratingComponent.stopVal.inputType:single
GratingComponent.stopVal.label:Stop
GratingComponent.stopVal.readOnly:False
GratingComponent.stopVal.staticUpdater:None
GratingComponent.stopVal.updates:constant
GratingComponent.stopVal.val:1.0
GratingComponent.stopVal.valType:code
GratingComponent.syncScreenRefresh.default:True
GratingComponent.syncScreenRefresh.allowedLabels:[]
GratingComponent.syncScreenRefresh.allowedTypes:[]
GratingComponent.syncScreenRefresh.allowedUpdates:None
GratingComponent.syncScreenRefresh.allowedVals:[]
GratingComponent.syncScreenRefresh.canBePath:True
GratingComponent.syncScreenRefresh.categ:Data
GratingComponent.syncScreenRefresh.codeWanted:False
GratingComponent.syncScreenRefresh.direct:True
GratingComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
GratingComponent.syncScreenRefresh.inputType:bool
GratingComponent.syncScreenRefresh.label:Sync timing with screen refresh
GratingComponent.syncScreenRefresh.readOnly:True
GratingComponent.syncScreenRefresh.staticUpdater:None
GratingComponent.syncScreenRefresh.updates:None
GratingComponent.syncScreenRefresh.val:True
GratingComponent.syncScreenRefresh.valType:bool
GratingComponent.tex.default:'sin'
GratingComponent.tex.allowedLabels:[]
GratingComponent.tex.allowedTypes:[]
GratingComponent.tex.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.tex.allowedVals:['sin', 'sqr', 'sinXsin']
GratingComponent.tex.canBePath:True
GratingComponent.tex.categ:Texture
GratingComponent.tex.codeWanted:False
GratingComponent.tex.direct:True
GratingComponent.tex.hint:The (2D) texture of the grating - can be sin, sqr, sinXsin... or a filename (including path)
GratingComponent.tex.inputType:file
GratingComponent.tex.label:Texture
GratingComponent.tex.readOnly:False
GratingComponent.tex.staticUpdater:None
GratingComponent.tex.updates:constant
GratingComponent.tex.val:sin
GratingComponent.tex.valType:file
GratingComponent.texture resolution.default:128.0
GratingComponent.texture resolution.allowedLabels:[]
GratingComponent.texture resolution.allowedTypes:[]
GratingComponent.texture resolution.allowedUpdates:[]
GratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
GratingComponent.texture resolution.canBePath:True
GratingComponent.texture resolution.categ:Texture
GratingComponent.texture resolution.codeWanted:False
GratingComponent.texture resolution.direct:True
GratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
GratingComponent.texture resolution.inputType:choice
GratingComponent.texture resolution.label:Texture resolution
GratingComponent.texture resolution.readOnly:False
GratingComponent.texture resolution.staticUpdater:None
GratingComponent.texture resolution.updates:constant
GratingComponent.texture resolution.val:128
GratingComponent.texture resolution.valType:num
GratingComponent.units.default:'from exp settings'
GratingComponent.units.allowedLabels:[]
GratingComponent.units.allowedTypes:[]
GratingComponent.units.allowedUpdates:None
GratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
GratingComponent.units.canBePath:True
GratingComponent.units.categ:Layout
GratingComponent.units.codeWanted:False
GratingComponent.units.direct:True
GratingComponent.units.hint:Units of dimensions for this stimulus
GratingComponent.units.inputType:choice
GratingComponent.units.label:Spatial Units
GratingComponent.units.readOnly:False
GratingComponent.units.staticUpdater:None
GratingComponent.units.updates:None
GratingComponent.units.val:from exp settings
GratingComponent.units.valType:str
ImageComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'image', 'mask', 'texture resolution']
ImageComponent.anchor.default:'center'
ImageComponent.anchor.allowedLabels:[]
ImageComponent.anchor.allowedTypes:[]
ImageComponent.anchor.allowedUpdates:None
ImageComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
ImageComponent.anchor.canBePath:True
ImageComponent.anchor.categ:Layout
ImageComponent.anchor.codeWanted:False
ImageComponent.anchor.direct:True
ImageComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
ImageComponent.anchor.inputType:choice
ImageComponent.anchor.label:Anchor
ImageComponent.anchor.readOnly:False
ImageComponent.anchor.staticUpdater:None
ImageComponent.anchor.updates:constant
ImageComponent.anchor.val:center
ImageComponent.anchor.valType:str
ImageComponent.color.default:[1,1,1]
ImageComponent.color.allowedLabels:[]
ImageComponent.color.allowedTypes:[]
ImageComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.color.allowedVals:[]
ImageComponent.color.canBePath:True
ImageComponent.color.categ:Appearance
ImageComponent.color.codeWanted:True
ImageComponent.color.direct:True
ImageComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
ImageComponent.color.inputType:color
ImageComponent.color.label:Foreground Color
ImageComponent.color.readOnly:False
ImageComponent.color.staticUpdater:None
ImageComponent.color.updates:constant
ImageComponent.color.val:$[1,1,1]
ImageComponent.color.valType:color
ImageComponent.colorSpace.default:'rgb'
ImageComponent.colorSpace.allowedLabels:[]
ImageComponent.colorSpace.allowedTypes:[]
ImageComponent.colorSpace.allowedUpdates:None
ImageComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
ImageComponent.colorSpace.canBePath:True
ImageComponent.colorSpace.categ:Appearance
ImageComponent.colorSpace.codeWanted:False
ImageComponent.colorSpace.direct:True
ImageComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
ImageComponent.colorSpace.inputType:choice
ImageComponent.colorSpace.label:Color Space
ImageComponent.colorSpace.readOnly:False
ImageComponent.colorSpace.staticUpdater:None
ImageComponent.colorSpace.updates:constant
ImageComponent.colorSpace.val:rgb
ImageComponent.colorSpace.valType:str
ImageComponent.contrast.default:1.0
ImageComponent.contrast.allowedLabels:[]
ImageComponent.contrast.allowedTypes:[]
ImageComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.contrast.allowedVals:[]
ImageComponent.contrast.canBePath:True
ImageComponent.contrast.categ:Appearance
ImageComponent.contrast.codeWanted:False
ImageComponent.contrast.direct:True
ImageComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
ImageComponent.contrast.inputType:single
ImageComponent.contrast.label:Contrast
ImageComponent.contrast.readOnly:False
ImageComponent.contrast.staticUpdater:None
ImageComponent.contrast.updates:constant
ImageComponent.contrast.val:1
ImageComponent.contrast.valType:num
ImageComponent.disabled.default:False
ImageComponent.disabled.allowedLabels:[]
ImageComponent.disabled.allowedTypes:[]
ImageComponent.disabled.allowedUpdates:None
ImageComponent.disabled.allowedVals:[]
ImageComponent.disabled.canBePath:True
ImageComponent.disabled.categ:Testing
ImageComponent.disabled.codeWanted:False
ImageComponent.disabled.direct:False
ImageComponent.disabled.hint:Disable this component
ImageComponent.disabled.inputType:bool
ImageComponent.disabled.label:Disable component
ImageComponent.disabled.readOnly:False
ImageComponent.disabled.staticUpdater:None
ImageComponent.disabled.updates:None
ImageComponent.disabled.val:False
ImageComponent.disabled.valType:bool
ImageComponent.durationEstim.default:
ImageComponent.durationEstim.allowedLabels:[]
ImageComponent.durationEstim.allowedTypes:[]
ImageComponent.durationEstim.allowedUpdates:None
ImageComponent.durationEstim.allowedVals:[]
ImageComponent.durationEstim.canBePath:True
ImageComponent.durationEstim.categ:Basic
ImageComponent.durationEstim.codeWanted:False
ImageComponent.durationEstim.direct:False
ImageComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ImageComponent.durationEstim.inputType:single
ImageComponent.durationEstim.label:Expected duration (s)
ImageComponent.durationEstim.readOnly:False
ImageComponent.durationEstim.staticUpdater:None
ImageComponent.durationEstim.updates:None
ImageComponent.durationEstim.val:
ImageComponent.durationEstim.valType:code
ImageComponent.flipHoriz.default:False
ImageComponent.flipHoriz.allowedLabels:[]
ImageComponent.flipHoriz.allowedTypes:[]
ImageComponent.flipHoriz.allowedUpdates:[]
ImageComponent.flipHoriz.allowedVals:[]
ImageComponent.flipHoriz.canBePath:True
ImageComponent.flipHoriz.categ:Layout
ImageComponent.flipHoriz.codeWanted:False
ImageComponent.flipHoriz.direct:True
ImageComponent.flipHoriz.hint:Should the image be flipped horizontally (left to right)?
ImageComponent.flipHoriz.inputType:bool
ImageComponent.flipHoriz.label:Flip horizontally
ImageComponent.flipHoriz.readOnly:False
ImageComponent.flipHoriz.staticUpdater:None
ImageComponent.flipHoriz.updates:constant
ImageComponent.flipHoriz.val:False
ImageComponent.flipHoriz.valType:bool
ImageComponent.flipVert.default:False
ImageComponent.flipVert.allowedLabels:[]
ImageComponent.flipVert.allowedTypes:[]
ImageComponent.flipVert.allowedUpdates:[]
ImageComponent.flipVert.allowedVals:[]
ImageComponent.flipVert.canBePath:True
ImageComponent.flipVert.categ:Layout
ImageComponent.flipVert.codeWanted:False
ImageComponent.flipVert.direct:True
ImageComponent.flipVert.hint:Should the image be flipped vertically (top to bottom)?
ImageComponent.flipVert.inputType:bool
ImageComponent.flipVert.label:Flip vertically
ImageComponent.flipVert.readOnly:False
ImageComponent.flipVert.staticUpdater:None
ImageComponent.flipVert.updates:constant
ImageComponent.flipVert.val:False
ImageComponent.flipVert.valType:bool
ImageComponent.image.default:'.'
ImageComponent.image.allowedLabels:[]
ImageComponent.image.allowedTypes:[]
ImageComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.image.allowedVals:[]
ImageComponent.image.canBePath:True
ImageComponent.image.categ:Basic
ImageComponent.image.codeWanted:False
ImageComponent.image.direct:True
ImageComponent.image.hint:The image to be displayed - a filename, including path
ImageComponent.image.inputType:file
ImageComponent.image.label:Image
ImageComponent.image.readOnly:False
ImageComponent.image.staticUpdater:None
ImageComponent.image.updates:constant
ImageComponent.image.val:
ImageComponent.image.valType:file
ImageComponent.interpolate.default:'linear'
ImageComponent.interpolate.allowedLabels:[]
ImageComponent.interpolate.allowedTypes:[]
ImageComponent.interpolate.allowedUpdates:[]
ImageComponent.interpolate.allowedVals:['linear', 'nearest']
ImageComponent.interpolate.canBePath:True
ImageComponent.interpolate.categ:Texture
ImageComponent.interpolate.codeWanted:False
ImageComponent.interpolate.direct:False
ImageComponent.interpolate.hint:How should the image be interpolated if/when rescaled
ImageComponent.interpolate.inputType:choice
ImageComponent.interpolate.label:Interpolate
ImageComponent.interpolate.readOnly:False
ImageComponent.interpolate.staticUpdater:None
ImageComponent.interpolate.updates:constant
ImageComponent.interpolate.val:linear
ImageComponent.interpolate.valType:str
ImageComponent.mask.default:''
ImageComponent.mask.allowedLabels:[]
ImageComponent.mask.allowedTypes:[]
ImageComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.mask.allowedVals:[]
ImageComponent.mask.canBePath:True
ImageComponent.mask.categ:Texture
ImageComponent.mask.codeWanted:False
ImageComponent.mask.direct:True
ImageComponent.mask.hint:An image to define the alpha mask through which the image is seen - gauss, circle, None or a filename (including path)
ImageComponent.mask.inputType:file
ImageComponent.mask.label:Mask
ImageComponent.mask.readOnly:False
ImageComponent.mask.staticUpdater:None
ImageComponent.mask.updates:constant
ImageComponent.mask.val:
ImageComponent.mask.valType:str
ImageComponent.name.default:image
ImageComponent.name.allowedLabels:[]
ImageComponent.name.allowedTypes:[]
ImageComponent.name.allowedUpdates:None
ImageComponent.name.allowedVals:[]
ImageComponent.name.canBePath:True
ImageComponent.name.categ:Basic
ImageComponent.name.codeWanted:False
ImageComponent.name.direct:True
ImageComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
ImageComponent.name.inputType:single
ImageComponent.name.label:Name
ImageComponent.name.readOnly:False
ImageComponent.name.staticUpdater:None
ImageComponent.name.val:image
ImageComponent.name.valType:code
ImageComponent.opacity.default:None
ImageComponent.opacity.allowedLabels:[]
ImageComponent.opacity.allowedTypes:[]
ImageComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.opacity.allowedVals:[]
ImageComponent.opacity.canBePath:True
ImageComponent.opacity.categ:Appearance
ImageComponent.opacity.codeWanted:False
ImageComponent.opacity.direct:True
ImageComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
ImageComponent.opacity.inputType:single
ImageComponent.opacity.label:Opacity
ImageComponent.opacity.readOnly:False
ImageComponent.opacity.staticUpdater:None
ImageComponent.opacity.updates:constant
ImageComponent.opacity.val:
ImageComponent.opacity.valType:num
ImageComponent.ori.default:0.0
ImageComponent.ori.allowedLabels:[]
ImageComponent.ori.allowedTypes:[]
ImageComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.ori.allowedVals:[-360, 360]
ImageComponent.ori.canBePath:True
ImageComponent.ori.categ:Layout
ImageComponent.ori.codeWanted:False
ImageComponent.ori.direct:True
ImageComponent.ori.hint:Orientation of this stimulus (in deg)
ImageComponent.ori.inputType:spin
ImageComponent.ori.label:Orientation
ImageComponent.ori.readOnly:False
ImageComponent.ori.staticUpdater:None
ImageComponent.ori.updates:constant
ImageComponent.ori.val:0
ImageComponent.ori.valType:num
ImageComponent.pos.default:(0, 0)
ImageComponent.pos.allowedLabels:[]
ImageComponent.pos.allowedTypes:[]
ImageComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.pos.allowedVals:[]
ImageComponent.pos.canBePath:True
ImageComponent.pos.categ:Layout
ImageComponent.pos.codeWanted:False
ImageComponent.pos.direct:True
ImageComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
ImageComponent.pos.inputType:single
ImageComponent.pos.label:Position [x,y]
ImageComponent.pos.readOnly:False
ImageComponent.pos.staticUpdater:None
ImageComponent.pos.updates:constant
ImageComponent.pos.val:(0, 0)
ImageComponent.pos.valType:list
ImageComponent.saveStartStop.default:True
ImageComponent.saveStartStop.allowedLabels:[]
ImageComponent.saveStartStop.allowedTypes:[]
ImageComponent.saveStartStop.allowedUpdates:None
ImageComponent.saveStartStop.allowedVals:[]
ImageComponent.saveStartStop.canBePath:True
ImageComponent.saveStartStop.categ:Data
ImageComponent.saveStartStop.codeWanted:False
ImageComponent.saveStartStop.direct:True
ImageComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
ImageComponent.saveStartStop.inputType:bool
ImageComponent.saveStartStop.label:Save onset/offset times
ImageComponent.saveStartStop.readOnly:False
ImageComponent.saveStartStop.staticUpdater:None
ImageComponent.saveStartStop.updates:None
ImageComponent.saveStartStop.val:True
ImageComponent.saveStartStop.valType:bool
ImageComponent.size.default:(0.5, 0.5)
ImageComponent.size.allowedLabels:[]
ImageComponent.size.allowedTypes:[]
ImageComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.size.allowedVals:[]
ImageComponent.size.canBePath:True
ImageComponent.size.categ:Layout
ImageComponent.size.codeWanted:False
ImageComponent.size.direct:True
ImageComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
ImageComponent.size.inputType:single
ImageComponent.size.label:Size [w,h]
ImageComponent.size.readOnly:False
ImageComponent.size.staticUpdater:None
ImageComponent.size.updates:constant
ImageComponent.size.val:(0.5, 0.5)
ImageComponent.size.valType:list
ImageComponent.startEstim.default:
ImageComponent.startEstim.allowedLabels:[]
ImageComponent.startEstim.allowedTypes:[]
ImageComponent.startEstim.allowedUpdates:None
ImageComponent.startEstim.allowedVals:[]
ImageComponent.startEstim.canBePath:True
ImageComponent.startEstim.categ:Basic
ImageComponent.startEstim.codeWanted:False
ImageComponent.startEstim.direct:False
ImageComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ImageComponent.startEstim.inputType:single
ImageComponent.startEstim.label:Expected start (s)
ImageComponent.startEstim.readOnly:False
ImageComponent.startEstim.staticUpdater:None
ImageComponent.startEstim.updates:None
ImageComponent.startEstim.val:
ImageComponent.startEstim.valType:code
ImageComponent.startType.default:'time (s)'
ImageComponent.startType.allowedLabels:[]
ImageComponent.startType.allowedTypes:[]
ImageComponent.startType.allowedUpdates:None
ImageComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ImageComponent.startType.canBePath:True
ImageComponent.startType.categ:Basic
ImageComponent.startType.codeWanted:False
ImageComponent.startType.direct:False
ImageComponent.startType.hint:How do you want to define your start point?
ImageComponent.startType.inputType:choice
ImageComponent.startType.label:start type
ImageComponent.startType.readOnly:False
ImageComponent.startType.staticUpdater:None
ImageComponent.startType.updates:None
ImageComponent.startType.val:time (s)
ImageComponent.startType.valType:str
ImageComponent.startVal.default:0.0
ImageComponent.startVal.allowedLabels:[]
ImageComponent.startVal.allowedTypes:[]
ImageComponent.startVal.allowedUpdates:None
ImageComponent.startVal.allowedVals:[]
ImageComponent.startVal.canBePath:True
ImageComponent.startVal.categ:Basic
ImageComponent.startVal.codeWanted:False
ImageComponent.startVal.direct:True
ImageComponent.startVal.hint:When does the component start?
ImageComponent.startVal.inputType:single
ImageComponent.startVal.label:Start
ImageComponent.startVal.readOnly:False
ImageComponent.startVal.staticUpdater:None
ImageComponent.startVal.updates:None
ImageComponent.startVal.val:0.0
ImageComponent.startVal.valType:code
ImageComponent.stopType.default:'duration (s)'
ImageComponent.stopType.allowedLabels:[]
ImageComponent.stopType.allowedTypes:[]
ImageComponent.stopType.allowedUpdates:None
ImageComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ImageComponent.stopType.canBePath:True
ImageComponent.stopType.categ:Basic
ImageComponent.stopType.codeWanted:False
ImageComponent.stopType.direct:False
ImageComponent.stopType.hint:How do you want to define your end point?
ImageComponent.stopType.inputType:choice
ImageComponent.stopType.label:stop type
ImageComponent.stopType.readOnly:False
ImageComponent.stopType.staticUpdater:None
ImageComponent.stopType.updates:None
ImageComponent.stopType.val:duration (s)
ImageComponent.stopType.valType:str
ImageComponent.stopVal.default:1.0
ImageComponent.stopVal.allowedLabels:[]
ImageComponent.stopVal.allowedTypes:[]
ImageComponent.stopVal.allowedUpdates:[]
ImageComponent.stopVal.allowedVals:[]
ImageComponent.stopVal.canBePath:True
ImageComponent.stopVal.categ:Basic
ImageComponent.stopVal.codeWanted:False
ImageComponent.stopVal.direct:True
ImageComponent.stopVal.hint:When does the component end? (blank is endless)
ImageComponent.stopVal.inputType:single
ImageComponent.stopVal.label:Stop
ImageComponent.stopVal.readOnly:False
ImageComponent.stopVal.staticUpdater:None
ImageComponent.stopVal.updates:constant
ImageComponent.stopVal.val:1.0
ImageComponent.stopVal.valType:code
ImageComponent.syncScreenRefresh.default:True
ImageComponent.syncScreenRefresh.allowedLabels:[]
ImageComponent.syncScreenRefresh.allowedTypes:[]
ImageComponent.syncScreenRefresh.allowedUpdates:None
ImageComponent.syncScreenRefresh.allowedVals:[]
ImageComponent.syncScreenRefresh.canBePath:True
ImageComponent.syncScreenRefresh.categ:Data
ImageComponent.syncScreenRefresh.codeWanted:False
ImageComponent.syncScreenRefresh.direct:True
ImageComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
ImageComponent.syncScreenRefresh.inputType:bool
ImageComponent.syncScreenRefresh.label:Sync timing with screen refresh
ImageComponent.syncScreenRefresh.readOnly:True
ImageComponent.syncScreenRefresh.staticUpdater:None
ImageComponent.syncScreenRefresh.updates:None
ImageComponent.syncScreenRefresh.val:True
ImageComponent.syncScreenRefresh.valType:bool
ImageComponent.texture resolution.default:128.0
ImageComponent.texture resolution.allowedLabels:[]
ImageComponent.texture resolution.allowedTypes:[]
ImageComponent.texture resolution.allowedUpdates:[]
ImageComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
ImageComponent.texture resolution.canBePath:True
ImageComponent.texture resolution.categ:Texture
ImageComponent.texture resolution.codeWanted:False
ImageComponent.texture resolution.direct:True
ImageComponent.texture resolution.hint:Resolution of the mask if one is used.
ImageComponent.texture resolution.inputType:choice
ImageComponent.texture resolution.label:Texture resolution
ImageComponent.texture resolution.readOnly:False
ImageComponent.texture resolution.staticUpdater:None
ImageComponent.texture resolution.updates:constant
ImageComponent.texture resolution.val:128
ImageComponent.texture resolution.valType:num
ImageComponent.units.default:'from exp settings'
ImageComponent.units.allowedLabels:[]
ImageComponent.units.allowedTypes:[]
ImageComponent.units.allowedUpdates:None
ImageComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ImageComponent.units.canBePath:True
ImageComponent.units.categ:Layout
ImageComponent.units.codeWanted:False
ImageComponent.units.direct:True
ImageComponent.units.hint:Units of dimensions for this stimulus
ImageComponent.units.inputType:choice
ImageComponent.units.label:Spatial Units
ImageComponent.units.readOnly:False
ImageComponent.units.staticUpdater:None
ImageComponent.units.updates:None
ImageComponent.units.val:from exp settings
ImageComponent.units.valType:str
JoyButtonsComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns', 'deviceNumber']
JoyButtonsComponent.allowedKeys.default:[0,1,2,3,4]
JoyButtonsComponent.allowedKeys.allowedLabels:[]
JoyButtonsComponent.allowedKeys.allowedTypes:[]
JoyButtonsComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
JoyButtonsComponent.allowedKeys.allowedVals:[]
JoyButtonsComponent.allowedKeys.canBePath:True
JoyButtonsComponent.allowedKeys.categ:Data
JoyButtonsComponent.allowedKeys.codeWanted:False
JoyButtonsComponent.allowedKeys.direct:True
JoyButtonsComponent.allowedKeys.hint:A comma-separated list of button numbers, such as 0,1,2,3,4
JoyButtonsComponent.allowedKeys.inputType:single
JoyButtonsComponent.allowedKeys.label:Allowed buttons
JoyButtonsComponent.allowedKeys.readOnly:False
JoyButtonsComponent.allowedKeys.staticUpdater:None
JoyButtonsComponent.allowedKeys.updates:constant
JoyButtonsComponent.allowedKeys.val:0,1,2,3,4
JoyButtonsComponent.allowedKeys.valType:list
JoyButtonsComponent.correctAns.default:[]
JoyButtonsComponent.correctAns.allowedLabels:[]
JoyButtonsComponent.correctAns.allowedTypes:[]
JoyButtonsComponent.correctAns.allowedUpdates:None
JoyButtonsComponent.correctAns.allowedVals:[]
JoyButtonsComponent.correctAns.canBePath:True
JoyButtonsComponent.correctAns.categ:Data
JoyButtonsComponent.correctAns.codeWanted:False
JoyButtonsComponent.correctAns.direct:True
JoyButtonsComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
JoyButtonsComponent.correctAns.inputType:single
JoyButtonsComponent.correctAns.label:Correct answer
JoyButtonsComponent.correctAns.readOnly:False
JoyButtonsComponent.correctAns.staticUpdater:None
JoyButtonsComponent.correctAns.updates:constant
JoyButtonsComponent.correctAns.val:
JoyButtonsComponent.correctAns.valType:list
JoyButtonsComponent.deviceNumber.default:0
JoyButtonsComponent.deviceNumber.allowedLabels:[]
JoyButtonsComponent.deviceNumber.allowedTypes:[]
JoyButtonsComponent.deviceNumber.allowedUpdates:[]
JoyButtonsComponent.deviceNumber.allowedVals:[]
JoyButtonsComponent.deviceNumber.canBePath:True
JoyButtonsComponent.deviceNumber.categ:Hardware
JoyButtonsComponent.deviceNumber.codeWanted:False
JoyButtonsComponent.deviceNumber.direct:True
JoyButtonsComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
JoyButtonsComponent.deviceNumber.inputType:int
JoyButtonsComponent.deviceNumber.label:Device number
JoyButtonsComponent.deviceNumber.readOnly:False
JoyButtonsComponent.deviceNumber.staticUpdater:None
JoyButtonsComponent.deviceNumber.updates:constant
JoyButtonsComponent.deviceNumber.val:0
JoyButtonsComponent.deviceNumber.valType:int
JoyButtonsComponent.disabled.default:False
JoyButtonsComponent.disabled.allowedLabels:[]
JoyButtonsComponent.disabled.allowedTypes:[]
JoyButtonsComponent.disabled.allowedUpdates:None
JoyButtonsComponent.disabled.allowedVals:[]
JoyButtonsComponent.disabled.canBePath:True
JoyButtonsComponent.disabled.categ:Testing
JoyButtonsComponent.disabled.codeWanted:False
JoyButtonsComponent.disabled.direct:False
JoyButtonsComponent.disabled.hint:Disable this component
JoyButtonsComponent.disabled.inputType:bool
JoyButtonsComponent.disabled.label:Disable component
JoyButtonsComponent.disabled.readOnly:False
JoyButtonsComponent.disabled.staticUpdater:None
JoyButtonsComponent.disabled.updates:None
JoyButtonsComponent.disabled.val:False
JoyButtonsComponent.disabled.valType:bool
JoyButtonsComponent.durationEstim.default:
JoyButtonsComponent.durationEstim.allowedLabels:[]
JoyButtonsComponent.durationEstim.allowedTypes:[]
JoyButtonsComponent.durationEstim.allowedUpdates:None
JoyButtonsComponent.durationEstim.allowedVals:[]
JoyButtonsComponent.durationEstim.canBePath:True
JoyButtonsComponent.durationEstim.categ:Basic
JoyButtonsComponent.durationEstim.codeWanted:False
JoyButtonsComponent.durationEstim.direct:False
JoyButtonsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
JoyButtonsComponent.durationEstim.inputType:single
JoyButtonsComponent.durationEstim.label:Expected duration (s)
JoyButtonsComponent.durationEstim.readOnly:False
JoyButtonsComponent.durationEstim.staticUpdater:None
JoyButtonsComponent.durationEstim.updates:None
JoyButtonsComponent.durationEstim.val:
JoyButtonsComponent.durationEstim.valType:code
JoyButtonsComponent.forceEndRoutine.default:True
JoyButtonsComponent.forceEndRoutine.allowedLabels:[]
JoyButtonsComponent.forceEndRoutine.allowedTypes:[]
JoyButtonsComponent.forceEndRoutine.allowedUpdates:None
JoyButtonsComponent.forceEndRoutine.allowedVals:[]
JoyButtonsComponent.forceEndRoutine.canBePath:True
JoyButtonsComponent.forceEndRoutine.categ:Basic
JoyButtonsComponent.forceEndRoutine.codeWanted:False
JoyButtonsComponent.forceEndRoutine.direct:True
JoyButtonsComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
JoyButtonsComponent.forceEndRoutine.inputType:bool
JoyButtonsComponent.forceEndRoutine.label:Force end of Routine
JoyButtonsComponent.forceEndRoutine.readOnly:False
JoyButtonsComponent.forceEndRoutine.staticUpdater:None
JoyButtonsComponent.forceEndRoutine.updates:constant
JoyButtonsComponent.forceEndRoutine.val:True
JoyButtonsComponent.forceEndRoutine.valType:bool
JoyButtonsComponent.name.default:button_resp
JoyButtonsComponent.name.allowedLabels:[]
JoyButtonsComponent.name.allowedTypes:[]
JoyButtonsComponent.name.allowedUpdates:None
JoyButtonsComponent.name.allowedVals:[]
JoyButtonsComponent.name.canBePath:True
JoyButtonsComponent.name.categ:Basic
JoyButtonsComponent.name.codeWanted:False
JoyButtonsComponent.name.direct:True
JoyButtonsComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
JoyButtonsComponent.name.inputType:single
JoyButtonsComponent.name.label:Name
JoyButtonsComponent.name.readOnly:False
JoyButtonsComponent.name.staticUpdater:None
JoyButtonsComponent.name.val:button_resp
JoyButtonsComponent.name.valType:code
JoyButtonsComponent.saveStartStop.default:True
JoyButtonsComponent.saveStartStop.allowedLabels:[]
JoyButtonsComponent.saveStartStop.allowedTypes:[]
JoyButtonsComponent.saveStartStop.allowedUpdates:None
JoyButtonsComponent.saveStartStop.allowedVals:[]
JoyButtonsComponent.saveStartStop.canBePath:True
JoyButtonsComponent.saveStartStop.categ:Data
JoyButtonsComponent.saveStartStop.codeWanted:False
JoyButtonsComponent.saveStartStop.direct:True
JoyButtonsComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
JoyButtonsComponent.saveStartStop.inputType:bool
JoyButtonsComponent.saveStartStop.label:Save onset/offset times
JoyButtonsComponent.saveStartStop.readOnly:False
JoyButtonsComponent.saveStartStop.staticUpdater:None
JoyButtonsComponent.saveStartStop.updates:None
JoyButtonsComponent.saveStartStop.val:True
JoyButtonsComponent.saveStartStop.valType:bool
JoyButtonsComponent.startEstim.default:
JoyButtonsComponent.startEstim.allowedLabels:[]
JoyButtonsComponent.startEstim.allowedTypes:[]
JoyButtonsComponent.startEstim.allowedUpdates:None
JoyButtonsComponent.startEstim.allowedVals:[]
JoyButtonsComponent.startEstim.canBePath:True
JoyButtonsComponent.startEstim.categ:Basic
JoyButtonsComponent.startEstim.codeWanted:False
JoyButtonsComponent.startEstim.direct:False
JoyButtonsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
JoyButtonsComponent.startEstim.inputType:single
JoyButtonsComponent.startEstim.label:Expected start (s)
JoyButtonsComponent.startEstim.readOnly:False
JoyButtonsComponent.startEstim.staticUpdater:None
JoyButtonsComponent.startEstim.updates:None
JoyButtonsComponent.startEstim.val:
JoyButtonsComponent.startEstim.valType:code
JoyButtonsComponent.startType.default:'time (s)'
JoyButtonsComponent.startType.allowedLabels:[]
JoyButtonsComponent.startType.allowedTypes:[]
JoyButtonsComponent.startType.allowedUpdates:None
JoyButtonsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
JoyButtonsComponent.startType.canBePath:True
JoyButtonsComponent.startType.categ:Basic
JoyButtonsComponent.startType.codeWanted:False
JoyButtonsComponent.startType.direct:False
JoyButtonsComponent.startType.hint:How do you want to define your start point?
JoyButtonsComponent.startType.inputType:choice
JoyButtonsComponent.startType.label:start type
JoyButtonsComponent.startType.readOnly:False
JoyButtonsComponent.startType.staticUpdater:None
JoyButtonsComponent.startType.updates:None
JoyButtonsComponent.startType.val:time (s)
JoyButtonsComponent.startType.valType:str
JoyButtonsComponent.startVal.default:0.0
JoyButtonsComponent.startVal.allowedLabels:[]
JoyButtonsComponent.startVal.allowedTypes:[]
JoyButtonsComponent.startVal.allowedUpdates:None
JoyButtonsComponent.startVal.allowedVals:[]
JoyButtonsComponent.startVal.canBePath:True
JoyButtonsComponent.startVal.categ:Basic
JoyButtonsComponent.startVal.codeWanted:False
JoyButtonsComponent.startVal.direct:True
JoyButtonsComponent.startVal.hint:When does the component start?
JoyButtonsComponent.startVal.inputType:single
JoyButtonsComponent.startVal.label:Start
JoyButtonsComponent.startVal.readOnly:False
JoyButtonsComponent.startVal.staticUpdater:None
JoyButtonsComponent.startVal.updates:None
JoyButtonsComponent.startVal.val:0.0
JoyButtonsComponent.startVal.valType:code
JoyButtonsComponent.stopType.default:'duration (s)'
JoyButtonsComponent.stopType.allowedLabels:[]
JoyButtonsComponent.stopType.allowedTypes:[]
JoyButtonsComponent.stopType.allowedUpdates:None
JoyButtonsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
JoyButtonsComponent.stopType.canBePath:True
JoyButtonsComponent.stopType.categ:Basic
JoyButtonsComponent.stopType.codeWanted:False
JoyButtonsComponent.stopType.direct:False
JoyButtonsComponent.stopType.hint:How do you want to define your end point?
JoyButtonsComponent.stopType.inputType:choice
JoyButtonsComponent.stopType.label:stop type
JoyButtonsComponent.stopType.readOnly:False
JoyButtonsComponent.stopType.staticUpdater:None
JoyButtonsComponent.stopType.updates:None
JoyButtonsComponent.stopType.val:duration (s)
JoyButtonsComponent.stopType.valType:str
JoyButtonsComponent.stopVal.default:
JoyButtonsComponent.stopVal.allowedLabels:[]
JoyButtonsComponent.stopVal.allowedTypes:[]
JoyButtonsComponent.stopVal.allowedUpdates:[]
JoyButtonsComponent.stopVal.allowedVals:[]
JoyButtonsComponent.stopVal.canBePath:True
JoyButtonsComponent.stopVal.categ:Basic
JoyButtonsComponent.stopVal.codeWanted:False
JoyButtonsComponent.stopVal.direct:True
JoyButtonsComponent.stopVal.hint:When does the component end? (blank is endless)
JoyButtonsComponent.stopVal.inputType:single
JoyButtonsComponent.stopVal.label:Stop
JoyButtonsComponent.stopVal.readOnly:False
JoyButtonsComponent.stopVal.staticUpdater:None
JoyButtonsComponent.stopVal.updates:constant
JoyButtonsComponent.stopVal.val:
JoyButtonsComponent.stopVal.valType:code
JoyButtonsComponent.store.default:'last key'
JoyButtonsComponent.store.allowedLabels:[]
JoyButtonsComponent.store.allowedTypes:[]
JoyButtonsComponent.store.allowedUpdates:None
JoyButtonsComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
JoyButtonsComponent.store.canBePath:True
JoyButtonsComponent.store.categ:Data
JoyButtonsComponent.store.codeWanted:False
JoyButtonsComponent.store.direct:False
JoyButtonsComponent.store.hint:Choose which (if any) responses to store at the end of a trial
JoyButtonsComponent.store.inputType:choice
JoyButtonsComponent.store.label:Store
JoyButtonsComponent.store.readOnly:False
JoyButtonsComponent.store.staticUpdater:None
JoyButtonsComponent.store.updates:constant
JoyButtonsComponent.store.val:last key
JoyButtonsComponent.store.valType:str
JoyButtonsComponent.storeCorrect.default:False
JoyButtonsComponent.storeCorrect.allowedLabels:[]
JoyButtonsComponent.storeCorrect.allowedTypes:[]
JoyButtonsComponent.storeCorrect.allowedUpdates:None
JoyButtonsComponent.storeCorrect.allowedVals:[]
JoyButtonsComponent.storeCorrect.canBePath:True
JoyButtonsComponent.storeCorrect.categ:Data
JoyButtonsComponent.storeCorrect.codeWanted:False
JoyButtonsComponent.storeCorrect.direct:True
JoyButtonsComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
JoyButtonsComponent.storeCorrect.inputType:bool
JoyButtonsComponent.storeCorrect.label:Store correct
JoyButtonsComponent.storeCorrect.readOnly:False
JoyButtonsComponent.storeCorrect.staticUpdater:None
JoyButtonsComponent.storeCorrect.updates:constant
JoyButtonsComponent.storeCorrect.val:False
JoyButtonsComponent.storeCorrect.valType:bool
JoyButtonsComponent.syncScreenRefresh.default:True
JoyButtonsComponent.syncScreenRefresh.allowedLabels:[]
JoyButtonsComponent.syncScreenRefresh.allowedTypes:[]
JoyButtonsComponent.syncScreenRefresh.allowedUpdates:None
JoyButtonsComponent.syncScreenRefresh.allowedVals:[]
JoyButtonsComponent.syncScreenRefresh.canBePath:True
JoyButtonsComponent.syncScreenRefresh.categ:Data
JoyButtonsComponent.syncScreenRefresh.codeWanted:False
JoyButtonsComponent.syncScreenRefresh.direct:True
JoyButtonsComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
JoyButtonsComponent.syncScreenRefresh.inputType:bool
JoyButtonsComponent.syncScreenRefresh.label:sync RT with screen
JoyButtonsComponent.syncScreenRefresh.readOnly:False
JoyButtonsComponent.syncScreenRefresh.staticUpdater:None
JoyButtonsComponent.syncScreenRefresh.updates:constant
JoyButtonsComponent.syncScreenRefresh.val:True
JoyButtonsComponent.syncScreenRefresh.valType:bool
JoystickComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'forceEndRoutine', 'saveJoystickState', 'timeRelativeTo', 'clickable', 'saveParamsClickable', 'allowedButtons', 'deviceNumber']
JoystickComponent.allowedButtons.default:[]
JoystickComponent.allowedButtons.allowedLabels:[]
JoystickComponent.allowedButtons.allowedTypes:[]
JoystickComponent.allowedButtons.allowedUpdates:[]
JoystickComponent.allowedButtons.allowedVals:[]
JoystickComponent.allowedButtons.canBePath:True
JoystickComponent.allowedButtons.categ:Data
JoystickComponent.allowedButtons.codeWanted:False
JoystickComponent.allowedButtons.direct:True
JoystickComponent.allowedButtons.hint:Buttons to be read (blank for any) numbers separated by commas
JoystickComponent.allowedButtons.inputType:single
JoystickComponent.allowedButtons.label:Allowed Buttons
JoystickComponent.allowedButtons.readOnly:False
JoystickComponent.allowedButtons.staticUpdater:None
JoystickComponent.allowedButtons.updates:constant
JoystickComponent.allowedButtons.val:
JoystickComponent.allowedButtons.valType:list
JoystickComponent.clickable.default:[]
JoystickComponent.clickable.allowedLabels:[]
JoystickComponent.clickable.allowedTypes:[]
JoystickComponent.clickable.allowedUpdates:None
JoystickComponent.clickable.allowedVals:[]
JoystickComponent.clickable.canBePath:True
JoystickComponent.clickable.categ:Data
JoystickComponent.clickable.codeWanted:False
JoystickComponent.clickable.direct:True
JoystickComponent.clickable.hint:A comma-separated list of your stimulus names that can be "clicked" by the participant. e.g. target, foil
JoystickComponent.clickable.inputType:single
JoystickComponent.clickable.label:Clickable stimuli
JoystickComponent.clickable.readOnly:False
JoystickComponent.clickable.staticUpdater:None
JoystickComponent.clickable.updates:constant
JoystickComponent.clickable.val:
JoystickComponent.clickable.valType:list
JoystickComponent.deviceNumber.default:0
JoystickComponent.deviceNumber.allowedLabels:[]
JoystickComponent.deviceNumber.allowedTypes:[]
JoystickComponent.deviceNumber.allowedUpdates:[]
JoystickComponent.deviceNumber.allowedVals:[]
JoystickComponent.deviceNumber.canBePath:True
JoystickComponent.deviceNumber.categ:Hardware
JoystickComponent.deviceNumber.codeWanted:False
JoystickComponent.deviceNumber.direct:True
JoystickComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
JoystickComponent.deviceNumber.inputType:single
JoystickComponent.deviceNumber.label:Device number
JoystickComponent.deviceNumber.readOnly:False
JoystickComponent.deviceNumber.staticUpdater:None
JoystickComponent.deviceNumber.updates:constant
JoystickComponent.deviceNumber.val:0
JoystickComponent.deviceNumber.valType:int
JoystickComponent.disabled.default:False
JoystickComponent.disabled.allowedLabels:[]
JoystickComponent.disabled.allowedTypes:[]
JoystickComponent.disabled.allowedUpdates:None
JoystickComponent.disabled.allowedVals:[]
JoystickComponent.disabled.canBePath:True
JoystickComponent.disabled.categ:Testing
JoystickComponent.disabled.codeWanted:False
JoystickComponent.disabled.direct:False
JoystickComponent.disabled.hint:Disable this component
JoystickComponent.disabled.inputType:bool
JoystickComponent.disabled.label:Disable component
JoystickComponent.disabled.readOnly:False
JoystickComponent.disabled.staticUpdater:None
JoystickComponent.disabled.updates:None
JoystickComponent.disabled.val:False
JoystickComponent.disabled.valType:bool
JoystickComponent.durationEstim.default:
JoystickComponent.durationEstim.allowedLabels:[]
JoystickComponent.durationEstim.allowedTypes:[]
JoystickComponent.durationEstim.allowedUpdates:None
JoystickComponent.durationEstim.allowedVals:[]
JoystickComponent.durationEstim.canBePath:True
JoystickComponent.durationEstim.categ:Basic
JoystickComponent.durationEstim.codeWanted:False
JoystickComponent.durationEstim.direct:False
JoystickComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
JoystickComponent.durationEstim.inputType:single
JoystickComponent.durationEstim.label:Expected duration (s)
JoystickComponent.durationEstim.readOnly:False
JoystickComponent.durationEstim.staticUpdater:None
JoystickComponent.durationEstim.updates:None
JoystickComponent.durationEstim.val:
JoystickComponent.durationEstim.valType:code
JoystickComponent.forceEndRoutineOnPress.default:'any click'
JoystickComponent.forceEndRoutineOnPress.allowedLabels:[]
JoystickComponent.forceEndRoutineOnPress.allowedTypes:[]
JoystickComponent.forceEndRoutineOnPress.allowedUpdates:None
JoystickComponent.forceEndRoutineOnPress.allowedVals:['never', 'any click', 'valid click']
JoystickComponent.forceEndRoutineOnPress.canBePath:True
JoystickComponent.forceEndRoutineOnPress.categ:Basic
JoystickComponent.forceEndRoutineOnPress.codeWanted:False
JoystickComponent.forceEndRoutineOnPress.direct:False
JoystickComponent.forceEndRoutineOnPress.hint:Should a button press force the end of the routine (e.g end the trial)?
JoystickComponent.forceEndRoutineOnPress.inputType:choice
JoystickComponent.forceEndRoutineOnPress.label:End Routine on press
JoystickComponent.forceEndRoutineOnPress.readOnly:False
JoystickComponent.forceEndRoutineOnPress.staticUpdater:None
JoystickComponent.forceEndRoutineOnPress.updates:constant
JoystickComponent.forceEndRoutineOnPress.val:any click
JoystickComponent.forceEndRoutineOnPress.valType:str
JoystickComponent.name.default:joystick
JoystickComponent.name.allowedLabels:[]
JoystickComponent.name.allowedTypes:[]
JoystickComponent.name.allowedUpdates:None
JoystickComponent.name.allowedVals:[]
JoystickComponent.name.canBePath:True
JoystickComponent.name.categ:Basic
JoystickComponent.name.codeWanted:False
JoystickComponent.name.direct:True
JoystickComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
JoystickComponent.name.inputType:single
JoystickComponent.name.label:Name
JoystickComponent.name.readOnly:False
JoystickComponent.name.staticUpdater:None
JoystickComponent.name.val:joystick
JoystickComponent.name.valType:code
JoystickComponent.saveJoystickState.default:'final'
JoystickComponent.saveJoystickState.allowedLabels:[]
JoystickComponent.saveJoystickState.allowedTypes:[]
JoystickComponent.saveJoystickState.allowedUpdates:None
JoystickComponent.saveJoystickState.allowedVals:['final', 'on click', 'every frame', 'never']
JoystickComponent.saveJoystickState.canBePath:True
JoystickComponent.saveJoystickState.categ:Data
JoystickComponent.saveJoystickState.codeWanted:False
JoystickComponent.saveJoystickState.direct:False
JoystickComponent.saveJoystickState.hint:How often should the joystick state (x,y,buttons) be stored? On every video frame, every click or just at the end of the Routine?
JoystickComponent.saveJoystickState.inputType:choice
JoystickComponent.saveJoystickState.label:Save joystick state
JoystickComponent.saveJoystickState.readOnly:False
JoystickComponent.saveJoystickState.staticUpdater:None
JoystickComponent.saveJoystickState.updates:None
JoystickComponent.saveJoystickState.val:final
JoystickComponent.saveJoystickState.valType:str
JoystickComponent.saveParamsClickable.default:[name,]
JoystickComponent.saveParamsClickable.allowedLabels:[]
JoystickComponent.saveParamsClickable.allowedTypes:[]
JoystickComponent.saveParamsClickable.allowedUpdates:[]
JoystickComponent.saveParamsClickable.allowedVals:[]
JoystickComponent.saveParamsClickable.canBePath:True
JoystickComponent.saveParamsClickable.categ:Data
JoystickComponent.saveParamsClickable.codeWanted:False
JoystickComponent.saveParamsClickable.direct:False
JoystickComponent.saveParamsClickable.hint:The params (e.g. name, text), for which you want to store the current value, for the stimulus that was"clicked" by the joystick. Make sure that all the clickable objects have all these params.
JoystickComponent.saveParamsClickable.inputType:single
JoystickComponent.saveParamsClickable.label:Store params for clicked
JoystickComponent.saveParamsClickable.readOnly:False
JoystickComponent.saveParamsClickable.staticUpdater:None
JoystickComponent.saveParamsClickable.updates:constant
JoystickComponent.saveParamsClickable.val:name,
JoystickComponent.saveParamsClickable.valType:list
JoystickComponent.saveStartStop.default:True
JoystickComponent.saveStartStop.allowedLabels:[]
JoystickComponent.saveStartStop.allowedTypes:[]
JoystickComponent.saveStartStop.allowedUpdates:None
JoystickComponent.saveStartStop.allowedVals:[]
JoystickComponent.saveStartStop.canBePath:True
JoystickComponent.saveStartStop.categ:Data
JoystickComponent.saveStartStop.codeWanted:False
JoystickComponent.saveStartStop.direct:True
JoystickComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
JoystickComponent.saveStartStop.inputType:bool
JoystickComponent.saveStartStop.label:Save onset/offset times
JoystickComponent.saveStartStop.readOnly:False
JoystickComponent.saveStartStop.staticUpdater:None
JoystickComponent.saveStartStop.updates:None
JoystickComponent.saveStartStop.val:True
JoystickComponent.saveStartStop.valType:bool
JoystickComponent.startEstim.default:
JoystickComponent.startEstim.allowedLabels:[]
JoystickComponent.startEstim.allowedTypes:[]
JoystickComponent.startEstim.allowedUpdates:None
JoystickComponent.startEstim.allowedVals:[]
JoystickComponent.startEstim.canBePath:True
JoystickComponent.startEstim.categ:Basic
JoystickComponent.startEstim.codeWanted:False
JoystickComponent.startEstim.direct:False
JoystickComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
JoystickComponent.startEstim.inputType:single
JoystickComponent.startEstim.label:Expected start (s)
JoystickComponent.startEstim.readOnly:False
JoystickComponent.startEstim.staticUpdater:None
JoystickComponent.startEstim.updates:None
JoystickComponent.startEstim.val:
JoystickComponent.startEstim.valType:code
JoystickComponent.startType.default:'time (s)'
JoystickComponent.startType.allowedLabels:[]
JoystickComponent.startType.allowedTypes:[]
JoystickComponent.startType.allowedUpdates:None
JoystickComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
JoystickComponent.startType.canBePath:True
JoystickComponent.startType.categ:Basic
JoystickComponent.startType.codeWanted:False
JoystickComponent.startType.direct:False
JoystickComponent.startType.hint:How do you want to define your start point?
JoystickComponent.startType.inputType:choice
JoystickComponent.startType.label:start type
JoystickComponent.startType.readOnly:False
JoystickComponent.startType.staticUpdater:None
JoystickComponent.startType.updates:None
JoystickComponent.startType.val:time (s)
JoystickComponent.startType.valType:str
JoystickComponent.startVal.default:0.0
JoystickComponent.startVal.allowedLabels:[]
JoystickComponent.startVal.allowedTypes:[]
JoystickComponent.startVal.allowedUpdates:None
JoystickComponent.startVal.allowedVals:[]
JoystickComponent.startVal.canBePath:True
JoystickComponent.startVal.categ:Basic
JoystickComponent.startVal.codeWanted:False
JoystickComponent.startVal.direct:True
JoystickComponent.startVal.hint:When does the component start?
JoystickComponent.startVal.inputType:single
JoystickComponent.startVal.label:Start
JoystickComponent.startVal.readOnly:False
JoystickComponent.startVal.staticUpdater:None
JoystickComponent.startVal.updates:None
JoystickComponent.startVal.val:0.0
JoystickComponent.startVal.valType:code
JoystickComponent.stopType.default:'duration (s)'
JoystickComponent.stopType.allowedLabels:[]
JoystickComponent.stopType.allowedTypes:[]
JoystickComponent.stopType.allowedUpdates:None
JoystickComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
JoystickComponent.stopType.canBePath:True
JoystickComponent.stopType.categ:Basic
JoystickComponent.stopType.codeWanted:False
JoystickComponent.stopType.direct:False
JoystickComponent.stopType.hint:How do you want to define your end point?
JoystickComponent.stopType.inputType:choice
JoystickComponent.stopType.label:stop type
JoystickComponent.stopType.readOnly:False
JoystickComponent.stopType.staticUpdater:None
JoystickComponent.stopType.updates:None
JoystickComponent.stopType.val:duration (s)
JoystickComponent.stopType.valType:str
JoystickComponent.stopVal.default:
JoystickComponent.stopVal.allowedLabels:[]
JoystickComponent.stopVal.allowedTypes:[]
JoystickComponent.stopVal.allowedUpdates:[]
JoystickComponent.stopVal.allowedVals:[]
JoystickComponent.stopVal.canBePath:True
JoystickComponent.stopVal.categ:Basic
JoystickComponent.stopVal.codeWanted:False
JoystickComponent.stopVal.direct:True
JoystickComponent.stopVal.hint:When does the component end? (blank is endless)
JoystickComponent.stopVal.inputType:single
JoystickComponent.stopVal.label:Stop
JoystickComponent.stopVal.readOnly:False
JoystickComponent.stopVal.staticUpdater:None
JoystickComponent.stopVal.updates:constant
JoystickComponent.stopVal.val:
JoystickComponent.stopVal.valType:code
JoystickComponent.syncScreenRefresh.default:False
JoystickComponent.syncScreenRefresh.allowedLabels:[]
JoystickComponent.syncScreenRefresh.allowedTypes:[]
JoystickComponent.syncScreenRefresh.allowedUpdates:None
JoystickComponent.syncScreenRefresh.allowedVals:[]
JoystickComponent.syncScreenRefresh.canBePath:True
JoystickComponent.syncScreenRefresh.categ:Data
JoystickComponent.syncScreenRefresh.codeWanted:False
JoystickComponent.syncScreenRefresh.direct:True
JoystickComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
JoystickComponent.syncScreenRefresh.inputType:bool
JoystickComponent.syncScreenRefresh.label:Sync timing with screen refresh
JoystickComponent.syncScreenRefresh.readOnly:False
JoystickComponent.syncScreenRefresh.staticUpdater:None
JoystickComponent.syncScreenRefresh.updates:None
JoystickComponent.syncScreenRefresh.val:False
JoystickComponent.syncScreenRefresh.valType:bool
JoystickComponent.timeRelativeTo.default:'joystick onset'
JoystickComponent.timeRelativeTo.allowedLabels:[]
JoystickComponent.timeRelativeTo.allowedTypes:[]
JoystickComponent.timeRelativeTo.allowedUpdates:None
JoystickComponent.timeRelativeTo.allowedVals:['joystick onset', 'experiment', 'routine']
JoystickComponent.timeRelativeTo.canBePath:True
JoystickComponent.timeRelativeTo.categ:Data
JoystickComponent.timeRelativeTo.codeWanted:False
JoystickComponent.timeRelativeTo.direct:False
JoystickComponent.timeRelativeTo.hint:What should the values of joystick.time should be relative to?
JoystickComponent.timeRelativeTo.inputType:choice
JoystickComponent.timeRelativeTo.label:Time relative to
JoystickComponent.timeRelativeTo.readOnly:False
JoystickComponent.timeRelativeTo.staticUpdater:None
JoystickComponent.timeRelativeTo.updates:constant
JoystickComponent.timeRelativeTo.val:joystick onset
JoystickComponent.timeRelativeTo.valType:str
KeyboardComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
KeyboardComponent.allowedKeys.default:['y','n','left','right','space']
KeyboardComponent.allowedKeys.allowedLabels:[]
KeyboardComponent.allowedKeys.allowedTypes:[]
KeyboardComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
KeyboardComponent.allowedKeys.allowedVals:[]
KeyboardComponent.allowedKeys.canBePath:True
KeyboardComponent.allowedKeys.categ:Basic
KeyboardComponent.allowedKeys.codeWanted:False
KeyboardComponent.allowedKeys.direct:True
KeyboardComponent.allowedKeys.hint:A comma-separated list of keys (with quotes), such as 'q','right','space','left'
KeyboardComponent.allowedKeys.inputType:single
KeyboardComponent.allowedKeys.label:Allowed keys
KeyboardComponent.allowedKeys.readOnly:False
KeyboardComponent.allowedKeys.staticUpdater:None
KeyboardComponent.allowedKeys.updates:constant
KeyboardComponent.allowedKeys.val:'y','n','left','right','space'
KeyboardComponent.allowedKeys.valType:list
KeyboardComponent.correctAns.default:''
KeyboardComponent.correctAns.allowedLabels:[]
KeyboardComponent.correctAns.allowedTypes:[]
KeyboardComponent.correctAns.allowedUpdates:None
KeyboardComponent.correctAns.allowedVals:[]
KeyboardComponent.correctAns.canBePath:True
KeyboardComponent.correctAns.categ:Data
KeyboardComponent.correctAns.codeWanted:False
KeyboardComponent.correctAns.direct:False
KeyboardComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
KeyboardComponent.correctAns.inputType:single
KeyboardComponent.correctAns.label:Correct answer
KeyboardComponent.correctAns.readOnly:False
KeyboardComponent.correctAns.staticUpdater:None
KeyboardComponent.correctAns.updates:constant
KeyboardComponent.correctAns.val:
KeyboardComponent.correctAns.valType:str
KeyboardComponent.disabled.default:False
KeyboardComponent.disabled.allowedLabels:[]
KeyboardComponent.disabled.allowedTypes:[]
KeyboardComponent.disabled.allowedUpdates:None
KeyboardComponent.disabled.allowedVals:[]
KeyboardComponent.disabled.canBePath:True
KeyboardComponent.disabled.categ:Testing
KeyboardComponent.disabled.codeWanted:False
KeyboardComponent.disabled.direct:False
KeyboardComponent.disabled.hint:Disable this component
KeyboardComponent.disabled.inputType:bool
KeyboardComponent.disabled.label:Disable component
KeyboardComponent.disabled.readOnly:False
KeyboardComponent.disabled.staticUpdater:None
KeyboardComponent.disabled.updates:None
KeyboardComponent.disabled.val:False
KeyboardComponent.disabled.valType:bool
KeyboardComponent.discard previous.default:True
KeyboardComponent.discard previous.allowedLabels:[]
KeyboardComponent.discard previous.allowedTypes:[]
KeyboardComponent.discard previous.allowedUpdates:None
KeyboardComponent.discard previous.allowedVals:[]
KeyboardComponent.discard previous.canBePath:True
KeyboardComponent.discard previous.categ:Data
KeyboardComponent.discard previous.codeWanted:False
KeyboardComponent.discard previous.direct:True
KeyboardComponent.discard previous.hint:Do you want to discard all responses occurring before the onset of this component?
KeyboardComponent.discard previous.inputType:bool
KeyboardComponent.discard previous.label:Discard previous
KeyboardComponent.discard previous.readOnly:False
KeyboardComponent.discard previous.staticUpdater:None
KeyboardComponent.discard previous.updates:constant
KeyboardComponent.discard previous.val:True
KeyboardComponent.discard previous.valType:bool
KeyboardComponent.durationEstim.default:
KeyboardComponent.durationEstim.allowedLabels:[]
KeyboardComponent.durationEstim.allowedTypes:[]
KeyboardComponent.durationEstim.allowedUpdates:None
KeyboardComponent.durationEstim.allowedVals:[]
KeyboardComponent.durationEstim.canBePath:True
KeyboardComponent.durationEstim.categ:Basic
KeyboardComponent.durationEstim.codeWanted:False
KeyboardComponent.durationEstim.direct:False
KeyboardComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
KeyboardComponent.durationEstim.inputType:single
KeyboardComponent.durationEstim.label:Expected duration (s)
KeyboardComponent.durationEstim.readOnly:False
KeyboardComponent.durationEstim.staticUpdater:None
KeyboardComponent.durationEstim.updates:None
KeyboardComponent.durationEstim.val:
KeyboardComponent.durationEstim.valType:code
KeyboardComponent.forceEndRoutine.default:True
KeyboardComponent.forceEndRoutine.allowedLabels:[]
KeyboardComponent.forceEndRoutine.allowedTypes:[]
KeyboardComponent.forceEndRoutine.allowedUpdates:None
KeyboardComponent.forceEndRoutine.allowedVals:[]
KeyboardComponent.forceEndRoutine.canBePath:True
KeyboardComponent.forceEndRoutine.categ:Basic
KeyboardComponent.forceEndRoutine.codeWanted:False
KeyboardComponent.forceEndRoutine.direct:True
KeyboardComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
KeyboardComponent.forceEndRoutine.inputType:bool
KeyboardComponent.forceEndRoutine.label:Force end of Routine
KeyboardComponent.forceEndRoutine.readOnly:False
KeyboardComponent.forceEndRoutine.staticUpdater:None
KeyboardComponent.forceEndRoutine.updates:constant
KeyboardComponent.forceEndRoutine.val:True
KeyboardComponent.forceEndRoutine.valType:bool
KeyboardComponent.name.default:key_resp
KeyboardComponent.name.allowedLabels:[]
KeyboardComponent.name.allowedTypes:[]
KeyboardComponent.name.allowedUpdates:None
KeyboardComponent.name.allowedVals:[]
KeyboardComponent.name.canBePath:True
KeyboardComponent.name.categ:Basic
KeyboardComponent.name.codeWanted:False
KeyboardComponent.name.direct:True
KeyboardComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
KeyboardComponent.name.inputType:single
KeyboardComponent.name.label:Name
KeyboardComponent.name.readOnly:False
KeyboardComponent.name.staticUpdater:None
KeyboardComponent.name.val:key_resp
KeyboardComponent.name.valType:code
KeyboardComponent.saveStartStop.default:True
KeyboardComponent.saveStartStop.allowedLabels:[]
KeyboardComponent.saveStartStop.allowedTypes:[]
KeyboardComponent.saveStartStop.allowedUpdates:None
KeyboardComponent.saveStartStop.allowedVals:[]
KeyboardComponent.saveStartStop.canBePath:True
KeyboardComponent.saveStartStop.categ:Data
KeyboardComponent.saveStartStop.codeWanted:False
KeyboardComponent.saveStartStop.direct:True
KeyboardComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
KeyboardComponent.saveStartStop.inputType:bool
KeyboardComponent.saveStartStop.label:Save onset/offset times
KeyboardComponent.saveStartStop.readOnly:False
KeyboardComponent.saveStartStop.staticUpdater:None
KeyboardComponent.saveStartStop.updates:None
KeyboardComponent.saveStartStop.val:True
KeyboardComponent.saveStartStop.valType:bool
KeyboardComponent.startEstim.default:
KeyboardComponent.startEstim.allowedLabels:[]
KeyboardComponent.startEstim.allowedTypes:[]
KeyboardComponent.startEstim.allowedUpdates:None
KeyboardComponent.startEstim.allowedVals:[]
KeyboardComponent.startEstim.canBePath:True
KeyboardComponent.startEstim.categ:Basic
KeyboardComponent.startEstim.codeWanted:False
KeyboardComponent.startEstim.direct:False
KeyboardComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
KeyboardComponent.startEstim.inputType:single
KeyboardComponent.startEstim.label:Expected start (s)
KeyboardComponent.startEstim.readOnly:False
KeyboardComponent.startEstim.staticUpdater:None
KeyboardComponent.startEstim.updates:None
KeyboardComponent.startEstim.val:
KeyboardComponent.startEstim.valType:code
KeyboardComponent.startType.default:'time (s)'
KeyboardComponent.startType.allowedLabels:[]
KeyboardComponent.startType.allowedTypes:[]
KeyboardComponent.startType.allowedUpdates:None
KeyboardComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
KeyboardComponent.startType.canBePath:True
KeyboardComponent.startType.categ:Basic
KeyboardComponent.startType.codeWanted:False
KeyboardComponent.startType.direct:False
KeyboardComponent.startType.hint:How do you want to define your start point?
KeyboardComponent.startType.inputType:choice
KeyboardComponent.startType.label:start type
KeyboardComponent.startType.readOnly:False
KeyboardComponent.startType.staticUpdater:None
KeyboardComponent.startType.updates:None
KeyboardComponent.startType.val:time (s)
KeyboardComponent.startType.valType:str
KeyboardComponent.startVal.default:0.0
KeyboardComponent.startVal.allowedLabels:[]
KeyboardComponent.startVal.allowedTypes:[]
KeyboardComponent.startVal.allowedUpdates:None
KeyboardComponent.startVal.allowedVals:[]
KeyboardComponent.startVal.canBePath:True
KeyboardComponent.startVal.categ:Basic
KeyboardComponent.startVal.codeWanted:False
KeyboardComponent.startVal.direct:True
KeyboardComponent.startVal.hint:When does the component start?
KeyboardComponent.startVal.inputType:single
KeyboardComponent.startVal.label:Start
KeyboardComponent.startVal.readOnly:False
KeyboardComponent.startVal.staticUpdater:None
KeyboardComponent.startVal.updates:None
KeyboardComponent.startVal.val:0.0
KeyboardComponent.startVal.valType:code
KeyboardComponent.stopType.default:'duration (s)'
KeyboardComponent.stopType.allowedLabels:[]
KeyboardComponent.stopType.allowedTypes:[]
KeyboardComponent.stopType.allowedUpdates:None
KeyboardComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
KeyboardComponent.stopType.canBePath:True
KeyboardComponent.stopType.categ:Basic
KeyboardComponent.stopType.codeWanted:False
KeyboardComponent.stopType.direct:False
KeyboardComponent.stopType.hint:How do you want to define your end point?
KeyboardComponent.stopType.inputType:choice
KeyboardComponent.stopType.label:stop type
KeyboardComponent.stopType.readOnly:False
KeyboardComponent.stopType.staticUpdater:None
KeyboardComponent.stopType.updates:None
KeyboardComponent.stopType.val:duration (s)
KeyboardComponent.stopType.valType:str
KeyboardComponent.stopVal.default:
KeyboardComponent.stopVal.allowedLabels:[]
KeyboardComponent.stopVal.allowedTypes:[]
KeyboardComponent.stopVal.allowedUpdates:[]
KeyboardComponent.stopVal.allowedVals:[]
KeyboardComponent.stopVal.canBePath:True
KeyboardComponent.stopVal.categ:Basic
KeyboardComponent.stopVal.codeWanted:False
KeyboardComponent.stopVal.direct:True
KeyboardComponent.stopVal.hint:When does the component end? (blank is endless)
KeyboardComponent.stopVal.inputType:single
KeyboardComponent.stopVal.label:Stop
KeyboardComponent.stopVal.readOnly:False
KeyboardComponent.stopVal.staticUpdater:None
KeyboardComponent.stopVal.updates:constant
KeyboardComponent.stopVal.val:
KeyboardComponent.stopVal.valType:code
KeyboardComponent.store.default:'last key'
KeyboardComponent.store.allowedLabels:[]
KeyboardComponent.store.allowedTypes:[]
KeyboardComponent.store.allowedUpdates:None
KeyboardComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
KeyboardComponent.store.canBePath:True
KeyboardComponent.store.categ:Data
KeyboardComponent.store.codeWanted:False
KeyboardComponent.store.direct:False
KeyboardComponent.store.hint:Choose which (if any) responses to store at the end of a trial
KeyboardComponent.store.inputType:choice
KeyboardComponent.store.label:Store
KeyboardComponent.store.readOnly:False
KeyboardComponent.store.staticUpdater:None
KeyboardComponent.store.updates:constant
KeyboardComponent.store.val:last key
KeyboardComponent.store.valType:str
KeyboardComponent.storeCorrect.default:False
KeyboardComponent.storeCorrect.allowedLabels:[]
KeyboardComponent.storeCorrect.allowedTypes:[]
KeyboardComponent.storeCorrect.allowedUpdates:None
KeyboardComponent.storeCorrect.allowedVals:[]
KeyboardComponent.storeCorrect.canBePath:True
KeyboardComponent.storeCorrect.categ:Data
KeyboardComponent.storeCorrect.codeWanted:False
KeyboardComponent.storeCorrect.direct:True
KeyboardComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
KeyboardComponent.storeCorrect.inputType:bool
KeyboardComponent.storeCorrect.label:Store correct
KeyboardComponent.storeCorrect.readOnly:False
KeyboardComponent.storeCorrect.staticUpdater:None
KeyboardComponent.storeCorrect.updates:constant
KeyboardComponent.storeCorrect.val:False
KeyboardComponent.storeCorrect.valType:bool
KeyboardComponent.syncScreenRefresh.default:True
KeyboardComponent.syncScreenRefresh.allowedLabels:[]
KeyboardComponent.syncScreenRefresh.allowedTypes:[]
KeyboardComponent.syncScreenRefresh.allowedUpdates:None
KeyboardComponent.syncScreenRefresh.allowedVals:[]
KeyboardComponent.syncScreenRefresh.canBePath:True
KeyboardComponent.syncScreenRefresh.categ:Data
KeyboardComponent.syncScreenRefresh.codeWanted:False
KeyboardComponent.syncScreenRefresh.direct:True
KeyboardComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
KeyboardComponent.syncScreenRefresh.inputType:bool
KeyboardComponent.syncScreenRefresh.label:Sync timing with screen
KeyboardComponent.syncScreenRefresh.readOnly:False
KeyboardComponent.syncScreenRefresh.staticUpdater:None
KeyboardComponent.syncScreenRefresh.updates:constant
KeyboardComponent.syncScreenRefresh.val:True
KeyboardComponent.syncScreenRefresh.valType:bool
MicrophoneComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'transcribe', 'transcribeBackend', 'transcribeLang', 'transcribeWords']
MicrophoneComponent.channels.default:'auto'
MicrophoneComponent.channels.allowedLabels:[]
MicrophoneComponent.channels.allowedTypes:[]
MicrophoneComponent.channels.allowedUpdates:None
MicrophoneComponent.channels.allowedVals:['auto', 'mono', 'stereo']
MicrophoneComponent.channels.canBePath:True
MicrophoneComponent.channels.categ:Hardware
MicrophoneComponent.channels.codeWanted:False
MicrophoneComponent.channels.direct:True
MicrophoneComponent.channels.hint:Record two channels (stereo) or one (mono, smaller file). Select 'auto' to use as many channels as the selected device allows.
MicrophoneComponent.channels.inputType:choice
MicrophoneComponent.channels.label:Channels
MicrophoneComponent.channels.readOnly:False
MicrophoneComponent.channels.staticUpdater:None
MicrophoneComponent.channels.updates:None
MicrophoneComponent.channels.val:auto
MicrophoneComponent.channels.valType:str
MicrophoneComponent.device.default:'default'
MicrophoneComponent.device.allowedLabels:[]
MicrophoneComponent.device.allowedTypes:[]
MicrophoneComponent.device.allowedUpdates:None
MicrophoneComponent.device.allowedVals:['Logitech BRIO', 'NDI Audio', 'MacBook Pro Microphone', 'Echo360 System Audio', 'default']
MicrophoneComponent.device.canBePath:True
MicrophoneComponent.device.categ:Basic
MicrophoneComponent.device.codeWanted:False
MicrophoneComponent.device.direct:True
MicrophoneComponent.device.hint:What microphone device would you like the use to record? This will only affect local experiments - online experiments ask the participant which mic to use.
MicrophoneComponent.device.inputType:choice
MicrophoneComponent.device.label:Device
MicrophoneComponent.device.readOnly:False
MicrophoneComponent.device.staticUpdater:None
MicrophoneComponent.device.updates:None
MicrophoneComponent.device.val:default
MicrophoneComponent.device.valType:str
MicrophoneComponent.disabled.default:False
MicrophoneComponent.disabled.allowedLabels:[]
MicrophoneComponent.disabled.allowedTypes:[]
MicrophoneComponent.disabled.allowedUpdates:None
MicrophoneComponent.disabled.allowedVals:[]
MicrophoneComponent.disabled.canBePath:True
MicrophoneComponent.disabled.categ:Testing
MicrophoneComponent.disabled.codeWanted:False
MicrophoneComponent.disabled.direct:False
MicrophoneComponent.disabled.hint:Disable this component
MicrophoneComponent.disabled.inputType:bool
MicrophoneComponent.disabled.label:Disable component
MicrophoneComponent.disabled.readOnly:False
MicrophoneComponent.disabled.staticUpdater:None
MicrophoneComponent.disabled.updates:None
MicrophoneComponent.disabled.val:False
MicrophoneComponent.disabled.valType:bool
MicrophoneComponent.durationEstim.default:
MicrophoneComponent.durationEstim.allowedLabels:[]
MicrophoneComponent.durationEstim.allowedTypes:[]
MicrophoneComponent.durationEstim.allowedUpdates:None
MicrophoneComponent.durationEstim.allowedVals:[]
MicrophoneComponent.durationEstim.canBePath:True
MicrophoneComponent.durationEstim.categ:Basic
MicrophoneComponent.durationEstim.codeWanted:False
MicrophoneComponent.durationEstim.direct:False
MicrophoneComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MicrophoneComponent.durationEstim.inputType:single
MicrophoneComponent.durationEstim.label:Expected duration (s)
MicrophoneComponent.durationEstim.readOnly:False
MicrophoneComponent.durationEstim.staticUpdater:None
MicrophoneComponent.durationEstim.updates:None
MicrophoneComponent.durationEstim.val:
MicrophoneComponent.durationEstim.valType:code
MicrophoneComponent.maxSize.default:24000.0
MicrophoneComponent.maxSize.allowedLabels:[]
MicrophoneComponent.maxSize.allowedTypes:[]
MicrophoneComponent.maxSize.allowedUpdates:None
MicrophoneComponent.maxSize.allowedVals:[]
MicrophoneComponent.maxSize.canBePath:True
MicrophoneComponent.maxSize.categ:Hardware
MicrophoneComponent.maxSize.codeWanted:False
MicrophoneComponent.maxSize.direct:True
MicrophoneComponent.maxSize.hint:To avoid excessively large output files, what is the biggest file size you are likely to expect?
MicrophoneComponent.maxSize.inputType:single
MicrophoneComponent.maxSize.label:Max Recording Size (kb)
MicrophoneComponent.maxSize.readOnly:False
MicrophoneComponent.maxSize.staticUpdater:None
MicrophoneComponent.maxSize.updates:None
MicrophoneComponent.maxSize.val:24000
MicrophoneComponent.maxSize.valType:num
MicrophoneComponent.name.default:mic
MicrophoneComponent.name.allowedLabels:[]
MicrophoneComponent.name.allowedTypes:[]
MicrophoneComponent.name.allowedUpdates:None
MicrophoneComponent.name.allowedVals:[]
MicrophoneComponent.name.canBePath:True
MicrophoneComponent.name.categ:Basic
MicrophoneComponent.name.codeWanted:False
MicrophoneComponent.name.direct:True
MicrophoneComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
MicrophoneComponent.name.inputType:single
MicrophoneComponent.name.label:Name
MicrophoneComponent.name.readOnly:False
MicrophoneComponent.name.staticUpdater:None
MicrophoneComponent.name.val:mic
MicrophoneComponent.name.valType:code
MicrophoneComponent.outputType.default:default
MicrophoneComponent.outputType.allowedLabels:[]
MicrophoneComponent.outputType.allowedTypes:[]
MicrophoneComponent.outputType.allowedUpdates:None
MicrophoneComponent.outputType.allowedVals:['default', 'aiff', 'au', 'avr', 'caf', 'flac', 'htk', 'svx', 'mat4', 'mat5', 'mpc2k', 'ogg', 'paf', 'pvf', 'raw', 'rf64', 'sd2', 'sds', 'ircam', 'voc', 'w64', 'wav', 'nist', 'wavex', 'wve', 'xi']
MicrophoneComponent.outputType.canBePath:True
MicrophoneComponent.outputType.categ:Data
MicrophoneComponent.outputType.codeWanted:False
MicrophoneComponent.outputType.direct:True
MicrophoneComponent.outputType.hint:What file type should output audio files be saved as?
MicrophoneComponent.outputType.inputType:choice
MicrophoneComponent.outputType.label:Output File Type
MicrophoneComponent.outputType.readOnly:False
MicrophoneComponent.outputType.staticUpdater:None
MicrophoneComponent.outputType.updates:None
MicrophoneComponent.outputType.val:default
MicrophoneComponent.outputType.valType:code
MicrophoneComponent.sampleRate.default:Voice (16kHz)
MicrophoneComponent.sampleRate.allowedLabels:[]
MicrophoneComponent.sampleRate.allowedTypes:[]
MicrophoneComponent.sampleRate.allowedUpdates:None
MicrophoneComponent.sampleRate.allowedVals:['Telephone/Two-way radio (8kHz)', 'Voice (16kHz)', 'CD Audio (44.1kHz)', 'DVD Audio (48kHz)', 'High-Def (96kHz)', 'Ultra High-Def (192kHz)']
MicrophoneComponent.sampleRate.canBePath:True
MicrophoneComponent.sampleRate.categ:Hardware
MicrophoneComponent.sampleRate.codeWanted:False
MicrophoneComponent.sampleRate.direct:False
MicrophoneComponent.sampleRate.hint:How many samples per second (Hz) to record at
MicrophoneComponent.sampleRate.inputType:choice
MicrophoneComponent.sampleRate.label:Sample Rate (Hz)
MicrophoneComponent.sampleRate.readOnly:False
MicrophoneComponent.sampleRate.staticUpdater:None
MicrophoneComponent.sampleRate.updates:None
MicrophoneComponent.sampleRate.val:Voice (16kHz)
MicrophoneComponent.sampleRate.valType:num
MicrophoneComponent.saveStartStop.default:True
MicrophoneComponent.saveStartStop.allowedLabels:[]
MicrophoneComponent.saveStartStop.allowedTypes:[]
MicrophoneComponent.saveStartStop.allowedUpdates:None
MicrophoneComponent.saveStartStop.allowedVals:[]
MicrophoneComponent.saveStartStop.canBePath:True
MicrophoneComponent.saveStartStop.categ:Data
MicrophoneComponent.saveStartStop.codeWanted:False
MicrophoneComponent.saveStartStop.direct:True
MicrophoneComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
MicrophoneComponent.saveStartStop.inputType:bool
MicrophoneComponent.saveStartStop.label:Save onset/offset times
MicrophoneComponent.saveStartStop.readOnly:False
MicrophoneComponent.saveStartStop.staticUpdater:None
MicrophoneComponent.saveStartStop.updates:None
MicrophoneComponent.saveStartStop.val:True
MicrophoneComponent.saveStartStop.valType:bool
MicrophoneComponent.speakTimes.default:True
MicrophoneComponent.speakTimes.allowedLabels:[]
MicrophoneComponent.speakTimes.allowedTypes:[]
MicrophoneComponent.speakTimes.allowedUpdates:None
MicrophoneComponent.speakTimes.allowedVals:[]
MicrophoneComponent.speakTimes.canBePath:True
MicrophoneComponent.speakTimes.categ:Data
MicrophoneComponent.speakTimes.codeWanted:False
MicrophoneComponent.speakTimes.direct:True
MicrophoneComponent.speakTimes.hint:Tick this to save times when the participant starts and stops speaking
MicrophoneComponent.speakTimes.inputType:bool
MicrophoneComponent.speakTimes.label:Speaking Start / Stop Times
MicrophoneComponent.speakTimes.readOnly:False
MicrophoneComponent.speakTimes.staticUpdater:None
MicrophoneComponent.speakTimes.updates:None
MicrophoneComponent.speakTimes.val:True
MicrophoneComponent.speakTimes.valType:bool
MicrophoneComponent.startEstim.default:
MicrophoneComponent.startEstim.allowedLabels:[]
MicrophoneComponent.startEstim.allowedTypes:[]
MicrophoneComponent.startEstim.allowedUpdates:None
MicrophoneComponent.startEstim.allowedVals:[]
MicrophoneComponent.startEstim.canBePath:True
MicrophoneComponent.startEstim.categ:Basic
MicrophoneComponent.startEstim.codeWanted:False
MicrophoneComponent.startEstim.direct:False
MicrophoneComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MicrophoneComponent.startEstim.inputType:single
MicrophoneComponent.startEstim.label:Expected start (s)
MicrophoneComponent.startEstim.readOnly:False
MicrophoneComponent.startEstim.staticUpdater:None
MicrophoneComponent.startEstim.updates:None
MicrophoneComponent.startEstim.val:
MicrophoneComponent.startEstim.valType:code
MicrophoneComponent.startType.default:'time (s)'
MicrophoneComponent.startType.allowedLabels:[]
MicrophoneComponent.startType.allowedTypes:[]
MicrophoneComponent.startType.allowedUpdates:None
MicrophoneComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MicrophoneComponent.startType.canBePath:True
MicrophoneComponent.startType.categ:Basic
MicrophoneComponent.startType.codeWanted:False
MicrophoneComponent.startType.direct:False
MicrophoneComponent.startType.hint:How do you want to define your start point?
MicrophoneComponent.startType.inputType:choice
MicrophoneComponent.startType.label:start type
MicrophoneComponent.startType.readOnly:False
MicrophoneComponent.startType.staticUpdater:None
MicrophoneComponent.startType.updates:None
MicrophoneComponent.startType.val:time (s)
MicrophoneComponent.startType.valType:str
MicrophoneComponent.startVal.default:0.0
MicrophoneComponent.startVal.allowedLabels:[]
MicrophoneComponent.startVal.allowedTypes:[]
MicrophoneComponent.startVal.allowedUpdates:None
MicrophoneComponent.startVal.allowedVals:[]
MicrophoneComponent.startVal.canBePath:True
MicrophoneComponent.startVal.categ:Basic
MicrophoneComponent.startVal.codeWanted:False
MicrophoneComponent.startVal.direct:True
MicrophoneComponent.startVal.hint:When does the component start?
MicrophoneComponent.startVal.inputType:single
MicrophoneComponent.startVal.label:Start
MicrophoneComponent.startVal.readOnly:False
MicrophoneComponent.startVal.staticUpdater:None
MicrophoneComponent.startVal.updates:None
MicrophoneComponent.startVal.val:0.0
MicrophoneComponent.startVal.valType:code
MicrophoneComponent.stopType.default:'duration (s)'
MicrophoneComponent.stopType.allowedLabels:[]
MicrophoneComponent.stopType.allowedTypes:[]
MicrophoneComponent.stopType.allowedUpdates:None
MicrophoneComponent.stopType.allowedVals:['duration (s)']
MicrophoneComponent.stopType.canBePath:True
MicrophoneComponent.stopType.categ:Basic
MicrophoneComponent.stopType.codeWanted:False
MicrophoneComponent.stopType.direct:False
MicrophoneComponent.stopType.hint:The duration of the recording in seconds; blank = 0 sec
MicrophoneComponent.stopType.inputType:choice
MicrophoneComponent.stopType.label:stop type
MicrophoneComponent.stopType.readOnly:False
MicrophoneComponent.stopType.staticUpdater:None
MicrophoneComponent.stopType.updates:None
MicrophoneComponent.stopType.val:duration (s)
MicrophoneComponent.stopType.valType:str
MicrophoneComponent.stopVal.default:2.0
MicrophoneComponent.stopVal.allowedLabels:[]
MicrophoneComponent.stopVal.allowedTypes:[]
MicrophoneComponent.stopVal.allowedUpdates:[]
MicrophoneComponent.stopVal.allowedVals:[]
MicrophoneComponent.stopVal.canBePath:True
MicrophoneComponent.stopVal.categ:Basic
MicrophoneComponent.stopVal.codeWanted:False
MicrophoneComponent.stopVal.direct:True
MicrophoneComponent.stopVal.hint:When does the component end? (blank is endless)
MicrophoneComponent.stopVal.inputType:single
MicrophoneComponent.stopVal.label:Stop
MicrophoneComponent.stopVal.readOnly:False
MicrophoneComponent.stopVal.staticUpdater:None
MicrophoneComponent.stopVal.updates:constant
MicrophoneComponent.stopVal.val:2.0
MicrophoneComponent.stopVal.valType:code
MicrophoneComponent.syncScreenRefresh.default:False
MicrophoneComponent.syncScreenRefresh.allowedLabels:[]
MicrophoneComponent.syncScreenRefresh.allowedTypes:[]
MicrophoneComponent.syncScreenRefresh.allowedUpdates:None
MicrophoneComponent.syncScreenRefresh.allowedVals:[]
MicrophoneComponent.syncScreenRefresh.canBePath:True
MicrophoneComponent.syncScreenRefresh.categ:Data
MicrophoneComponent.syncScreenRefresh.codeWanted:False
MicrophoneComponent.syncScreenRefresh.direct:True
MicrophoneComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
MicrophoneComponent.syncScreenRefresh.inputType:bool
MicrophoneComponent.syncScreenRefresh.label:Sync timing with screen refresh
MicrophoneComponent.syncScreenRefresh.readOnly:False
MicrophoneComponent.syncScreenRefresh.staticUpdater:None
MicrophoneComponent.syncScreenRefresh.updates:None
MicrophoneComponent.syncScreenRefresh.val:False
MicrophoneComponent.syncScreenRefresh.valType:bool
MicrophoneComponent.transcribe.default:True
MicrophoneComponent.transcribe.allowedLabels:[]
MicrophoneComponent.transcribe.allowedTypes:[]
MicrophoneComponent.transcribe.allowedUpdates:None
MicrophoneComponent.transcribe.allowedVals:[]
MicrophoneComponent.transcribe.canBePath:True
MicrophoneComponent.transcribe.categ:Transcription
MicrophoneComponent.transcribe.codeWanted:False
MicrophoneComponent.transcribe.direct:True
MicrophoneComponent.transcribe.hint:Whether to transcribe the audio recording and store the transcription
MicrophoneComponent.transcribe.inputType:bool
MicrophoneComponent.transcribe.label:Transcribe Audio
MicrophoneComponent.transcribe.readOnly:False
MicrophoneComponent.transcribe.staticUpdater:None
MicrophoneComponent.transcribe.updates:None
MicrophoneComponent.transcribe.val:True
MicrophoneComponent.transcribe.valType:bool
MicrophoneComponent.transcribeBackend.default:Google
MicrophoneComponent.transcribeBackend.allowedLabels:[]
MicrophoneComponent.transcribeBackend.allowedTypes:[]
MicrophoneComponent.transcribeBackend.allowedUpdates:None
MicrophoneComponent.transcribeBackend.allowedVals:['Google', 'Built-in']
MicrophoneComponent.transcribeBackend.canBePath:True
MicrophoneComponent.transcribeBackend.categ:Transcription
MicrophoneComponent.transcribeBackend.codeWanted:False
MicrophoneComponent.transcribeBackend.direct:False
MicrophoneComponent.transcribeBackend.hint:What transcription service to use to transcribe audio?
MicrophoneComponent.transcribeBackend.inputType:choice
MicrophoneComponent.transcribeBackend.label:Transcription Backend
MicrophoneComponent.transcribeBackend.readOnly:False
MicrophoneComponent.transcribeBackend.staticUpdater:None
MicrophoneComponent.transcribeBackend.updates:None
MicrophoneComponent.transcribeBackend.val:Google
MicrophoneComponent.transcribeBackend.valType:code
MicrophoneComponent.transcribeLang.default:'en-US'
MicrophoneComponent.transcribeLang.allowedLabels:[]
MicrophoneComponent.transcribeLang.allowedTypes:[]
MicrophoneComponent.transcribeLang.allowedUpdates:None
MicrophoneComponent.transcribeLang.allowedVals:[]
MicrophoneComponent.transcribeLang.canBePath:True
MicrophoneComponent.transcribeLang.categ:Transcription
MicrophoneComponent.transcribeLang.codeWanted:False
MicrophoneComponent.transcribeLang.direct:True
MicrophoneComponent.transcribeLang.hint:What language you expect the recording to be spoken in, e.g. en-US for English
MicrophoneComponent.transcribeLang.inputType:single
MicrophoneComponent.transcribeLang.label:Transcription Language
MicrophoneComponent.transcribeLang.readOnly:False
MicrophoneComponent.transcribeLang.staticUpdater:None
MicrophoneComponent.transcribeLang.updates:None
MicrophoneComponent.transcribeLang.val:en-US
MicrophoneComponent.transcribeLang.valType:str
MicrophoneComponent.transcribeWords.default:[]
MicrophoneComponent.transcribeWords.allowedLabels:[]
MicrophoneComponent.transcribeWords.allowedTypes:[]
MicrophoneComponent.transcribeWords.allowedUpdates:None
MicrophoneComponent.transcribeWords.allowedVals:[]
MicrophoneComponent.transcribeWords.canBePath:True
MicrophoneComponent.transcribeWords.categ:Transcription
MicrophoneComponent.transcribeWords.codeWanted:False
MicrophoneComponent.transcribeWords.direct:True
MicrophoneComponent.transcribeWords.hint:Set list of words to listen for - if blank will listen for all words in chosen language. 

If using the built-in transcriber, you can set a minimum % confidence level using a colon after the word, e.g. 'red:100', 'green:80'. Otherwise, default confidence level is 80%.
MicrophoneComponent.transcribeWords.inputType:single
MicrophoneComponent.transcribeWords.label:Expected Words
MicrophoneComponent.transcribeWords.readOnly:False
MicrophoneComponent.transcribeWords.staticUpdater:None
MicrophoneComponent.transcribeWords.updates:None
MicrophoneComponent.transcribeWords.val:
MicrophoneComponent.transcribeWords.valType:list
MicrophoneComponent.trimSilent.default:False
MicrophoneComponent.trimSilent.allowedLabels:[]
MicrophoneComponent.trimSilent.allowedTypes:[]
MicrophoneComponent.trimSilent.allowedUpdates:None
MicrophoneComponent.trimSilent.allowedVals:[]
MicrophoneComponent.trimSilent.canBePath:True
MicrophoneComponent.trimSilent.categ:Data
MicrophoneComponent.trimSilent.codeWanted:False
MicrophoneComponent.trimSilent.direct:True
MicrophoneComponent.trimSilent.hint:Trim periods of silence from the output file
MicrophoneComponent.trimSilent.inputType:bool
MicrophoneComponent.trimSilent.label:Trim Silent
MicrophoneComponent.trimSilent.readOnly:False
MicrophoneComponent.trimSilent.staticUpdater:None
MicrophoneComponent.trimSilent.updates:None
MicrophoneComponent.trimSilent.val:False
MicrophoneComponent.trimSilent.valType:bool
MouseComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'forceEndRoutineOnPress', 'saveMouseState', 'timeRelativeTo', 'newClicksOnly', 'clickable', 'saveParamsClickable']
MouseComponent.clickable.default:[]
MouseComponent.clickable.allowedLabels:[]
MouseComponent.clickable.allowedTypes:[]
MouseComponent.clickable.allowedUpdates:None
MouseComponent.clickable.allowedVals:[]
MouseComponent.clickable.canBePath:True
MouseComponent.clickable.categ:Basic
MouseComponent.clickable.codeWanted:False
MouseComponent.clickable.direct:True
MouseComponent.clickable.hint:A comma-separated list of your stimulus names that can be "clicked" by the participant. e.g. target, foil
MouseComponent.clickable.inputType:single
MouseComponent.clickable.label:Clickable stimuli
MouseComponent.clickable.readOnly:False
MouseComponent.clickable.staticUpdater:None
MouseComponent.clickable.updates:constant
MouseComponent.clickable.val:
MouseComponent.clickable.valType:list
MouseComponent.disabled.default:False
MouseComponent.disabled.allowedLabels:[]
MouseComponent.disabled.allowedTypes:[]
MouseComponent.disabled.allowedUpdates:None
MouseComponent.disabled.allowedVals:[]
MouseComponent.disabled.canBePath:True
MouseComponent.disabled.categ:Testing
MouseComponent.disabled.codeWanted:False
MouseComponent.disabled.direct:False
MouseComponent.disabled.hint:Disable this component
MouseComponent.disabled.inputType:bool
MouseComponent.disabled.label:Disable component
MouseComponent.disabled.readOnly:False
MouseComponent.disabled.staticUpdater:None
MouseComponent.disabled.updates:None
MouseComponent.disabled.val:False
MouseComponent.disabled.valType:bool
MouseComponent.durationEstim.default:
MouseComponent.durationEstim.allowedLabels:[]
MouseComponent.durationEstim.allowedTypes:[]
MouseComponent.durationEstim.allowedUpdates:None
MouseComponent.durationEstim.allowedVals:[]
MouseComponent.durationEstim.canBePath:True
MouseComponent.durationEstim.categ:Basic
MouseComponent.durationEstim.codeWanted:False
MouseComponent.durationEstim.direct:False
MouseComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MouseComponent.durationEstim.inputType:single
MouseComponent.durationEstim.label:Expected duration (s)
MouseComponent.durationEstim.readOnly:False
MouseComponent.durationEstim.staticUpdater:None
MouseComponent.durationEstim.updates:None
MouseComponent.durationEstim.val:
MouseComponent.durationEstim.valType:code
MouseComponent.forceEndRoutineOnPress.default:'any click'
MouseComponent.forceEndRoutineOnPress.allowedLabels:[]
MouseComponent.forceEndRoutineOnPress.allowedTypes:[]
MouseComponent.forceEndRoutineOnPress.allowedUpdates:None
MouseComponent.forceEndRoutineOnPress.allowedVals:['never', 'any click', 'valid click']
MouseComponent.forceEndRoutineOnPress.canBePath:True
MouseComponent.forceEndRoutineOnPress.categ:Basic
MouseComponent.forceEndRoutineOnPress.codeWanted:False
MouseComponent.forceEndRoutineOnPress.direct:False
MouseComponent.forceEndRoutineOnPress.hint:Should a button press force the end of the routine (e.g end the trial)?
MouseComponent.forceEndRoutineOnPress.inputType:choice
MouseComponent.forceEndRoutineOnPress.label:End Routine on press
MouseComponent.forceEndRoutineOnPress.readOnly:False
MouseComponent.forceEndRoutineOnPress.staticUpdater:None
MouseComponent.forceEndRoutineOnPress.updates:constant
MouseComponent.forceEndRoutineOnPress.val:any click
MouseComponent.forceEndRoutineOnPress.valType:str
MouseComponent.name.default:mouse
MouseComponent.name.allowedLabels:[]
MouseComponent.name.allowedTypes:[]
MouseComponent.name.allowedUpdates:None
MouseComponent.name.allowedVals:[]
MouseComponent.name.canBePath:True
MouseComponent.name.categ:Basic
MouseComponent.name.codeWanted:False
MouseComponent.name.direct:True
MouseComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
MouseComponent.name.inputType:single
MouseComponent.name.label:Name
MouseComponent.name.readOnly:False
MouseComponent.name.staticUpdater:None
MouseComponent.name.val:mouse
MouseComponent.name.valType:code
MouseComponent.newClicksOnly.default:True
MouseComponent.newClicksOnly.allowedLabels:[]
MouseComponent.newClicksOnly.allowedTypes:[]
MouseComponent.newClicksOnly.allowedUpdates:None
MouseComponent.newClicksOnly.allowedVals:[]
MouseComponent.newClicksOnly.canBePath:True
MouseComponent.newClicksOnly.categ:Basic
MouseComponent.newClicksOnly.codeWanted:False
MouseComponent.newClicksOnly.direct:True
MouseComponent.newClicksOnly.hint:If the mouse button is already down when we start checking then wait for it to be released before recording as a new click.
MouseComponent.newClicksOnly.inputType:bool
MouseComponent.newClicksOnly.label:New clicks only
MouseComponent.newClicksOnly.readOnly:False
MouseComponent.newClicksOnly.staticUpdater:None
MouseComponent.newClicksOnly.updates:constant
MouseComponent.newClicksOnly.val:True
MouseComponent.newClicksOnly.valType:bool
MouseComponent.saveMouseState.default:'final'
MouseComponent.saveMouseState.allowedLabels:[]
MouseComponent.saveMouseState.allowedTypes:[]
MouseComponent.saveMouseState.allowedUpdates:None
MouseComponent.saveMouseState.allowedVals:['final', 'on click', 'on valid click', 'every frame', 'never']
MouseComponent.saveMouseState.canBePath:True
MouseComponent.saveMouseState.categ:Data
MouseComponent.saveMouseState.codeWanted:False
MouseComponent.saveMouseState.direct:False
MouseComponent.saveMouseState.hint:How often should the mouse state (x,y,buttons) be stored? On every video frame, every click or just at the end of the Routine?
MouseComponent.saveMouseState.inputType:choice
MouseComponent.saveMouseState.label:Save mouse state
MouseComponent.saveMouseState.readOnly:False
MouseComponent.saveMouseState.staticUpdater:None
MouseComponent.saveMouseState.updates:None
MouseComponent.saveMouseState.val:final
MouseComponent.saveMouseState.valType:str
MouseComponent.saveParamsClickable.default:[name,]
MouseComponent.saveParamsClickable.allowedLabels:[]
MouseComponent.saveParamsClickable.allowedTypes:[]
MouseComponent.saveParamsClickable.allowedUpdates:[]
MouseComponent.saveParamsClickable.allowedVals:[]
MouseComponent.saveParamsClickable.canBePath:True
MouseComponent.saveParamsClickable.categ:Data
MouseComponent.saveParamsClickable.codeWanted:False
MouseComponent.saveParamsClickable.direct:False
MouseComponent.saveParamsClickable.hint:The params (e.g. name, text), for which you want to store the current value, for the stimulus that was"clicked" by the mouse. Make sure that all the clickable objects have all these params.
MouseComponent.saveParamsClickable.inputType:single
MouseComponent.saveParamsClickable.label:Store params for clicked
MouseComponent.saveParamsClickable.readOnly:False
MouseComponent.saveParamsClickable.staticUpdater:None
MouseComponent.saveParamsClickable.updates:constant
MouseComponent.saveParamsClickable.val:name,
MouseComponent.saveParamsClickable.valType:list
MouseComponent.saveStartStop.default:True
MouseComponent.saveStartStop.allowedLabels:[]
MouseComponent.saveStartStop.allowedTypes:[]
MouseComponent.saveStartStop.allowedUpdates:None
MouseComponent.saveStartStop.allowedVals:[]
MouseComponent.saveStartStop.canBePath:True
MouseComponent.saveStartStop.categ:Data
MouseComponent.saveStartStop.codeWanted:False
MouseComponent.saveStartStop.direct:True
MouseComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
MouseComponent.saveStartStop.inputType:bool
MouseComponent.saveStartStop.label:Save onset/offset times
MouseComponent.saveStartStop.readOnly:False
MouseComponent.saveStartStop.staticUpdater:None
MouseComponent.saveStartStop.updates:None
MouseComponent.saveStartStop.val:True
MouseComponent.saveStartStop.valType:bool
MouseComponent.startEstim.default:
MouseComponent.startEstim.allowedLabels:[]
MouseComponent.startEstim.allowedTypes:[]
MouseComponent.startEstim.allowedUpdates:None
MouseComponent.startEstim.allowedVals:[]
MouseComponent.startEstim.canBePath:True
MouseComponent.startEstim.categ:Basic
MouseComponent.startEstim.codeWanted:False
MouseComponent.startEstim.direct:False
MouseComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MouseComponent.startEstim.inputType:single
MouseComponent.startEstim.label:Expected start (s)
MouseComponent.startEstim.readOnly:False
MouseComponent.startEstim.staticUpdater:None
MouseComponent.startEstim.updates:None
MouseComponent.startEstim.val:
MouseComponent.startEstim.valType:code
MouseComponent.startType.default:'time (s)'
MouseComponent.startType.allowedLabels:[]
MouseComponent.startType.allowedTypes:[]
MouseComponent.startType.allowedUpdates:None
MouseComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MouseComponent.startType.canBePath:True
MouseComponent.startType.categ:Basic
MouseComponent.startType.codeWanted:False
MouseComponent.startType.direct:False
MouseComponent.startType.hint:How do you want to define your start point?
MouseComponent.startType.inputType:choice
MouseComponent.startType.label:start type
MouseComponent.startType.readOnly:False
MouseComponent.startType.staticUpdater:None
MouseComponent.startType.updates:None
MouseComponent.startType.val:time (s)
MouseComponent.startType.valType:str
MouseComponent.startVal.default:0.0
MouseComponent.startVal.allowedLabels:[]
MouseComponent.startVal.allowedTypes:[]
MouseComponent.startVal.allowedUpdates:None
MouseComponent.startVal.allowedVals:[]
MouseComponent.startVal.canBePath:True
MouseComponent.startVal.categ:Basic
MouseComponent.startVal.codeWanted:False
MouseComponent.startVal.direct:True
MouseComponent.startVal.hint:When does the component start?
MouseComponent.startVal.inputType:single
MouseComponent.startVal.label:Start
MouseComponent.startVal.readOnly:False
MouseComponent.startVal.staticUpdater:None
MouseComponent.startVal.updates:None
MouseComponent.startVal.val:0.0
MouseComponent.startVal.valType:code
MouseComponent.stopType.default:'duration (s)'
MouseComponent.stopType.allowedLabels:[]
MouseComponent.stopType.allowedTypes:[]
MouseComponent.stopType.allowedUpdates:None
MouseComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MouseComponent.stopType.canBePath:True
MouseComponent.stopType.categ:Basic
MouseComponent.stopType.codeWanted:False
MouseComponent.stopType.direct:False
MouseComponent.stopType.hint:How do you want to define your end point?
MouseComponent.stopType.inputType:choice
MouseComponent.stopType.label:stop type
MouseComponent.stopType.readOnly:False
MouseComponent.stopType.staticUpdater:None
MouseComponent.stopType.updates:None
MouseComponent.stopType.val:duration (s)
MouseComponent.stopType.valType:str
MouseComponent.stopVal.default:1.0
MouseComponent.stopVal.allowedLabels:[]
MouseComponent.stopVal.allowedTypes:[]
MouseComponent.stopVal.allowedUpdates:[]
MouseComponent.stopVal.allowedVals:[]
MouseComponent.stopVal.canBePath:True
MouseComponent.stopVal.categ:Basic
MouseComponent.stopVal.codeWanted:False
MouseComponent.stopVal.direct:True
MouseComponent.stopVal.hint:When does the component end? (blank is endless)
MouseComponent.stopVal.inputType:single
MouseComponent.stopVal.label:Stop
MouseComponent.stopVal.readOnly:False
MouseComponent.stopVal.staticUpdater:None
MouseComponent.stopVal.updates:constant
MouseComponent.stopVal.val:1.0
MouseComponent.stopVal.valType:code
MouseComponent.syncScreenRefresh.default:False
MouseComponent.syncScreenRefresh.allowedLabels:[]
MouseComponent.syncScreenRefresh.allowedTypes:[]
MouseComponent.syncScreenRefresh.allowedUpdates:None
MouseComponent.syncScreenRefresh.allowedVals:[]
MouseComponent.syncScreenRefresh.canBePath:True
MouseComponent.syncScreenRefresh.categ:Data
MouseComponent.syncScreenRefresh.codeWanted:False
MouseComponent.syncScreenRefresh.direct:True
MouseComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
MouseComponent.syncScreenRefresh.inputType:bool
MouseComponent.syncScreenRefresh.label:Sync timing with screen refresh
MouseComponent.syncScreenRefresh.readOnly:False
MouseComponent.syncScreenRefresh.staticUpdater:None
MouseComponent.syncScreenRefresh.updates:None
MouseComponent.syncScreenRefresh.val:False
MouseComponent.syncScreenRefresh.valType:bool
MouseComponent.timeRelativeTo.default:'mouse onset'
MouseComponent.timeRelativeTo.allowedLabels:[]
MouseComponent.timeRelativeTo.allowedTypes:[]
MouseComponent.timeRelativeTo.allowedUpdates:None
MouseComponent.timeRelativeTo.allowedVals:['mouse onset', 'experiment', 'routine']
MouseComponent.timeRelativeTo.canBePath:True
MouseComponent.timeRelativeTo.categ:Data
MouseComponent.timeRelativeTo.codeWanted:False
MouseComponent.timeRelativeTo.direct:False
MouseComponent.timeRelativeTo.hint:What should the values of mouse.time should be relative to?
MouseComponent.timeRelativeTo.inputType:choice
MouseComponent.timeRelativeTo.label:Time relative to
MouseComponent.timeRelativeTo.readOnly:False
MouseComponent.timeRelativeTo.staticUpdater:None
MouseComponent.timeRelativeTo.updates:constant
MouseComponent.timeRelativeTo.val:mouse onset
MouseComponent.timeRelativeTo.valType:str
MovieComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'movie', 'forceEndRoutine', 'loop', 'No audio', 'backend']
MovieComponent.No audio.default:False
MovieComponent.No audio.allowedLabels:[]
MovieComponent.No audio.allowedTypes:[]
MovieComponent.No audio.allowedUpdates:None
MovieComponent.No audio.allowedVals:[]
MovieComponent.No audio.canBePath:True
MovieComponent.No audio.categ:Playback
MovieComponent.No audio.codeWanted:False
MovieComponent.No audio.direct:True
MovieComponent.No audio.hint:Prevent the audio stream from being loaded/processed (moviepy and opencv only)
MovieComponent.No audio.inputType:bool
MovieComponent.No audio.label:No audio
MovieComponent.No audio.readOnly:False
MovieComponent.No audio.staticUpdater:None
MovieComponent.No audio.updates:None
MovieComponent.No audio.val:False
MovieComponent.No audio.valType:bool
MovieComponent.anchor.default:'center'
MovieComponent.anchor.allowedLabels:[]
MovieComponent.anchor.allowedTypes:[]
MovieComponent.anchor.allowedUpdates:None
MovieComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
MovieComponent.anchor.canBePath:True
MovieComponent.anchor.categ:Layout
MovieComponent.anchor.codeWanted:False
MovieComponent.anchor.direct:True
MovieComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
MovieComponent.anchor.inputType:choice
MovieComponent.anchor.label:Anchor
MovieComponent.anchor.readOnly:False
MovieComponent.anchor.staticUpdater:None
MovieComponent.anchor.updates:constant
MovieComponent.anchor.val:center
MovieComponent.anchor.valType:str
MovieComponent.backend.default:'moviepy'
MovieComponent.backend.allowedLabels:[]
MovieComponent.backend.allowedTypes:[]
MovieComponent.backend.allowedUpdates:None
MovieComponent.backend.allowedVals:['moviepy', 'avbin', 'opencv', 'vlc']
MovieComponent.backend.canBePath:True
MovieComponent.backend.categ:Playback
MovieComponent.backend.codeWanted:False
MovieComponent.backend.direct:False
MovieComponent.backend.hint:What underlying lib to use for loading movies
MovieComponent.backend.inputType:choice
MovieComponent.backend.label:Backend
MovieComponent.backend.readOnly:False
MovieComponent.backend.staticUpdater:None
MovieComponent.backend.updates:None
MovieComponent.backend.val:moviepy
MovieComponent.backend.valType:str
MovieComponent.contrast.default:1.0
MovieComponent.contrast.allowedLabels:[]
MovieComponent.contrast.allowedTypes:[]
MovieComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.contrast.allowedVals:[]
MovieComponent.contrast.canBePath:True
MovieComponent.contrast.categ:Appearance
MovieComponent.contrast.codeWanted:False
MovieComponent.contrast.direct:True
MovieComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
MovieComponent.contrast.inputType:single
MovieComponent.contrast.label:Contrast
MovieComponent.contrast.readOnly:False
MovieComponent.contrast.staticUpdater:None
MovieComponent.contrast.updates:constant
MovieComponent.contrast.val:1
MovieComponent.contrast.valType:num
MovieComponent.disabled.default:False
MovieComponent.disabled.allowedLabels:[]
MovieComponent.disabled.allowedTypes:[]
MovieComponent.disabled.allowedUpdates:None
MovieComponent.disabled.allowedVals:[]
MovieComponent.disabled.canBePath:True
MovieComponent.disabled.categ:Testing
MovieComponent.disabled.codeWanted:False
MovieComponent.disabled.direct:False
MovieComponent.disabled.hint:Disable this component
MovieComponent.disabled.inputType:bool
MovieComponent.disabled.label:Disable component
MovieComponent.disabled.readOnly:False
MovieComponent.disabled.staticUpdater:None
MovieComponent.disabled.updates:None
MovieComponent.disabled.val:False
MovieComponent.disabled.valType:bool
MovieComponent.durationEstim.default:
MovieComponent.durationEstim.allowedLabels:[]
MovieComponent.durationEstim.allowedTypes:[]
MovieComponent.durationEstim.allowedUpdates:None
MovieComponent.durationEstim.allowedVals:[]
MovieComponent.durationEstim.canBePath:True
MovieComponent.durationEstim.categ:Basic
MovieComponent.durationEstim.codeWanted:False
MovieComponent.durationEstim.direct:False
MovieComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MovieComponent.durationEstim.inputType:single
MovieComponent.durationEstim.label:Expected duration (s)
MovieComponent.durationEstim.readOnly:False
MovieComponent.durationEstim.staticUpdater:None
MovieComponent.durationEstim.updates:None
MovieComponent.durationEstim.val:
MovieComponent.durationEstim.valType:code
MovieComponent.forceEndRoutine.default:False
MovieComponent.forceEndRoutine.allowedLabels:[]
MovieComponent.forceEndRoutine.allowedTypes:[]
MovieComponent.forceEndRoutine.allowedUpdates:[]
MovieComponent.forceEndRoutine.allowedVals:[]
MovieComponent.forceEndRoutine.canBePath:True
MovieComponent.forceEndRoutine.categ:Basic
MovieComponent.forceEndRoutine.codeWanted:False
MovieComponent.forceEndRoutine.direct:True
MovieComponent.forceEndRoutine.hint:Should the end of the movie cause the end of the routine (e.g. trial)?
MovieComponent.forceEndRoutine.inputType:bool
MovieComponent.forceEndRoutine.label:Force end of Routine
MovieComponent.forceEndRoutine.readOnly:False
MovieComponent.forceEndRoutine.staticUpdater:None
MovieComponent.forceEndRoutine.updates:constant
MovieComponent.forceEndRoutine.val:False
MovieComponent.forceEndRoutine.valType:bool
MovieComponent.loop.default:False
MovieComponent.loop.allowedLabels:[]
MovieComponent.loop.allowedTypes:[]
MovieComponent.loop.allowedUpdates:None
MovieComponent.loop.allowedVals:[]
MovieComponent.loop.canBePath:True
MovieComponent.loop.categ:Playback
MovieComponent.loop.codeWanted:False
MovieComponent.loop.direct:True
MovieComponent.loop.hint:Whether the movie should loop back to the beginning on completion.
MovieComponent.loop.inputType:bool
MovieComponent.loop.label:Loop playback
MovieComponent.loop.readOnly:False
MovieComponent.loop.staticUpdater:None
MovieComponent.loop.updates:None
MovieComponent.loop.val:False
MovieComponent.loop.valType:bool
MovieComponent.movie.default:'.'
MovieComponent.movie.allowedLabels:[]
MovieComponent.movie.allowedTypes:[]
MovieComponent.movie.allowedUpdates:['constant', 'set every repeat']
MovieComponent.movie.allowedVals:[]
MovieComponent.movie.canBePath:True
MovieComponent.movie.categ:Basic
MovieComponent.movie.codeWanted:False
MovieComponent.movie.direct:True
MovieComponent.movie.hint:A filename for the movie (including path)
MovieComponent.movie.inputType:file
MovieComponent.movie.label:Movie file
MovieComponent.movie.readOnly:False
MovieComponent.movie.staticUpdater:None
MovieComponent.movie.updates:constant
MovieComponent.movie.val:
MovieComponent.movie.valType:file
MovieComponent.name.default:movie
MovieComponent.name.allowedLabels:[]
MovieComponent.name.allowedTypes:[]
MovieComponent.name.allowedUpdates:None
MovieComponent.name.allowedVals:[]
MovieComponent.name.canBePath:True
MovieComponent.name.categ:Basic
MovieComponent.name.codeWanted:False
MovieComponent.name.direct:True
MovieComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
MovieComponent.name.inputType:single
MovieComponent.name.label:Name
MovieComponent.name.readOnly:False
MovieComponent.name.staticUpdater:None
MovieComponent.name.val:movie
MovieComponent.name.valType:code
MovieComponent.opacity.default:None
MovieComponent.opacity.allowedLabels:[]
MovieComponent.opacity.allowedTypes:[]
MovieComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.opacity.allowedVals:[]
MovieComponent.opacity.canBePath:True
MovieComponent.opacity.categ:Appearance
MovieComponent.opacity.codeWanted:False
MovieComponent.opacity.direct:True
MovieComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
MovieComponent.opacity.inputType:single
MovieComponent.opacity.label:Opacity
MovieComponent.opacity.readOnly:False
MovieComponent.opacity.staticUpdater:None
MovieComponent.opacity.updates:constant
MovieComponent.opacity.val:
MovieComponent.opacity.valType:num
MovieComponent.ori.default:0.0
MovieComponent.ori.allowedLabels:[]
MovieComponent.ori.allowedTypes:[]
MovieComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.ori.allowedVals:[-360, 360]
MovieComponent.ori.canBePath:True
MovieComponent.ori.categ:Layout
MovieComponent.ori.codeWanted:False
MovieComponent.ori.direct:True
MovieComponent.ori.hint:Orientation of this stimulus (in deg)
MovieComponent.ori.inputType:spin
MovieComponent.ori.label:Orientation
MovieComponent.ori.readOnly:False
MovieComponent.ori.staticUpdater:None
MovieComponent.ori.updates:constant
MovieComponent.ori.val:0
MovieComponent.ori.valType:num
MovieComponent.pos.default:(0, 0)
MovieComponent.pos.allowedLabels:[]
MovieComponent.pos.allowedTypes:[]
MovieComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.pos.allowedVals:[]
MovieComponent.pos.canBePath:True
MovieComponent.pos.categ:Layout
MovieComponent.pos.codeWanted:False
MovieComponent.pos.direct:True
MovieComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
MovieComponent.pos.inputType:single
MovieComponent.pos.label:Position [x,y]
MovieComponent.pos.readOnly:False
MovieComponent.pos.staticUpdater:None
MovieComponent.pos.updates:constant
MovieComponent.pos.val:(0, 0)
MovieComponent.pos.valType:list
MovieComponent.saveStartStop.default:True
MovieComponent.saveStartStop.allowedLabels:[]
MovieComponent.saveStartStop.allowedTypes:[]
MovieComponent.saveStartStop.allowedUpdates:None
MovieComponent.saveStartStop.allowedVals:[]
MovieComponent.saveStartStop.canBePath:True
MovieComponent.saveStartStop.categ:Data
MovieComponent.saveStartStop.codeWanted:False
MovieComponent.saveStartStop.direct:True
MovieComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
MovieComponent.saveStartStop.inputType:bool
MovieComponent.saveStartStop.label:Save onset/offset times
MovieComponent.saveStartStop.readOnly:False
MovieComponent.saveStartStop.staticUpdater:None
MovieComponent.saveStartStop.updates:None
MovieComponent.saveStartStop.val:True
MovieComponent.saveStartStop.valType:bool
MovieComponent.size.default:[]
MovieComponent.size.allowedLabels:[]
MovieComponent.size.allowedTypes:[]
MovieComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.size.allowedVals:[]
MovieComponent.size.canBePath:True
MovieComponent.size.categ:Layout
MovieComponent.size.codeWanted:False
MovieComponent.size.direct:True
MovieComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
MovieComponent.size.inputType:single
MovieComponent.size.label:Size [w,h]
MovieComponent.size.readOnly:False
MovieComponent.size.staticUpdater:None
MovieComponent.size.updates:constant
MovieComponent.size.val:
MovieComponent.size.valType:list
MovieComponent.startEstim.default:
MovieComponent.startEstim.allowedLabels:[]
MovieComponent.startEstim.allowedTypes:[]
MovieComponent.startEstim.allowedUpdates:None
MovieComponent.startEstim.allowedVals:[]
MovieComponent.startEstim.canBePath:True
MovieComponent.startEstim.categ:Basic
MovieComponent.startEstim.codeWanted:False
MovieComponent.startEstim.direct:False
MovieComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MovieComponent.startEstim.inputType:single
MovieComponent.startEstim.label:Expected start (s)
MovieComponent.startEstim.readOnly:False
MovieComponent.startEstim.staticUpdater:None
MovieComponent.startEstim.updates:None
MovieComponent.startEstim.val:
MovieComponent.startEstim.valType:code
MovieComponent.startType.default:'time (s)'
MovieComponent.startType.allowedLabels:[]
MovieComponent.startType.allowedTypes:[]
MovieComponent.startType.allowedUpdates:None
MovieComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MovieComponent.startType.canBePath:True
MovieComponent.startType.categ:Basic
MovieComponent.startType.codeWanted:False
MovieComponent.startType.direct:False
MovieComponent.startType.hint:How do you want to define your start point?
MovieComponent.startType.inputType:choice
MovieComponent.startType.label:start type
MovieComponent.startType.readOnly:False
MovieComponent.startType.staticUpdater:None
MovieComponent.startType.updates:None
MovieComponent.startType.val:time (s)
MovieComponent.startType.valType:str
MovieComponent.startVal.default:0.0
MovieComponent.startVal.allowedLabels:[]
MovieComponent.startVal.allowedTypes:[]
MovieComponent.startVal.allowedUpdates:None
MovieComponent.startVal.allowedVals:[]
MovieComponent.startVal.canBePath:True
MovieComponent.startVal.categ:Basic
MovieComponent.startVal.codeWanted:False
MovieComponent.startVal.direct:True
MovieComponent.startVal.hint:When does the component start?
MovieComponent.startVal.inputType:single
MovieComponent.startVal.label:Start
MovieComponent.startVal.readOnly:False
MovieComponent.startVal.staticUpdater:None
MovieComponent.startVal.updates:None
MovieComponent.startVal.val:0.0
MovieComponent.startVal.valType:code
MovieComponent.stopType.default:'duration (s)'
MovieComponent.stopType.allowedLabels:[]
MovieComponent.stopType.allowedTypes:[]
MovieComponent.stopType.allowedUpdates:None
MovieComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MovieComponent.stopType.canBePath:True
MovieComponent.stopType.categ:Basic
MovieComponent.stopType.codeWanted:False
MovieComponent.stopType.direct:False
MovieComponent.stopType.hint:How do you want to define your end point?
MovieComponent.stopType.inputType:choice
MovieComponent.stopType.label:stop type
MovieComponent.stopType.readOnly:False
MovieComponent.stopType.staticUpdater:None
MovieComponent.stopType.updates:None
MovieComponent.stopType.val:duration (s)
MovieComponent.stopType.valType:str
MovieComponent.stopVal.default:1.0
MovieComponent.stopVal.allowedLabels:[]
MovieComponent.stopVal.allowedTypes:[]
MovieComponent.stopVal.allowedUpdates:[]
MovieComponent.stopVal.allowedVals:[]
MovieComponent.stopVal.canBePath:True
MovieComponent.stopVal.categ:Basic
MovieComponent.stopVal.codeWanted:False
MovieComponent.stopVal.direct:True
MovieComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
MovieComponent.stopVal.inputType:single
MovieComponent.stopVal.label:Stop
MovieComponent.stopVal.readOnly:False
MovieComponent.stopVal.staticUpdater:None
MovieComponent.stopVal.updates:constant
MovieComponent.stopVal.val:1.0
MovieComponent.stopVal.valType:code
MovieComponent.syncScreenRefresh.default:True
MovieComponent.syncScreenRefresh.allowedLabels:[]
MovieComponent.syncScreenRefresh.allowedTypes:[]
MovieComponent.syncScreenRefresh.allowedUpdates:None
MovieComponent.syncScreenRefresh.allowedVals:[]
MovieComponent.syncScreenRefresh.canBePath:True
MovieComponent.syncScreenRefresh.categ:Data
MovieComponent.syncScreenRefresh.codeWanted:False
MovieComponent.syncScreenRefresh.direct:True
MovieComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
MovieComponent.syncScreenRefresh.inputType:bool
MovieComponent.syncScreenRefresh.label:Sync timing with screen refresh
MovieComponent.syncScreenRefresh.readOnly:True
MovieComponent.syncScreenRefresh.staticUpdater:None
MovieComponent.syncScreenRefresh.updates:None
MovieComponent.syncScreenRefresh.val:True
MovieComponent.syncScreenRefresh.valType:bool
MovieComponent.units.default:'from exp settings'
MovieComponent.units.allowedLabels:[]
MovieComponent.units.allowedTypes:[]
MovieComponent.units.allowedUpdates:None
MovieComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
MovieComponent.units.canBePath:True
MovieComponent.units.categ:Layout
MovieComponent.units.codeWanted:False
MovieComponent.units.direct:True
MovieComponent.units.hint:Units of dimensions for this stimulus
MovieComponent.units.inputType:choice
MovieComponent.units.label:Spatial Units
MovieComponent.units.readOnly:False
MovieComponent.units.staticUpdater:None
MovieComponent.units.updates:None
MovieComponent.units.val:from exp settings
MovieComponent.units.valType:str
NoiseStimComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'noiseElementSize', 'pos', 'units', 'anchor', 'ori', 'blendmode', 'noiseElementSize', 'noiseNewSample', 'noiseNewSampleWhen', 'noiseOri', 'mask']
NoiseStimComponent.blendmode.default:'avg'
NoiseStimComponent.blendmode.allowedLabels:[]
NoiseStimComponent.blendmode.allowedTypes:[]
NoiseStimComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.blendmode.allowedVals:['avg', 'add']
NoiseStimComponent.blendmode.canBePath:True
NoiseStimComponent.blendmode.categ:Appearance
NoiseStimComponent.blendmode.codeWanted:False
NoiseStimComponent.blendmode.direct:True
NoiseStimComponent.blendmode.hint:OpenGL Blendmode [avg, add (avg is most common mode in PsychoPy, add is used if you want to generate the sum of two components)]
NoiseStimComponent.blendmode.inputType:choice
NoiseStimComponent.blendmode.label:OpenGL blend mode
NoiseStimComponent.blendmode.readOnly:False
NoiseStimComponent.blendmode.staticUpdater:None
NoiseStimComponent.blendmode.updates:constant
NoiseStimComponent.blendmode.val:avg
NoiseStimComponent.blendmode.valType:str
NoiseStimComponent.color.default:[1,1,1]
NoiseStimComponent.color.allowedLabels:[]
NoiseStimComponent.color.allowedTypes:[]
NoiseStimComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.color.allowedVals:[]
NoiseStimComponent.color.canBePath:True
NoiseStimComponent.color.categ:Appearance
NoiseStimComponent.color.codeWanted:True
NoiseStimComponent.color.direct:True
NoiseStimComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
NoiseStimComponent.color.inputType:color
NoiseStimComponent.color.label:Foreground Color
NoiseStimComponent.color.readOnly:False
NoiseStimComponent.color.staticUpdater:None
NoiseStimComponent.color.updates:constant
NoiseStimComponent.color.val:$[1,1,1]
NoiseStimComponent.color.valType:color
NoiseStimComponent.colorSpace.default:'rgb'
NoiseStimComponent.colorSpace.allowedLabels:[]
NoiseStimComponent.colorSpace.allowedTypes:[]
NoiseStimComponent.colorSpace.allowedUpdates:None
NoiseStimComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
NoiseStimComponent.colorSpace.canBePath:True
NoiseStimComponent.colorSpace.categ:Appearance
NoiseStimComponent.colorSpace.codeWanted:False
NoiseStimComponent.colorSpace.direct:True
NoiseStimComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
NoiseStimComponent.colorSpace.inputType:choice
NoiseStimComponent.colorSpace.label:Color Space
NoiseStimComponent.colorSpace.readOnly:False
NoiseStimComponent.colorSpace.staticUpdater:None
NoiseStimComponent.colorSpace.updates:constant
NoiseStimComponent.colorSpace.val:rgb
NoiseStimComponent.colorSpace.valType:str
NoiseStimComponent.contrast.default:1.0
NoiseStimComponent.contrast.allowedLabels:[]
NoiseStimComponent.contrast.allowedTypes:[]
NoiseStimComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.contrast.allowedVals:[]
NoiseStimComponent.contrast.canBePath:True
NoiseStimComponent.contrast.categ:Texture
NoiseStimComponent.contrast.codeWanted:False
NoiseStimComponent.contrast.direct:True
NoiseStimComponent.contrast.hint:Michaelson contrast of the image
NoiseStimComponent.contrast.inputType:single
NoiseStimComponent.contrast.label:Contrast
NoiseStimComponent.contrast.readOnly:False
NoiseStimComponent.contrast.staticUpdater:None
NoiseStimComponent.contrast.updates:constant
NoiseStimComponent.contrast.val:1.0
NoiseStimComponent.contrast.valType:num
NoiseStimComponent.disabled.default:False
NoiseStimComponent.disabled.allowedLabels:[]
NoiseStimComponent.disabled.allowedTypes:[]
NoiseStimComponent.disabled.allowedUpdates:None
NoiseStimComponent.disabled.allowedVals:[]
NoiseStimComponent.disabled.canBePath:True
NoiseStimComponent.disabled.categ:Testing
NoiseStimComponent.disabled.codeWanted:False
NoiseStimComponent.disabled.direct:False
NoiseStimComponent.disabled.hint:Disable this component
NoiseStimComponent.disabled.inputType:bool
NoiseStimComponent.disabled.label:Disable component
NoiseStimComponent.disabled.readOnly:False
NoiseStimComponent.disabled.staticUpdater:None
NoiseStimComponent.disabled.updates:None
NoiseStimComponent.disabled.val:False
NoiseStimComponent.disabled.valType:bool
NoiseStimComponent.durationEstim.default:
NoiseStimComponent.durationEstim.allowedLabels:[]
NoiseStimComponent.durationEstim.allowedTypes:[]
NoiseStimComponent.durationEstim.allowedUpdates:None
NoiseStimComponent.durationEstim.allowedVals:[]
NoiseStimComponent.durationEstim.canBePath:True
NoiseStimComponent.durationEstim.categ:Basic
NoiseStimComponent.durationEstim.codeWanted:False
NoiseStimComponent.durationEstim.direct:False
NoiseStimComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
NoiseStimComponent.durationEstim.inputType:single
NoiseStimComponent.durationEstim.label:Expected duration (s)
NoiseStimComponent.durationEstim.readOnly:False
NoiseStimComponent.durationEstim.staticUpdater:None
NoiseStimComponent.durationEstim.updates:None
NoiseStimComponent.durationEstim.val:
NoiseStimComponent.durationEstim.valType:code
NoiseStimComponent.filter.default:'None'
NoiseStimComponent.filter.allowedLabels:[]
NoiseStimComponent.filter.allowedTypes:[]
NoiseStimComponent.filter.allowedUpdates:[]
NoiseStimComponent.filter.allowedVals:['None', 'Butterworth', 'Gabor', 'Isotropic']
NoiseStimComponent.filter.canBePath:True
NoiseStimComponent.filter.categ:Texture
NoiseStimComponent.filter.codeWanted:False
NoiseStimComponent.filter.direct:True
NoiseStimComponent.filter.hint:Apply filter to noise sample? [Butterworth, Gabor, Isoptopic]. A filter with parameters taken from the either the Filtered (Butterworth) or Gabor/Isotropic tab will be applied to OTHER noise types. [NOTE: if noise of the same type as the filter is requested the filter is applied, once only, to a white noise sample.]
NoiseStimComponent.filter.inputType:choice
NoiseStimComponent.filter.label:Apply filter to noise sample
NoiseStimComponent.filter.readOnly:False
NoiseStimComponent.filter.staticUpdater:None
NoiseStimComponent.filter.updates:constant
NoiseStimComponent.filter.val:None
NoiseStimComponent.filter.valType:str
NoiseStimComponent.imageComponent.default:'Phase'
NoiseStimComponent.imageComponent.allowedLabels:[]
NoiseStimComponent.imageComponent.allowedTypes:[]
NoiseStimComponent.imageComponent.allowedUpdates:[]
NoiseStimComponent.imageComponent.allowedVals:['Phase', 'Amplitude']
NoiseStimComponent.imageComponent.canBePath:True
NoiseStimComponent.imageComponent.categ:Basic
NoiseStimComponent.imageComponent.codeWanted:False
NoiseStimComponent.imageComponent.direct:True
NoiseStimComponent.imageComponent.hint:Which image component should be randomised? [Amplitude,Phase]. Randomizing amplitude will keep the phase spectrum of the image but set the amplitude spectrum to random values [0...1]. This keeps spatial structure in tact. Randoming the phase spectrum will keep the amplitude spectrum of the image  but set the phase spectrum to random values [-pi...pi] in radians. This makes a noise sample with no obvious structure. 
NoiseStimComponent.imageComponent.inputType:choice
NoiseStimComponent.imageComponent.label:Radomize image component
NoiseStimComponent.imageComponent.readOnly:False
NoiseStimComponent.imageComponent.staticUpdater:None
NoiseStimComponent.imageComponent.updates:constant
NoiseStimComponent.imageComponent.val:Phase
NoiseStimComponent.imageComponent.valType:str
NoiseStimComponent.interpolate.default:'nearest'
NoiseStimComponent.interpolate.allowedLabels:[]
NoiseStimComponent.interpolate.allowedTypes:[]
NoiseStimComponent.interpolate.allowedUpdates:[]
NoiseStimComponent.interpolate.allowedVals:['linear', 'nearest']
NoiseStimComponent.interpolate.canBePath:True
NoiseStimComponent.interpolate.categ:Texture
NoiseStimComponent.interpolate.codeWanted:False
NoiseStimComponent.interpolate.direct:False
NoiseStimComponent.interpolate.hint:How should the image be interpolated if/when rescaled
NoiseStimComponent.interpolate.inputType:choice
NoiseStimComponent.interpolate.label:Interpolate
NoiseStimComponent.interpolate.readOnly:False
NoiseStimComponent.interpolate.staticUpdater:None
NoiseStimComponent.interpolate.updates:constant
NoiseStimComponent.interpolate.val:nearest
NoiseStimComponent.interpolate.valType:str
NoiseStimComponent.mask.default:'None'
NoiseStimComponent.mask.allowedLabels:[]
NoiseStimComponent.mask.allowedTypes:[]
NoiseStimComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.mask.allowedVals:[]
NoiseStimComponent.mask.canBePath:True
NoiseStimComponent.mask.categ:Texture
NoiseStimComponent.mask.codeWanted:False
NoiseStimComponent.mask.direct:True
NoiseStimComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
NoiseStimComponent.mask.inputType:single
NoiseStimComponent.mask.label:Mask
NoiseStimComponent.mask.readOnly:False
NoiseStimComponent.mask.staticUpdater:None
NoiseStimComponent.mask.updates:constant
NoiseStimComponent.mask.val:None
NoiseStimComponent.mask.valType:str
NoiseStimComponent.name.default:noise
NoiseStimComponent.name.allowedLabels:[]
NoiseStimComponent.name.allowedTypes:[]
NoiseStimComponent.name.allowedUpdates:None
NoiseStimComponent.name.allowedVals:[]
NoiseStimComponent.name.canBePath:True
NoiseStimComponent.name.categ:Basic
NoiseStimComponent.name.codeWanted:False
NoiseStimComponent.name.direct:True
NoiseStimComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
NoiseStimComponent.name.inputType:single
NoiseStimComponent.name.label:Name
NoiseStimComponent.name.readOnly:False
NoiseStimComponent.name.staticUpdater:None
NoiseStimComponent.name.val:noise
NoiseStimComponent.name.valType:code
NoiseStimComponent.noiseBW.default:1.0
NoiseStimComponent.noiseBW.allowedLabels:[]
NoiseStimComponent.noiseBW.allowedTypes:[]
NoiseStimComponent.noiseBW.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBW.allowedVals:[]
NoiseStimComponent.noiseBW.canBePath:True
NoiseStimComponent.noiseBW.categ:Texture
NoiseStimComponent.noiseBW.codeWanted:False
NoiseStimComponent.noiseBW.direct:True
NoiseStimComponent.noiseBW.hint:Spatial frequency bandwidth in octaves - Full width half height
NoiseStimComponent.noiseBW.inputType:single
NoiseStimComponent.noiseBW.label:Spatial frequency bandwidth
NoiseStimComponent.noiseBW.readOnly:False
NoiseStimComponent.noiseBW.staticUpdater:None
NoiseStimComponent.noiseBW.updates:constant
NoiseStimComponent.noiseBW.val:1
NoiseStimComponent.noiseBW.valType:num
NoiseStimComponent.noiseBWO.default:30.0
NoiseStimComponent.noiseBWO.allowedLabels:[]
NoiseStimComponent.noiseBWO.allowedTypes:[]
NoiseStimComponent.noiseBWO.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBWO.allowedVals:[]
NoiseStimComponent.noiseBWO.canBePath:True
NoiseStimComponent.noiseBWO.categ:Texture
NoiseStimComponent.noiseBWO.codeWanted:False
NoiseStimComponent.noiseBWO.direct:True
NoiseStimComponent.noiseBWO.hint:Orientation bandwidth in degrees (Gabor only) - Full width half height
NoiseStimComponent.noiseBWO.inputType:single
NoiseStimComponent.noiseBWO.label:Orientation bandwidth for Gabor noise
NoiseStimComponent.noiseBWO.readOnly:False
NoiseStimComponent.noiseBWO.staticUpdater:None
NoiseStimComponent.noiseBWO.updates:constant
NoiseStimComponent.noiseBWO.val:30
NoiseStimComponent.noiseBWO.valType:num
NoiseStimComponent.noiseBaseSf.default:8.0
NoiseStimComponent.noiseBaseSf.allowedLabels:[]
NoiseStimComponent.noiseBaseSf.allowedTypes:[]
NoiseStimComponent.noiseBaseSf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBaseSf.allowedVals:[]
NoiseStimComponent.noiseBaseSf.canBePath:True
NoiseStimComponent.noiseBaseSf.categ:Texture
NoiseStimComponent.noiseBaseSf.codeWanted:False
NoiseStimComponent.noiseBaseSf.direct:True
NoiseStimComponent.noiseBaseSf.hint:Base spatial frequency in cycles per unit length If units = pix this value should be < 0.5.
NoiseStimComponent.noiseBaseSf.inputType:single
NoiseStimComponent.noiseBaseSf.label:Base spatial frequency
NoiseStimComponent.noiseBaseSf.readOnly:False
NoiseStimComponent.noiseBaseSf.staticUpdater:None
NoiseStimComponent.noiseBaseSf.updates:constant
NoiseStimComponent.noiseBaseSf.val:8.0
NoiseStimComponent.noiseBaseSf.valType:num
NoiseStimComponent.noiseClip.default:3.0
NoiseStimComponent.noiseClip.allowedLabels:[]
NoiseStimComponent.noiseClip.allowedTypes:[]
NoiseStimComponent.noiseClip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseClip.allowedVals:[]
NoiseStimComponent.noiseClip.canBePath:True
NoiseStimComponent.noiseClip.categ:Texture
NoiseStimComponent.noiseClip.codeWanted:False
NoiseStimComponent.noiseClip.direct:True
NoiseStimComponent.noiseClip.hint:Truncate high and low values beyond stated standard deviations from mean and rescale greyscale range. This is not used at all for 'binary' or 'uniform' noise and scales rather than clips 'normal' noise). The higher this is the lower the final RMS contrast. If very low noise may appear binarised. NOTE: If a filter is used clipping and rescaling are applied after the filter, regardless of the noise type.
NoiseStimComponent.noiseClip.inputType:single
NoiseStimComponent.noiseClip.label:Number of standard deviations at which to clip noise
NoiseStimComponent.noiseClip.readOnly:False
NoiseStimComponent.noiseClip.staticUpdater:None
NoiseStimComponent.noiseClip.updates:constant
NoiseStimComponent.noiseClip.val:3.0
NoiseStimComponent.noiseClip.valType:num
NoiseStimComponent.noiseElementSize.default:[0.0625]
NoiseStimComponent.noiseElementSize.allowedLabels:[]
NoiseStimComponent.noiseElementSize.allowedTypes:[]
NoiseStimComponent.noiseElementSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseElementSize.allowedVals:[]
NoiseStimComponent.noiseElementSize.canBePath:True
NoiseStimComponent.noiseElementSize.categ:Layout
NoiseStimComponent.noiseElementSize.codeWanted:False
NoiseStimComponent.noiseElementSize.direct:True
NoiseStimComponent.noiseElementSize.hint:(Binary, Normal and Uniform only) Size of noise elements in the stimulus units, for pixelated noise.
NoiseStimComponent.noiseElementSize.inputType:single
NoiseStimComponent.noiseElementSize.label:Noise element size
NoiseStimComponent.noiseElementSize.readOnly:False
NoiseStimComponent.noiseElementSize.staticUpdater:None
NoiseStimComponent.noiseElementSize.updates:constant
NoiseStimComponent.noiseElementSize.val:0.0625
NoiseStimComponent.noiseElementSize.valType:list
NoiseStimComponent.noiseFilterLower.default:1.0
NoiseStimComponent.noiseFilterLower.allowedLabels:[]
NoiseStimComponent.noiseFilterLower.allowedTypes:[]
NoiseStimComponent.noiseFilterLower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterLower.allowedVals:[]
NoiseStimComponent.noiseFilterLower.canBePath:True
NoiseStimComponent.noiseFilterLower.categ:Texture
NoiseStimComponent.noiseFilterLower.codeWanted:False
NoiseStimComponent.noiseFilterLower.direct:True
NoiseStimComponent.noiseFilterLower.hint:Lower cutoff frequency in cycles per unit length. Set to zero to avoid a lower cuttoff and make a low pass filter.
NoiseStimComponent.noiseFilterLower.inputType:single
NoiseStimComponent.noiseFilterLower.label:Lower cut off frequency
NoiseStimComponent.noiseFilterLower.readOnly:False
NoiseStimComponent.noiseFilterLower.staticUpdater:None
NoiseStimComponent.noiseFilterLower.updates:constant
NoiseStimComponent.noiseFilterLower.val:1.0
NoiseStimComponent.noiseFilterLower.valType:num
NoiseStimComponent.noiseFilterOrder.default:0.0
NoiseStimComponent.noiseFilterOrder.allowedLabels:[]
NoiseStimComponent.noiseFilterOrder.allowedTypes:[]
NoiseStimComponent.noiseFilterOrder.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterOrder.allowedVals:[]
NoiseStimComponent.noiseFilterOrder.canBePath:True
NoiseStimComponent.noiseFilterOrder.categ:Texture
NoiseStimComponent.noiseFilterOrder.codeWanted:False
NoiseStimComponent.noiseFilterOrder.direct:True
NoiseStimComponent.noiseFilterOrder.hint:Order of filter - higher = steeper fall off, zero = no filter
NoiseStimComponent.noiseFilterOrder.inputType:single
NoiseStimComponent.noiseFilterOrder.label:Order of filter
NoiseStimComponent.noiseFilterOrder.readOnly:False
NoiseStimComponent.noiseFilterOrder.staticUpdater:None
NoiseStimComponent.noiseFilterOrder.updates:constant
NoiseStimComponent.noiseFilterOrder.val:0.0
NoiseStimComponent.noiseFilterOrder.valType:num
NoiseStimComponent.noiseFilterUpper.default:8.0
NoiseStimComponent.noiseFilterUpper.allowedLabels:[]
NoiseStimComponent.noiseFilterUpper.allowedTypes:[]
NoiseStimComponent.noiseFilterUpper.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterUpper.allowedVals:[]
NoiseStimComponent.noiseFilterUpper.canBePath:True
NoiseStimComponent.noiseFilterUpper.categ:Texture
NoiseStimComponent.noiseFilterUpper.codeWanted:False
NoiseStimComponent.noiseFilterUpper.direct:True
NoiseStimComponent.noiseFilterUpper.hint:Upper cutoff frequency in cycles per unit length. Set very high to avoid an upper cutoff and make a high pass filter.
NoiseStimComponent.noiseFilterUpper.inputType:single
NoiseStimComponent.noiseFilterUpper.label:Upper cut off frequency
NoiseStimComponent.noiseFilterUpper.readOnly:False
NoiseStimComponent.noiseFilterUpper.staticUpdater:None
NoiseStimComponent.noiseFilterUpper.updates:constant
NoiseStimComponent.noiseFilterUpper.val:8.0
NoiseStimComponent.noiseFilterUpper.valType:num
NoiseStimComponent.noiseFractalPower.default:0.0
NoiseStimComponent.noiseFractalPower.allowedLabels:[]
NoiseStimComponent.noiseFractalPower.allowedTypes:[]
NoiseStimComponent.noiseFractalPower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFractalPower.allowedVals:[]
NoiseStimComponent.noiseFractalPower.canBePath:True
NoiseStimComponent.noiseFractalPower.categ:Texture
NoiseStimComponent.noiseFractalPower.codeWanted:False
NoiseStimComponent.noiseFractalPower.direct:True
NoiseStimComponent.noiseFractalPower.hint:Exponent for the slope of the filter's amplitude spectrum (A=f^Exponent). 0 = flat, -1 = slope of 1/f. When used on its own the 'filtered' noise type applies the filter to white noise so the resulting noise samples have the spectral properties of the filter.  When filtering a noise sample of another type this term takes the original spectrum and multiplies it by a ramp in frequency space with values set by the exponent. It does not force the spectrum to a specific slope. 
NoiseStimComponent.noiseFractalPower.inputType:single
NoiseStimComponent.noiseFractalPower.label:Skew in frequency spectrum
NoiseStimComponent.noiseFractalPower.readOnly:False
NoiseStimComponent.noiseFractalPower.staticUpdater:None
NoiseStimComponent.noiseFractalPower.updates:constant
NoiseStimComponent.noiseFractalPower.val:0.0
NoiseStimComponent.noiseFractalPower.valType:num
NoiseStimComponent.noiseImage.default:'None'
NoiseStimComponent.noiseImage.allowedLabels:[]
NoiseStimComponent.noiseImage.allowedTypes:[]
NoiseStimComponent.noiseImage.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseImage.allowedVals:[]
NoiseStimComponent.noiseImage.canBePath:True
NoiseStimComponent.noiseImage.categ:Texture
NoiseStimComponent.noiseImage.codeWanted:False
NoiseStimComponent.noiseImage.direct:True
NoiseStimComponent.noiseImage.hint:An image from which to derive the frequency spectrum for the noise. Give filename (including path)
NoiseStimComponent.noiseImage.inputType:file
NoiseStimComponent.noiseImage.label:Image from which to derive noise spectrum
NoiseStimComponent.noiseImage.readOnly:False
NoiseStimComponent.noiseImage.staticUpdater:None
NoiseStimComponent.noiseImage.updates:constant
NoiseStimComponent.noiseImage.val:None
NoiseStimComponent.noiseImage.valType:file
NoiseStimComponent.noiseNewSample.default:'None'
NoiseStimComponent.noiseNewSample.allowedLabels:[]
NoiseStimComponent.noiseNewSample.allowedTypes:[]
NoiseStimComponent.noiseNewSample.allowedUpdates:[]
NoiseStimComponent.noiseNewSample.allowedVals:['None', 'Repeat', 'N-frames', 'Seconds']
NoiseStimComponent.noiseNewSample.canBePath:True
NoiseStimComponent.noiseNewSample.categ:Timing
NoiseStimComponent.noiseNewSample.codeWanted:False
NoiseStimComponent.noiseNewSample.direct:True
NoiseStimComponent.noiseNewSample.hint:How to update noise if not otherwise required by other changes (none, repeat, N-frames, Seconds)
NoiseStimComponent.noiseNewSample.inputType:choice
NoiseStimComponent.noiseNewSample.label:How to update noise sample
NoiseStimComponent.noiseNewSample.readOnly:False
NoiseStimComponent.noiseNewSample.staticUpdater:None
NoiseStimComponent.noiseNewSample.updates:constant
NoiseStimComponent.noiseNewSample.val:None
NoiseStimComponent.noiseNewSample.valType:str
NoiseStimComponent.noiseNewSampleWhen.default:1.0
NoiseStimComponent.noiseNewSampleWhen.allowedLabels:[]
NoiseStimComponent.noiseNewSampleWhen.allowedTypes:[]
NoiseStimComponent.noiseNewSampleWhen.allowedUpdates:[]
NoiseStimComponent.noiseNewSampleWhen.allowedVals:[]
NoiseStimComponent.noiseNewSampleWhen.canBePath:True
NoiseStimComponent.noiseNewSampleWhen.categ:Timing
NoiseStimComponent.noiseNewSampleWhen.codeWanted:False
NoiseStimComponent.noiseNewSampleWhen.direct:True
NoiseStimComponent.noiseNewSampleWhen.hint:How often to update noise (in frames or seconds) - can be a variable, ignored if any noise characteristic is updating on every frame
NoiseStimComponent.noiseNewSampleWhen.inputType:single
NoiseStimComponent.noiseNewSampleWhen.label:When to update noise sample
NoiseStimComponent.noiseNewSampleWhen.readOnly:False
NoiseStimComponent.noiseNewSampleWhen.staticUpdater:None
NoiseStimComponent.noiseNewSampleWhen.updates:constant
NoiseStimComponent.noiseNewSampleWhen.val:1
NoiseStimComponent.noiseNewSampleWhen.valType:num
NoiseStimComponent.noiseOri.default:0.0
NoiseStimComponent.noiseOri.allowedLabels:[]
NoiseStimComponent.noiseOri.allowedTypes:[]
NoiseStimComponent.noiseOri.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseOri.allowedVals:[]
NoiseStimComponent.noiseOri.canBePath:True
NoiseStimComponent.noiseOri.categ:Texture
NoiseStimComponent.noiseOri.codeWanted:False
NoiseStimComponent.noiseOri.direct:True
NoiseStimComponent.noiseOri.hint:Orientation of Gabor filter in degrees. Used to set the orientation of a Gabor filter to be applied to another noise sample with a different overall orientation. The best way to set the orientation of a Gabor noise sample is to leave this as 0 degree and use the overall orientation on the Advanced tab to vary the dominant orientation of the noise. If using this setting for orientation it is strongly recommended to set the interpolation method to 'linear' on the Advanced tab to avoid pixelization.
NoiseStimComponent.noiseOri.inputType:single
NoiseStimComponent.noiseOri.label:Orientation for Gabor filter
NoiseStimComponent.noiseOri.readOnly:False
NoiseStimComponent.noiseOri.staticUpdater:None
NoiseStimComponent.noiseOri.updates:constant
NoiseStimComponent.noiseOri.val:0.0
NoiseStimComponent.noiseOri.valType:num
NoiseStimComponent.noiseType.default:'Binary'
NoiseStimComponent.noiseType.allowedLabels:[]
NoiseStimComponent.noiseType.allowedTypes:[]
NoiseStimComponent.noiseType.allowedUpdates:[]
NoiseStimComponent.noiseType.allowedVals:['Binary', 'Normal', 'Uniform', 'Gabor', 'Isotropic', 'White', 'Filtered', 'Image']
NoiseStimComponent.noiseType.canBePath:True
NoiseStimComponent.noiseType.categ:Basic
NoiseStimComponent.noiseType.codeWanted:False
NoiseStimComponent.noiseType.direct:True
NoiseStimComponent.noiseType.hint:Type of noise (Binary, Normal, Gabor, Isotropic, White, Coloured, Filtered, Image)
NoiseStimComponent.noiseType.inputType:choice
NoiseStimComponent.noiseType.label:Type of noise
NoiseStimComponent.noiseType.readOnly:False
NoiseStimComponent.noiseType.staticUpdater:None
NoiseStimComponent.noiseType.updates:constant
NoiseStimComponent.noiseType.val:Binary
NoiseStimComponent.noiseType.valType:str
NoiseStimComponent.opacity.default:None
NoiseStimComponent.opacity.allowedLabels:[]
NoiseStimComponent.opacity.allowedTypes:[]
NoiseStimComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.opacity.allowedVals:[]
NoiseStimComponent.opacity.canBePath:True
NoiseStimComponent.opacity.categ:Appearance
NoiseStimComponent.opacity.codeWanted:False
NoiseStimComponent.opacity.direct:True
NoiseStimComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
NoiseStimComponent.opacity.inputType:single
NoiseStimComponent.opacity.label:Opacity
NoiseStimComponent.opacity.readOnly:False
NoiseStimComponent.opacity.staticUpdater:None
NoiseStimComponent.opacity.updates:constant
NoiseStimComponent.opacity.val:
NoiseStimComponent.opacity.valType:num
NoiseStimComponent.ori.default:0.0
NoiseStimComponent.ori.allowedLabels:[]
NoiseStimComponent.ori.allowedTypes:[]
NoiseStimComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.ori.allowedVals:[-360, 360]
NoiseStimComponent.ori.canBePath:True
NoiseStimComponent.ori.categ:Layout
NoiseStimComponent.ori.codeWanted:False
NoiseStimComponent.ori.direct:True
NoiseStimComponent.ori.hint:Orientation of this stimulus (in deg)
NoiseStimComponent.ori.inputType:spin
NoiseStimComponent.ori.label:Orientation
NoiseStimComponent.ori.readOnly:False
NoiseStimComponent.ori.staticUpdater:None
NoiseStimComponent.ori.updates:constant
NoiseStimComponent.ori.val:0
NoiseStimComponent.ori.valType:num
NoiseStimComponent.phase.default:0.0
NoiseStimComponent.phase.allowedLabels:[]
NoiseStimComponent.phase.allowedTypes:[]
NoiseStimComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.phase.allowedVals:[]
NoiseStimComponent.phase.canBePath:True
NoiseStimComponent.phase.categ:Texture
NoiseStimComponent.phase.codeWanted:False
NoiseStimComponent.phase.direct:True
NoiseStimComponent.phase.hint:Spatial positioning of the noise within the stimulus (wraps in range 0-1.0)
NoiseStimComponent.phase.inputType:single
NoiseStimComponent.phase.label:Phase (in cycles)
NoiseStimComponent.phase.readOnly:False
NoiseStimComponent.phase.staticUpdater:None
NoiseStimComponent.phase.updates:constant
NoiseStimComponent.phase.val:0.0
NoiseStimComponent.phase.valType:code
NoiseStimComponent.pos.default:(0, 0)
NoiseStimComponent.pos.allowedLabels:[]
NoiseStimComponent.pos.allowedTypes:[]
NoiseStimComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.pos.allowedVals:[]
NoiseStimComponent.pos.canBePath:True
NoiseStimComponent.pos.categ:Layout
NoiseStimComponent.pos.codeWanted:False
NoiseStimComponent.pos.direct:True
NoiseStimComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
NoiseStimComponent.pos.inputType:single
NoiseStimComponent.pos.label:Position [x,y]
NoiseStimComponent.pos.readOnly:False
NoiseStimComponent.pos.staticUpdater:None
NoiseStimComponent.pos.updates:constant
NoiseStimComponent.pos.val:(0, 0)
NoiseStimComponent.pos.valType:list
NoiseStimComponent.saveStartStop.default:True
NoiseStimComponent.saveStartStop.allowedLabels:[]
NoiseStimComponent.saveStartStop.allowedTypes:[]
NoiseStimComponent.saveStartStop.allowedUpdates:None
NoiseStimComponent.saveStartStop.allowedVals:[]
NoiseStimComponent.saveStartStop.canBePath:True
NoiseStimComponent.saveStartStop.categ:Data
NoiseStimComponent.saveStartStop.codeWanted:False
NoiseStimComponent.saveStartStop.direct:True
NoiseStimComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
NoiseStimComponent.saveStartStop.inputType:bool
NoiseStimComponent.saveStartStop.label:Save onset/offset times
NoiseStimComponent.saveStartStop.readOnly:False
NoiseStimComponent.saveStartStop.staticUpdater:None
NoiseStimComponent.saveStartStop.updates:None
NoiseStimComponent.saveStartStop.val:True
NoiseStimComponent.saveStartStop.valType:bool
NoiseStimComponent.sf.default:None
NoiseStimComponent.sf.allowedLabels:[]
NoiseStimComponent.sf.allowedTypes:[]
NoiseStimComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.sf.allowedVals:[]
NoiseStimComponent.sf.canBePath:True
NoiseStimComponent.sf.categ:Texture
NoiseStimComponent.sf.codeWanted:False
NoiseStimComponent.sf.direct:True
NoiseStimComponent.sf.hint:Final spatial frequency of image in 1 or 2 dimensions, e.g. 4 or [2,3]. Use None to set to 1 copy of noise per unit length of image or 1 copy of noise per image if units=pix. Set to 1/size (or [1/size,1/size]) where size is a number (or variable) equal to the size of the stimulus to get one copy of noise per image regardless of the units.
NoiseStimComponent.sf.inputType:single
NoiseStimComponent.sf.label:Final spatial frequency
NoiseStimComponent.sf.readOnly:False
NoiseStimComponent.sf.staticUpdater:None
NoiseStimComponent.sf.updates:constant
NoiseStimComponent.sf.val:None
NoiseStimComponent.sf.valType:num
NoiseStimComponent.size.default:(0.5, 0.5)
NoiseStimComponent.size.allowedLabels:[]
NoiseStimComponent.size.allowedTypes:[]
NoiseStimComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.size.allowedVals:[]
NoiseStimComponent.size.canBePath:True
NoiseStimComponent.size.categ:Layout
NoiseStimComponent.size.codeWanted:False
NoiseStimComponent.size.direct:True
NoiseStimComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
NoiseStimComponent.size.inputType:single
NoiseStimComponent.size.label:Size [w,h]
NoiseStimComponent.size.readOnly:False
NoiseStimComponent.size.staticUpdater:None
NoiseStimComponent.size.updates:constant
NoiseStimComponent.size.val:(0.5, 0.5)
NoiseStimComponent.size.valType:list
NoiseStimComponent.startEstim.default:
NoiseStimComponent.startEstim.allowedLabels:[]
NoiseStimComponent.startEstim.allowedTypes:[]
NoiseStimComponent.startEstim.allowedUpdates:None
NoiseStimComponent.startEstim.allowedVals:[]
NoiseStimComponent.startEstim.canBePath:True
NoiseStimComponent.startEstim.categ:Basic
NoiseStimComponent.startEstim.codeWanted:False
NoiseStimComponent.startEstim.direct:False
NoiseStimComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
NoiseStimComponent.startEstim.inputType:single
NoiseStimComponent.startEstim.label:Expected start (s)
NoiseStimComponent.startEstim.readOnly:False
NoiseStimComponent.startEstim.staticUpdater:None
NoiseStimComponent.startEstim.updates:None
NoiseStimComponent.startEstim.val:
NoiseStimComponent.startEstim.valType:code
NoiseStimComponent.startType.default:'time (s)'
NoiseStimComponent.startType.allowedLabels:[]
NoiseStimComponent.startType.allowedTypes:[]
NoiseStimComponent.startType.allowedUpdates:None
NoiseStimComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
NoiseStimComponent.startType.canBePath:True
NoiseStimComponent.startType.categ:Basic
NoiseStimComponent.startType.codeWanted:False
NoiseStimComponent.startType.direct:False
NoiseStimComponent.startType.hint:How do you want to define your start point?
NoiseStimComponent.startType.inputType:choice
NoiseStimComponent.startType.label:start type
NoiseStimComponent.startType.readOnly:False
NoiseStimComponent.startType.staticUpdater:None
NoiseStimComponent.startType.updates:None
NoiseStimComponent.startType.val:time (s)
NoiseStimComponent.startType.valType:str
NoiseStimComponent.startVal.default:0.0
NoiseStimComponent.startVal.allowedLabels:[]
NoiseStimComponent.startVal.allowedTypes:[]
NoiseStimComponent.startVal.allowedUpdates:None
NoiseStimComponent.startVal.allowedVals:[]
NoiseStimComponent.startVal.canBePath:True
NoiseStimComponent.startVal.categ:Basic
NoiseStimComponent.startVal.codeWanted:False
NoiseStimComponent.startVal.direct:True
NoiseStimComponent.startVal.hint:When does the component start?
NoiseStimComponent.startVal.inputType:single
NoiseStimComponent.startVal.label:Start
NoiseStimComponent.startVal.readOnly:False
NoiseStimComponent.startVal.staticUpdater:None
NoiseStimComponent.startVal.updates:None
NoiseStimComponent.startVal.val:0.0
NoiseStimComponent.startVal.valType:code
NoiseStimComponent.stopType.default:'duration (s)'
NoiseStimComponent.stopType.allowedLabels:[]
NoiseStimComponent.stopType.allowedTypes:[]
NoiseStimComponent.stopType.allowedUpdates:None
NoiseStimComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
NoiseStimComponent.stopType.canBePath:True
NoiseStimComponent.stopType.categ:Basic
NoiseStimComponent.stopType.codeWanted:False
NoiseStimComponent.stopType.direct:False
NoiseStimComponent.stopType.hint:How do you want to define your end point?
NoiseStimComponent.stopType.inputType:choice
NoiseStimComponent.stopType.label:stop type
NoiseStimComponent.stopType.readOnly:False
NoiseStimComponent.stopType.staticUpdater:None
NoiseStimComponent.stopType.updates:None
NoiseStimComponent.stopType.val:duration (s)
NoiseStimComponent.stopType.valType:str
NoiseStimComponent.stopVal.default:1.0
NoiseStimComponent.stopVal.allowedLabels:[]
NoiseStimComponent.stopVal.allowedTypes:[]
NoiseStimComponent.stopVal.allowedUpdates:[]
NoiseStimComponent.stopVal.allowedVals:[]
NoiseStimComponent.stopVal.canBePath:True
NoiseStimComponent.stopVal.categ:Basic
NoiseStimComponent.stopVal.codeWanted:False
NoiseStimComponent.stopVal.direct:True
NoiseStimComponent.stopVal.hint:When does the component end? (blank is endless)
NoiseStimComponent.stopVal.inputType:single
NoiseStimComponent.stopVal.label:Stop
NoiseStimComponent.stopVal.readOnly:False
NoiseStimComponent.stopVal.staticUpdater:None
NoiseStimComponent.stopVal.updates:constant
NoiseStimComponent.stopVal.val:1.0
NoiseStimComponent.stopVal.valType:code
NoiseStimComponent.syncScreenRefresh.default:True
NoiseStimComponent.syncScreenRefresh.allowedLabels:[]
NoiseStimComponent.syncScreenRefresh.allowedTypes:[]
NoiseStimComponent.syncScreenRefresh.allowedUpdates:None
NoiseStimComponent.syncScreenRefresh.allowedVals:[]
NoiseStimComponent.syncScreenRefresh.canBePath:True
NoiseStimComponent.syncScreenRefresh.categ:Data
NoiseStimComponent.syncScreenRefresh.codeWanted:False
NoiseStimComponent.syncScreenRefresh.direct:True
NoiseStimComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
NoiseStimComponent.syncScreenRefresh.inputType:bool
NoiseStimComponent.syncScreenRefresh.label:Sync timing with screen refresh
NoiseStimComponent.syncScreenRefresh.readOnly:True
NoiseStimComponent.syncScreenRefresh.staticUpdater:None
NoiseStimComponent.syncScreenRefresh.updates:None
NoiseStimComponent.syncScreenRefresh.val:True
NoiseStimComponent.syncScreenRefresh.valType:bool
NoiseStimComponent.texture resolution.default:128
NoiseStimComponent.texture resolution.allowedLabels:[]
NoiseStimComponent.texture resolution.allowedTypes:[]
NoiseStimComponent.texture resolution.allowedUpdates:[]
NoiseStimComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512', '1024']
NoiseStimComponent.texture resolution.canBePath:True
NoiseStimComponent.texture resolution.categ:Texture
NoiseStimComponent.texture resolution.codeWanted:False
NoiseStimComponent.texture resolution.direct:True
NoiseStimComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
NoiseStimComponent.texture resolution.inputType:single
NoiseStimComponent.texture resolution.label:Texture resolution
NoiseStimComponent.texture resolution.readOnly:False
NoiseStimComponent.texture resolution.staticUpdater:None
NoiseStimComponent.texture resolution.updates:constant
NoiseStimComponent.texture resolution.val:128
NoiseStimComponent.texture resolution.valType:int
NoiseStimComponent.units.default:'from exp settings'
NoiseStimComponent.units.allowedLabels:[]
NoiseStimComponent.units.allowedTypes:[]
NoiseStimComponent.units.allowedUpdates:None
NoiseStimComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
NoiseStimComponent.units.canBePath:True
NoiseStimComponent.units.categ:Layout
NoiseStimComponent.units.codeWanted:False
NoiseStimComponent.units.direct:True
NoiseStimComponent.units.hint:Units of dimensions for this stimulus
NoiseStimComponent.units.inputType:choice
NoiseStimComponent.units.label:Spatial Units
NoiseStimComponent.units.readOnly:False
NoiseStimComponent.units.staticUpdater:None
NoiseStimComponent.units.updates:None
NoiseStimComponent.units.val:from exp settings
NoiseStimComponent.units.valType:str
ParallelOutComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'startData', 'stopData', 'address', 'register']
ParallelOutComponent.address.default:'0x0378'
ParallelOutComponent.address.allowedLabels:[]
ParallelOutComponent.address.allowedTypes:[]
ParallelOutComponent.address.allowedUpdates:None
ParallelOutComponent.address.allowedVals:['0x0378', '0x03BC', '/dev/parport0', '/dev/parport1', 'LabJack U3', 'USB2TTL8']
ParallelOutComponent.address.canBePath:True
ParallelOutComponent.address.categ:Hardware
ParallelOutComponent.address.codeWanted:False
ParallelOutComponent.address.direct:True
ParallelOutComponent.address.hint:Parallel port to be used (you can change these options in preferences>general)
ParallelOutComponent.address.inputType:choice
ParallelOutComponent.address.label:Port address
ParallelOutComponent.address.readOnly:False
ParallelOutComponent.address.staticUpdater:None
ParallelOutComponent.address.updates:None
ParallelOutComponent.address.val:0x0378
ParallelOutComponent.address.valType:str
ParallelOutComponent.disabled.default:False
ParallelOutComponent.disabled.allowedLabels:[]
ParallelOutComponent.disabled.allowedTypes:[]
ParallelOutComponent.disabled.allowedUpdates:None
ParallelOutComponent.disabled.allowedVals:[]
ParallelOutComponent.disabled.canBePath:True
ParallelOutComponent.disabled.categ:Testing
ParallelOutComponent.disabled.codeWanted:False
ParallelOutComponent.disabled.direct:False
ParallelOutComponent.disabled.hint:Disable this component
ParallelOutComponent.disabled.inputType:bool
ParallelOutComponent.disabled.label:Disable component
ParallelOutComponent.disabled.readOnly:False
ParallelOutComponent.disabled.staticUpdater:None
ParallelOutComponent.disabled.updates:None
ParallelOutComponent.disabled.val:False
ParallelOutComponent.disabled.valType:bool
ParallelOutComponent.durationEstim.default:
ParallelOutComponent.durationEstim.allowedLabels:[]
ParallelOutComponent.durationEstim.allowedTypes:[]
ParallelOutComponent.durationEstim.allowedUpdates:None
ParallelOutComponent.durationEstim.allowedVals:[]
ParallelOutComponent.durationEstim.canBePath:True
ParallelOutComponent.durationEstim.categ:Basic
ParallelOutComponent.durationEstim.codeWanted:False
ParallelOutComponent.durationEstim.direct:False
ParallelOutComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ParallelOutComponent.durationEstim.inputType:single
ParallelOutComponent.durationEstim.label:Expected duration (s)
ParallelOutComponent.durationEstim.readOnly:False
ParallelOutComponent.durationEstim.staticUpdater:None
ParallelOutComponent.durationEstim.updates:None
ParallelOutComponent.durationEstim.val:
ParallelOutComponent.durationEstim.valType:code
ParallelOutComponent.name.default:p_port
ParallelOutComponent.name.allowedLabels:[]
ParallelOutComponent.name.allowedTypes:[]
ParallelOutComponent.name.allowedUpdates:None
ParallelOutComponent.name.allowedVals:[]
ParallelOutComponent.name.canBePath:True
ParallelOutComponent.name.categ:Basic
ParallelOutComponent.name.codeWanted:False
ParallelOutComponent.name.direct:True
ParallelOutComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
ParallelOutComponent.name.inputType:single
ParallelOutComponent.name.label:Name
ParallelOutComponent.name.readOnly:False
ParallelOutComponent.name.staticUpdater:None
ParallelOutComponent.name.val:p_port
ParallelOutComponent.name.valType:code
ParallelOutComponent.register.default:'EIO'
ParallelOutComponent.register.allowedLabels:[]
ParallelOutComponent.register.allowedTypes:[]
ParallelOutComponent.register.allowedUpdates:None
ParallelOutComponent.register.allowedVals:['EIO', 'FIO']
ParallelOutComponent.register.canBePath:True
ParallelOutComponent.register.categ:Hardware
ParallelOutComponent.register.codeWanted:False
ParallelOutComponent.register.direct:True
ParallelOutComponent.register.hint:U3 Register to write byte to
ParallelOutComponent.register.inputType:choice
ParallelOutComponent.register.label:U3 Register
ParallelOutComponent.register.readOnly:False
ParallelOutComponent.register.staticUpdater:None
ParallelOutComponent.register.updates:None
ParallelOutComponent.register.val:EIO
ParallelOutComponent.register.valType:str
ParallelOutComponent.saveStartStop.default:True
ParallelOutComponent.saveStartStop.allowedLabels:[]
ParallelOutComponent.saveStartStop.allowedTypes:[]
ParallelOutComponent.saveStartStop.allowedUpdates:None
ParallelOutComponent.saveStartStop.allowedVals:[]
ParallelOutComponent.saveStartStop.canBePath:True
ParallelOutComponent.saveStartStop.categ:Data
ParallelOutComponent.saveStartStop.codeWanted:False
ParallelOutComponent.saveStartStop.direct:True
ParallelOutComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
ParallelOutComponent.saveStartStop.inputType:bool
ParallelOutComponent.saveStartStop.label:Save onset/offset times
ParallelOutComponent.saveStartStop.readOnly:False
ParallelOutComponent.saveStartStop.staticUpdater:None
ParallelOutComponent.saveStartStop.updates:None
ParallelOutComponent.saveStartStop.val:True
ParallelOutComponent.saveStartStop.valType:bool
ParallelOutComponent.startData.default:1
ParallelOutComponent.startData.allowedLabels:[]
ParallelOutComponent.startData.allowedTypes:[]
ParallelOutComponent.startData.allowedUpdates:None
ParallelOutComponent.startData.allowedVals:[]
ParallelOutComponent.startData.canBePath:True
ParallelOutComponent.startData.categ:Data
ParallelOutComponent.startData.codeWanted:False
ParallelOutComponent.startData.direct:True
ParallelOutComponent.startData.hint:Data to be sent at 'start'
ParallelOutComponent.startData.inputType:single
ParallelOutComponent.startData.label:Start data
ParallelOutComponent.startData.readOnly:False
ParallelOutComponent.startData.staticUpdater:None
ParallelOutComponent.startData.updates:None
ParallelOutComponent.startData.val:1
ParallelOutComponent.startData.valType:code
ParallelOutComponent.startEstim.default:
ParallelOutComponent.startEstim.allowedLabels:[]
ParallelOutComponent.startEstim.allowedTypes:[]
ParallelOutComponent.startEstim.allowedUpdates:None
ParallelOutComponent.startEstim.allowedVals:[]
ParallelOutComponent.startEstim.canBePath:True
ParallelOutComponent.startEstim.categ:Basic
ParallelOutComponent.startEstim.codeWanted:False
ParallelOutComponent.startEstim.direct:False
ParallelOutComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ParallelOutComponent.startEstim.inputType:single
ParallelOutComponent.startEstim.label:Expected start (s)
ParallelOutComponent.startEstim.readOnly:False
ParallelOutComponent.startEstim.staticUpdater:None
ParallelOutComponent.startEstim.updates:None
ParallelOutComponent.startEstim.val:
ParallelOutComponent.startEstim.valType:code
ParallelOutComponent.startType.default:'time (s)'
ParallelOutComponent.startType.allowedLabels:[]
ParallelOutComponent.startType.allowedTypes:[]
ParallelOutComponent.startType.allowedUpdates:None
ParallelOutComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ParallelOutComponent.startType.canBePath:True
ParallelOutComponent.startType.categ:Basic
ParallelOutComponent.startType.codeWanted:False
ParallelOutComponent.startType.direct:False
ParallelOutComponent.startType.hint:How do you want to define your start point?
ParallelOutComponent.startType.inputType:choice
ParallelOutComponent.startType.label:start type
ParallelOutComponent.startType.readOnly:False
ParallelOutComponent.startType.staticUpdater:None
ParallelOutComponent.startType.updates:None
ParallelOutComponent.startType.val:time (s)
ParallelOutComponent.startType.valType:str
ParallelOutComponent.startVal.default:0.0
ParallelOutComponent.startVal.allowedLabels:[]
ParallelOutComponent.startVal.allowedTypes:[]
ParallelOutComponent.startVal.allowedUpdates:None
ParallelOutComponent.startVal.allowedVals:[]
ParallelOutComponent.startVal.canBePath:True
ParallelOutComponent.startVal.categ:Basic
ParallelOutComponent.startVal.codeWanted:False
ParallelOutComponent.startVal.direct:True
ParallelOutComponent.startVal.hint:When does the component start?
ParallelOutComponent.startVal.inputType:single
ParallelOutComponent.startVal.label:Start
ParallelOutComponent.startVal.readOnly:False
ParallelOutComponent.startVal.staticUpdater:None
ParallelOutComponent.startVal.updates:None
ParallelOutComponent.startVal.val:0.0
ParallelOutComponent.startVal.valType:code
ParallelOutComponent.stopData.default:0
ParallelOutComponent.stopData.allowedLabels:[]
ParallelOutComponent.stopData.allowedTypes:[]
ParallelOutComponent.stopData.allowedUpdates:None
ParallelOutComponent.stopData.allowedVals:[]
ParallelOutComponent.stopData.canBePath:True
ParallelOutComponent.stopData.categ:Data
ParallelOutComponent.stopData.codeWanted:False
ParallelOutComponent.stopData.direct:True
ParallelOutComponent.stopData.hint:Data to be sent at 'end'
ParallelOutComponent.stopData.inputType:single
ParallelOutComponent.stopData.label:Stop data
ParallelOutComponent.stopData.readOnly:False
ParallelOutComponent.stopData.staticUpdater:None
ParallelOutComponent.stopData.updates:None
ParallelOutComponent.stopData.val:0
ParallelOutComponent.stopData.valType:code
ParallelOutComponent.stopType.default:'duration (s)'
ParallelOutComponent.stopType.allowedLabels:[]
ParallelOutComponent.stopType.allowedTypes:[]
ParallelOutComponent.stopType.allowedUpdates:None
ParallelOutComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ParallelOutComponent.stopType.canBePath:True
ParallelOutComponent.stopType.categ:Basic
ParallelOutComponent.stopType.codeWanted:False
ParallelOutComponent.stopType.direct:False
ParallelOutComponent.stopType.hint:How do you want to define your end point?
ParallelOutComponent.stopType.inputType:choice
ParallelOutComponent.stopType.label:stop type
ParallelOutComponent.stopType.readOnly:False
ParallelOutComponent.stopType.staticUpdater:None
ParallelOutComponent.stopType.updates:None
ParallelOutComponent.stopType.val:duration (s)
ParallelOutComponent.stopType.valType:str
ParallelOutComponent.stopVal.default:1.0
ParallelOutComponent.stopVal.allowedLabels:[]
ParallelOutComponent.stopVal.allowedTypes:[]
ParallelOutComponent.stopVal.allowedUpdates:[]
ParallelOutComponent.stopVal.allowedVals:[]
ParallelOutComponent.stopVal.canBePath:True
ParallelOutComponent.stopVal.categ:Basic
ParallelOutComponent.stopVal.codeWanted:False
ParallelOutComponent.stopVal.direct:True
ParallelOutComponent.stopVal.hint:When does the component end? (blank is endless)
ParallelOutComponent.stopVal.inputType:single
ParallelOutComponent.stopVal.label:Stop
ParallelOutComponent.stopVal.readOnly:False
ParallelOutComponent.stopVal.staticUpdater:None
ParallelOutComponent.stopVal.updates:constant
ParallelOutComponent.stopVal.val:1.0
ParallelOutComponent.stopVal.valType:code
ParallelOutComponent.syncScreen.default:True
ParallelOutComponent.syncScreen.allowedLabels:[]
ParallelOutComponent.syncScreen.allowedTypes:[]
ParallelOutComponent.syncScreen.allowedUpdates:[]
ParallelOutComponent.syncScreen.allowedVals:[True, False]
ParallelOutComponent.syncScreen.canBePath:True
ParallelOutComponent.syncScreen.categ:Data
ParallelOutComponent.syncScreen.codeWanted:False
ParallelOutComponent.syncScreen.direct:True
ParallelOutComponent.syncScreen.hint:If the parallel port data relates to visual stimuli then sync its pulse to the screen refresh
ParallelOutComponent.syncScreen.inputType:bool
ParallelOutComponent.syncScreen.label:Sync to screen
ParallelOutComponent.syncScreen.readOnly:False
ParallelOutComponent.syncScreen.staticUpdater:None
ParallelOutComponent.syncScreen.updates:constant
ParallelOutComponent.syncScreen.val:True
ParallelOutComponent.syncScreen.valType:bool
ParallelOutComponent.syncScreenRefresh.default:False
ParallelOutComponent.syncScreenRefresh.allowedLabels:[]
ParallelOutComponent.syncScreenRefresh.allowedTypes:[]
ParallelOutComponent.syncScreenRefresh.allowedUpdates:None
ParallelOutComponent.syncScreenRefresh.allowedVals:[]
ParallelOutComponent.syncScreenRefresh.canBePath:True
ParallelOutComponent.syncScreenRefresh.categ:Data
ParallelOutComponent.syncScreenRefresh.codeWanted:False
ParallelOutComponent.syncScreenRefresh.direct:True
ParallelOutComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
ParallelOutComponent.syncScreenRefresh.inputType:bool
ParallelOutComponent.syncScreenRefresh.label:Sync timing with screen refresh
ParallelOutComponent.syncScreenRefresh.readOnly:False
ParallelOutComponent.syncScreenRefresh.staticUpdater:None
ParallelOutComponent.syncScreenRefresh.updates:None
ParallelOutComponent.syncScreenRefresh.val:False
ParallelOutComponent.syncScreenRefresh.valType:bool
PatchComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori']
PatchComponent.borderColor.default:''
PatchComponent.borderColor.allowedLabels:[]
PatchComponent.borderColor.allowedTypes:[]
PatchComponent.borderColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.borderColor.allowedVals:[]
PatchComponent.borderColor.canBePath:True
PatchComponent.borderColor.categ:Appearance
PatchComponent.borderColor.codeWanted:False
PatchComponent.borderColor.direct:True
PatchComponent.borderColor.hint:Color of this stimulus (e.g. $[1,1,0], red )
PatchComponent.borderColor.inputType:color
PatchComponent.borderColor.label:Border Color
PatchComponent.borderColor.readOnly:False
PatchComponent.borderColor.staticUpdater:None
PatchComponent.borderColor.updates:constant
PatchComponent.borderColor.val:
PatchComponent.borderColor.valType:color
PatchComponent.color.default:[1,1,1]
PatchComponent.color.allowedLabels:[]
PatchComponent.color.allowedTypes:[]
PatchComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.color.allowedVals:[]
PatchComponent.color.canBePath:True
PatchComponent.color.categ:Appearance
PatchComponent.color.codeWanted:True
PatchComponent.color.direct:True
PatchComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
PatchComponent.color.inputType:color
PatchComponent.color.label:Foreground Color
PatchComponent.color.readOnly:False
PatchComponent.color.staticUpdater:None
PatchComponent.color.updates:constant
PatchComponent.color.val:$[1,1,1]
PatchComponent.color.valType:color
PatchComponent.colorSpace.default:'rgb'
PatchComponent.colorSpace.allowedLabels:[]
PatchComponent.colorSpace.allowedTypes:[]
PatchComponent.colorSpace.allowedUpdates:None
PatchComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PatchComponent.colorSpace.canBePath:True
PatchComponent.colorSpace.categ:Appearance
PatchComponent.colorSpace.codeWanted:False
PatchComponent.colorSpace.direct:True
PatchComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
PatchComponent.colorSpace.inputType:choice
PatchComponent.colorSpace.label:Color Space
PatchComponent.colorSpace.readOnly:False
PatchComponent.colorSpace.staticUpdater:None
PatchComponent.colorSpace.updates:constant
PatchComponent.colorSpace.val:rgb
PatchComponent.colorSpace.valType:str
PatchComponent.contrast.default:1.0
PatchComponent.contrast.allowedLabels:[]
PatchComponent.contrast.allowedTypes:[]
PatchComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.contrast.allowedVals:[]
PatchComponent.contrast.canBePath:True
PatchComponent.contrast.categ:Appearance
PatchComponent.contrast.codeWanted:False
PatchComponent.contrast.direct:True
PatchComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
PatchComponent.contrast.inputType:single
PatchComponent.contrast.label:Contrast
PatchComponent.contrast.readOnly:False
PatchComponent.contrast.staticUpdater:None
PatchComponent.contrast.updates:constant
PatchComponent.contrast.val:1
PatchComponent.contrast.valType:num
PatchComponent.disabled.default:False
PatchComponent.disabled.allowedLabels:[]
PatchComponent.disabled.allowedTypes:[]
PatchComponent.disabled.allowedUpdates:None
PatchComponent.disabled.allowedVals:[]
PatchComponent.disabled.canBePath:True
PatchComponent.disabled.categ:Testing
PatchComponent.disabled.codeWanted:False
PatchComponent.disabled.direct:False
PatchComponent.disabled.hint:Disable this component
PatchComponent.disabled.inputType:bool
PatchComponent.disabled.label:Disable component
PatchComponent.disabled.readOnly:False
PatchComponent.disabled.staticUpdater:None
PatchComponent.disabled.updates:None
PatchComponent.disabled.val:False
PatchComponent.disabled.valType:bool
PatchComponent.durationEstim.default:
PatchComponent.durationEstim.allowedLabels:[]
PatchComponent.durationEstim.allowedTypes:[]
PatchComponent.durationEstim.allowedUpdates:None
PatchComponent.durationEstim.allowedVals:[]
PatchComponent.durationEstim.canBePath:True
PatchComponent.durationEstim.categ:Basic
PatchComponent.durationEstim.codeWanted:False
PatchComponent.durationEstim.direct:False
PatchComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PatchComponent.durationEstim.inputType:single
PatchComponent.durationEstim.label:Expected duration (s)
PatchComponent.durationEstim.readOnly:False
PatchComponent.durationEstim.staticUpdater:None
PatchComponent.durationEstim.updates:None
PatchComponent.durationEstim.val:
PatchComponent.durationEstim.valType:code
PatchComponent.fillColor.default:''
PatchComponent.fillColor.allowedLabels:[]
PatchComponent.fillColor.allowedTypes:[]
PatchComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.fillColor.allowedVals:[]
PatchComponent.fillColor.canBePath:True
PatchComponent.fillColor.categ:Appearance
PatchComponent.fillColor.codeWanted:False
PatchComponent.fillColor.direct:True
PatchComponent.fillColor.hint:Fill color of this stimulus (e.g. $[1,1,0], red )
PatchComponent.fillColor.inputType:color
PatchComponent.fillColor.label:Fill Color
PatchComponent.fillColor.readOnly:False
PatchComponent.fillColor.staticUpdater:None
PatchComponent.fillColor.updates:constant
PatchComponent.fillColor.val:
PatchComponent.fillColor.valType:color
PatchComponent.image.default:'sin'
PatchComponent.image.allowedLabels:[]
PatchComponent.image.allowedTypes:[]
PatchComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.image.allowedVals:[]
PatchComponent.image.canBePath:True
PatchComponent.image.categ:Basic
PatchComponent.image.codeWanted:False
PatchComponent.image.direct:True
PatchComponent.image.hint:The image to be displayed - 'sin','sqr'... or a filename (including path)
PatchComponent.image.inputType:file
PatchComponent.image.label:Image/tex
PatchComponent.image.readOnly:False
PatchComponent.image.staticUpdater:None
PatchComponent.image.updates:constant
PatchComponent.image.val:sin
PatchComponent.image.valType:file
PatchComponent.interpolate.default:'linear'
PatchComponent.interpolate.allowedLabels:[]
PatchComponent.interpolate.allowedTypes:[]
PatchComponent.interpolate.allowedUpdates:[]
PatchComponent.interpolate.allowedVals:['linear', 'nearest']
PatchComponent.interpolate.canBePath:True
PatchComponent.interpolate.categ:Texture
PatchComponent.interpolate.codeWanted:False
PatchComponent.interpolate.direct:True
PatchComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PatchComponent.interpolate.inputType:choice
PatchComponent.interpolate.label:Interpolate
PatchComponent.interpolate.readOnly:False
PatchComponent.interpolate.staticUpdater:None
PatchComponent.interpolate.updates:constant
PatchComponent.interpolate.val:linear
PatchComponent.interpolate.valType:str
PatchComponent.mask.default:'None'
PatchComponent.mask.allowedLabels:[]
PatchComponent.mask.allowedTypes:[]
PatchComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.mask.allowedVals:[]
PatchComponent.mask.canBePath:True
PatchComponent.mask.categ:Texture
PatchComponent.mask.codeWanted:False
PatchComponent.mask.direct:True
PatchComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
PatchComponent.mask.inputType:single
PatchComponent.mask.label:Mask
PatchComponent.mask.readOnly:False
PatchComponent.mask.staticUpdater:None
PatchComponent.mask.updates:constant
PatchComponent.mask.val:None
PatchComponent.mask.valType:str
PatchComponent.name.default:patch
PatchComponent.name.allowedLabels:[]
PatchComponent.name.allowedTypes:[]
PatchComponent.name.allowedUpdates:None
PatchComponent.name.allowedVals:[]
PatchComponent.name.canBePath:True
PatchComponent.name.categ:Basic
PatchComponent.name.codeWanted:False
PatchComponent.name.direct:True
PatchComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
PatchComponent.name.inputType:single
PatchComponent.name.label:Name
PatchComponent.name.readOnly:False
PatchComponent.name.staticUpdater:None
PatchComponent.name.val:patch
PatchComponent.name.valType:code
PatchComponent.opacity.default:None
PatchComponent.opacity.allowedLabels:[]
PatchComponent.opacity.allowedTypes:[]
PatchComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.opacity.allowedVals:[]
PatchComponent.opacity.canBePath:True
PatchComponent.opacity.categ:Appearance
PatchComponent.opacity.codeWanted:False
PatchComponent.opacity.direct:True
PatchComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
PatchComponent.opacity.inputType:single
PatchComponent.opacity.label:Opacity
PatchComponent.opacity.readOnly:False
PatchComponent.opacity.staticUpdater:None
PatchComponent.opacity.updates:constant
PatchComponent.opacity.val:
PatchComponent.opacity.valType:num
PatchComponent.ori.default:0.0
PatchComponent.ori.allowedLabels:[]
PatchComponent.ori.allowedTypes:[]
PatchComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.ori.allowedVals:[-360, 360]
PatchComponent.ori.canBePath:True
PatchComponent.ori.categ:Layout
PatchComponent.ori.codeWanted:False
PatchComponent.ori.direct:True
PatchComponent.ori.hint:Orientation of this stimulus (in deg)
PatchComponent.ori.inputType:spin
PatchComponent.ori.label:Orientation
PatchComponent.ori.readOnly:False
PatchComponent.ori.staticUpdater:None
PatchComponent.ori.updates:constant
PatchComponent.ori.val:0
PatchComponent.ori.valType:num
PatchComponent.phase.default:0.0
PatchComponent.phase.allowedLabels:[]
PatchComponent.phase.allowedTypes:[]
PatchComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.phase.allowedVals:[]
PatchComponent.phase.canBePath:True
PatchComponent.phase.categ:Texture
PatchComponent.phase.codeWanted:False
PatchComponent.phase.direct:True
PatchComponent.phase.hint:Spatial positioning of the image on the patch (in range 0-1.0)
PatchComponent.phase.inputType:single
PatchComponent.phase.label:Phase (in cycles)
PatchComponent.phase.readOnly:False
PatchComponent.phase.staticUpdater:None
PatchComponent.phase.updates:constant
PatchComponent.phase.val:0.0
PatchComponent.phase.valType:num
PatchComponent.pos.default:(0, 0)
PatchComponent.pos.allowedLabels:[]
PatchComponent.pos.allowedTypes:[]
PatchComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.pos.allowedVals:[]
PatchComponent.pos.canBePath:True
PatchComponent.pos.categ:Layout
PatchComponent.pos.codeWanted:False
PatchComponent.pos.direct:True
PatchComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PatchComponent.pos.inputType:single
PatchComponent.pos.label:Position [x,y]
PatchComponent.pos.readOnly:False
PatchComponent.pos.staticUpdater:None
PatchComponent.pos.updates:constant
PatchComponent.pos.val:(0, 0)
PatchComponent.pos.valType:list
PatchComponent.saveStartStop.default:True
PatchComponent.saveStartStop.allowedLabels:[]
PatchComponent.saveStartStop.allowedTypes:[]
PatchComponent.saveStartStop.allowedUpdates:None
PatchComponent.saveStartStop.allowedVals:[]
PatchComponent.saveStartStop.canBePath:True
PatchComponent.saveStartStop.categ:Data
PatchComponent.saveStartStop.codeWanted:False
PatchComponent.saveStartStop.direct:True
PatchComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
PatchComponent.saveStartStop.inputType:bool
PatchComponent.saveStartStop.label:Save onset/offset times
PatchComponent.saveStartStop.readOnly:False
PatchComponent.saveStartStop.staticUpdater:None
PatchComponent.saveStartStop.updates:None
PatchComponent.saveStartStop.val:True
PatchComponent.saveStartStop.valType:bool
PatchComponent.sf.default:None
PatchComponent.sf.allowedLabels:[]
PatchComponent.sf.allowedTypes:[]
PatchComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.sf.allowedVals:[]
PatchComponent.sf.canBePath:True
PatchComponent.sf.categ:Texture
PatchComponent.sf.codeWanted:False
PatchComponent.sf.direct:True
PatchComponent.sf.hint:Spatial frequency of image repeats across the patch, e.g. 4 or [2,3]
PatchComponent.sf.inputType:single
PatchComponent.sf.label:Spatial frequency
PatchComponent.sf.readOnly:False
PatchComponent.sf.staticUpdater:None
PatchComponent.sf.updates:constant
PatchComponent.sf.val:None
PatchComponent.sf.valType:list
PatchComponent.size.default:(0.5, 0.5)
PatchComponent.size.allowedLabels:[]
PatchComponent.size.allowedTypes:[]
PatchComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.size.allowedVals:[]
PatchComponent.size.canBePath:True
PatchComponent.size.categ:Layout
PatchComponent.size.codeWanted:False
PatchComponent.size.direct:True
PatchComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
PatchComponent.size.inputType:single
PatchComponent.size.label:Size [w,h]
PatchComponent.size.readOnly:False
PatchComponent.size.staticUpdater:None
PatchComponent.size.updates:constant
PatchComponent.size.val:(0.5, 0.5)
PatchComponent.size.valType:list
PatchComponent.startEstim.default:
PatchComponent.startEstim.allowedLabels:[]
PatchComponent.startEstim.allowedTypes:[]
PatchComponent.startEstim.allowedUpdates:None
PatchComponent.startEstim.allowedVals:[]
PatchComponent.startEstim.canBePath:True
PatchComponent.startEstim.categ:Basic
PatchComponent.startEstim.codeWanted:False
PatchComponent.startEstim.direct:False
PatchComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PatchComponent.startEstim.inputType:single
PatchComponent.startEstim.label:Expected start (s)
PatchComponent.startEstim.readOnly:False
PatchComponent.startEstim.staticUpdater:None
PatchComponent.startEstim.updates:None
PatchComponent.startEstim.val:
PatchComponent.startEstim.valType:code
PatchComponent.startType.default:'time (s)'
PatchComponent.startType.allowedLabels:[]
PatchComponent.startType.allowedTypes:[]
PatchComponent.startType.allowedUpdates:None
PatchComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PatchComponent.startType.canBePath:True
PatchComponent.startType.categ:Basic
PatchComponent.startType.codeWanted:False
PatchComponent.startType.direct:False
PatchComponent.startType.hint:How do you want to define your start point?
PatchComponent.startType.inputType:choice
PatchComponent.startType.label:start type
PatchComponent.startType.readOnly:False
PatchComponent.startType.staticUpdater:None
PatchComponent.startType.updates:None
PatchComponent.startType.val:time (s)
PatchComponent.startType.valType:str
PatchComponent.startVal.default:0.0
PatchComponent.startVal.allowedLabels:[]
PatchComponent.startVal.allowedTypes:[]
PatchComponent.startVal.allowedUpdates:None
PatchComponent.startVal.allowedVals:[]
PatchComponent.startVal.canBePath:True
PatchComponent.startVal.categ:Basic
PatchComponent.startVal.codeWanted:False
PatchComponent.startVal.direct:True
PatchComponent.startVal.hint:When does the component start?
PatchComponent.startVal.inputType:single
PatchComponent.startVal.label:Start
PatchComponent.startVal.readOnly:False
PatchComponent.startVal.staticUpdater:None
PatchComponent.startVal.updates:None
PatchComponent.startVal.val:0.0
PatchComponent.startVal.valType:code
PatchComponent.stopType.default:'duration (s)'
PatchComponent.stopType.allowedLabels:[]
PatchComponent.stopType.allowedTypes:[]
PatchComponent.stopType.allowedUpdates:None
PatchComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PatchComponent.stopType.canBePath:True
PatchComponent.stopType.categ:Basic
PatchComponent.stopType.codeWanted:False
PatchComponent.stopType.direct:False
PatchComponent.stopType.hint:How do you want to define your end point?
PatchComponent.stopType.inputType:choice
PatchComponent.stopType.label:stop type
PatchComponent.stopType.readOnly:False
PatchComponent.stopType.staticUpdater:None
PatchComponent.stopType.updates:None
PatchComponent.stopType.val:duration (s)
PatchComponent.stopType.valType:str
PatchComponent.stopVal.default:1.0
PatchComponent.stopVal.allowedLabels:[]
PatchComponent.stopVal.allowedTypes:[]
PatchComponent.stopVal.allowedUpdates:[]
PatchComponent.stopVal.allowedVals:[]
PatchComponent.stopVal.canBePath:True
PatchComponent.stopVal.categ:Basic
PatchComponent.stopVal.codeWanted:False
PatchComponent.stopVal.direct:True
PatchComponent.stopVal.hint:When does the component end? (blank is endless)
PatchComponent.stopVal.inputType:single
PatchComponent.stopVal.label:Stop
PatchComponent.stopVal.readOnly:False
PatchComponent.stopVal.staticUpdater:None
PatchComponent.stopVal.updates:constant
PatchComponent.stopVal.val:1.0
PatchComponent.stopVal.valType:code
PatchComponent.syncScreenRefresh.default:True
PatchComponent.syncScreenRefresh.allowedLabels:[]
PatchComponent.syncScreenRefresh.allowedTypes:[]
PatchComponent.syncScreenRefresh.allowedUpdates:None
PatchComponent.syncScreenRefresh.allowedVals:[]
PatchComponent.syncScreenRefresh.canBePath:True
PatchComponent.syncScreenRefresh.categ:Data
PatchComponent.syncScreenRefresh.codeWanted:False
PatchComponent.syncScreenRefresh.direct:True
PatchComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
PatchComponent.syncScreenRefresh.inputType:bool
PatchComponent.syncScreenRefresh.label:Sync timing with screen refresh
PatchComponent.syncScreenRefresh.readOnly:True
PatchComponent.syncScreenRefresh.staticUpdater:None
PatchComponent.syncScreenRefresh.updates:None
PatchComponent.syncScreenRefresh.val:True
PatchComponent.syncScreenRefresh.valType:bool
PatchComponent.texture resolution.default:128.0
PatchComponent.texture resolution.allowedLabels:[]
PatchComponent.texture resolution.allowedTypes:[]
PatchComponent.texture resolution.allowedUpdates:[]
PatchComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
PatchComponent.texture resolution.canBePath:True
PatchComponent.texture resolution.categ:Texture
PatchComponent.texture resolution.codeWanted:False
PatchComponent.texture resolution.direct:True
PatchComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
PatchComponent.texture resolution.inputType:choice
PatchComponent.texture resolution.label:Texture resolution
PatchComponent.texture resolution.readOnly:False
PatchComponent.texture resolution.staticUpdater:None
PatchComponent.texture resolution.updates:constant
PatchComponent.texture resolution.val:128
PatchComponent.texture resolution.valType:num
PatchComponent.units.default:'from exp settings'
PatchComponent.units.allowedLabels:[]
PatchComponent.units.allowedTypes:[]
PatchComponent.units.allowedUpdates:None
PatchComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PatchComponent.units.canBePath:True
PatchComponent.units.categ:Layout
PatchComponent.units.codeWanted:False
PatchComponent.units.direct:True
PatchComponent.units.hint:Units of dimensions for this stimulus
PatchComponent.units.inputType:choice
PatchComponent.units.label:Spatial Units
PatchComponent.units.readOnly:False
PatchComponent.units.staticUpdater:None
PatchComponent.units.updates:None
PatchComponent.units.val:from exp settings
PatchComponent.units.valType:str
PeristalticPumpComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType']
PeristalticPumpComponent.com_port.default:'Select pump com port'
PeristalticPumpComponent.com_port.allowedLabels:[]
PeristalticPumpComponent.com_port.allowedTypes:[]
PeristalticPumpComponent.com_port.allowedUpdates:None
PeristalticPumpComponent.com_port.allowedVals:['/dev/cu.wlan-debug', '/dev/cu.debug-console', '/dev/cu.Bluetooth-Incoming-Port']
PeristalticPumpComponent.com_port.canBePath:True
PeristalticPumpComponent.com_port.categ:Basic
PeristalticPumpComponent.com_port.codeWanted:False
PeristalticPumpComponent.com_port.direct:True
PeristalticPumpComponent.com_port.hint:COM port
PeristalticPumpComponent.com_port.inputType:choice
PeristalticPumpComponent.com_port.label:COM port
PeristalticPumpComponent.com_port.readOnly:False
PeristalticPumpComponent.com_port.staticUpdater:None
PeristalticPumpComponent.com_port.updates:constant
PeristalticPumpComponent.com_port.val:Select pump com port
PeristalticPumpComponent.com_port.valType:str
PeristalticPumpComponent.delayBetweenPulses.default:0.0
PeristalticPumpComponent.delayBetweenPulses.allowedLabels:[]
PeristalticPumpComponent.delayBetweenPulses.allowedTypes:[]
PeristalticPumpComponent.delayBetweenPulses.allowedUpdates:None
PeristalticPumpComponent.delayBetweenPulses.allowedVals:[]
PeristalticPumpComponent.delayBetweenPulses.canBePath:True
PeristalticPumpComponent.delayBetweenPulses.categ:Basic
PeristalticPumpComponent.delayBetweenPulses.codeWanted:False
PeristalticPumpComponent.delayBetweenPulses.direct:True
PeristalticPumpComponent.delayBetweenPulses.hint:Delay between pulses in a burst sequence
PeristalticPumpComponent.delayBetweenPulses.inputType:single
PeristalticPumpComponent.delayBetweenPulses.label:Delay between pulses (s)
PeristalticPumpComponent.delayBetweenPulses.readOnly:False
PeristalticPumpComponent.delayBetweenPulses.staticUpdater:None
PeristalticPumpComponent.delayBetweenPulses.updates:None
PeristalticPumpComponent.delayBetweenPulses.val:0
PeristalticPumpComponent.delayBetweenPulses.valType:num
PeristalticPumpComponent.delayBetweenSeq.default:0.0
PeristalticPumpComponent.delayBetweenSeq.allowedLabels:[]
PeristalticPumpComponent.delayBetweenSeq.allowedTypes:[]
PeristalticPumpComponent.delayBetweenSeq.allowedUpdates:None
PeristalticPumpComponent.delayBetweenSeq.allowedVals:[]
PeristalticPumpComponent.delayBetweenSeq.canBePath:True
PeristalticPumpComponent.delayBetweenSeq.categ:Basic
PeristalticPumpComponent.delayBetweenSeq.codeWanted:False
PeristalticPumpComponent.delayBetweenSeq.direct:True
PeristalticPumpComponent.delayBetweenSeq.hint:Delay between sequences
PeristalticPumpComponent.delayBetweenSeq.inputType:single
PeristalticPumpComponent.delayBetweenSeq.label:Delay between sequences (s)
PeristalticPumpComponent.delayBetweenSeq.readOnly:False
PeristalticPumpComponent.delayBetweenSeq.staticUpdater:None
PeristalticPumpComponent.delayBetweenSeq.updates:None
PeristalticPumpComponent.delayBetweenSeq.val:0
PeristalticPumpComponent.delayBetweenSeq.valType:num
PeristalticPumpComponent.disabled.default:False
PeristalticPumpComponent.disabled.allowedLabels:[]
PeristalticPumpComponent.disabled.allowedTypes:[]
PeristalticPumpComponent.disabled.allowedUpdates:None
PeristalticPumpComponent.disabled.allowedVals:[]
PeristalticPumpComponent.disabled.canBePath:True
PeristalticPumpComponent.disabled.categ:Testing
PeristalticPumpComponent.disabled.codeWanted:False
PeristalticPumpComponent.disabled.direct:False
PeristalticPumpComponent.disabled.hint:Disable this component
PeristalticPumpComponent.disabled.inputType:bool
PeristalticPumpComponent.disabled.label:Disable component
PeristalticPumpComponent.disabled.readOnly:False
PeristalticPumpComponent.disabled.staticUpdater:None
PeristalticPumpComponent.disabled.updates:None
PeristalticPumpComponent.disabled.val:False
PeristalticPumpComponent.disabled.valType:bool
PeristalticPumpComponent.durationEstim.default:
PeristalticPumpComponent.durationEstim.allowedLabels:[]
PeristalticPumpComponent.durationEstim.allowedTypes:[]
PeristalticPumpComponent.durationEstim.allowedUpdates:None
PeristalticPumpComponent.durationEstim.allowedVals:[]
PeristalticPumpComponent.durationEstim.canBePath:True
PeristalticPumpComponent.durationEstim.categ:Basic
PeristalticPumpComponent.durationEstim.codeWanted:False
PeristalticPumpComponent.durationEstim.direct:False
PeristalticPumpComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PeristalticPumpComponent.durationEstim.inputType:single
PeristalticPumpComponent.durationEstim.label:Expected duration (s)
PeristalticPumpComponent.durationEstim.readOnly:False
PeristalticPumpComponent.durationEstim.staticUpdater:None
PeristalticPumpComponent.durationEstim.updates:None
PeristalticPumpComponent.durationEstim.val:
PeristalticPumpComponent.durationEstim.valType:code
PeristalticPumpComponent.name.default:reward
PeristalticPumpComponent.name.allowedLabels:[]
PeristalticPumpComponent.name.allowedTypes:[]
PeristalticPumpComponent.name.allowedUpdates:None
PeristalticPumpComponent.name.allowedVals:[]
PeristalticPumpComponent.name.canBePath:True
PeristalticPumpComponent.name.categ:Basic
PeristalticPumpComponent.name.codeWanted:False
PeristalticPumpComponent.name.direct:True
PeristalticPumpComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
PeristalticPumpComponent.name.inputType:single
PeristalticPumpComponent.name.label:Name
PeristalticPumpComponent.name.readOnly:False
PeristalticPumpComponent.name.staticUpdater:None
PeristalticPumpComponent.name.val:reward
PeristalticPumpComponent.name.valType:code
PeristalticPumpComponent.numberOfPulses.default:0.0
PeristalticPumpComponent.numberOfPulses.allowedLabels:[]
PeristalticPumpComponent.numberOfPulses.allowedTypes:[]
PeristalticPumpComponent.numberOfPulses.allowedUpdates:None
PeristalticPumpComponent.numberOfPulses.allowedVals:[]
PeristalticPumpComponent.numberOfPulses.canBePath:True
PeristalticPumpComponent.numberOfPulses.categ:Basic
PeristalticPumpComponent.numberOfPulses.codeWanted:False
PeristalticPumpComponent.numberOfPulses.direct:True
PeristalticPumpComponent.numberOfPulses.hint:Number of pulses in a burst sequence
PeristalticPumpComponent.numberOfPulses.inputType:single
PeristalticPumpComponent.numberOfPulses.label:Number of pulses
PeristalticPumpComponent.numberOfPulses.readOnly:False
PeristalticPumpComponent.numberOfPulses.staticUpdater:None
PeristalticPumpComponent.numberOfPulses.updates:None
PeristalticPumpComponent.numberOfPulses.val:0
PeristalticPumpComponent.numberOfPulses.valType:num
PeristalticPumpComponent.numberOfSequences.default:0.0
PeristalticPumpComponent.numberOfSequences.allowedLabels:[]
PeristalticPumpComponent.numberOfSequences.allowedTypes:[]
PeristalticPumpComponent.numberOfSequences.allowedUpdates:None
PeristalticPumpComponent.numberOfSequences.allowedVals:[]
PeristalticPumpComponent.numberOfSequences.canBePath:True
PeristalticPumpComponent.numberOfSequences.categ:Basic
PeristalticPumpComponent.numberOfSequences.codeWanted:False
PeristalticPumpComponent.numberOfSequences.direct:True
PeristalticPumpComponent.numberOfSequences.hint:Number of sequence in a single reward event
PeristalticPumpComponent.numberOfSequences.inputType:single
PeristalticPumpComponent.numberOfSequences.label:Number of sequences
PeristalticPumpComponent.numberOfSequences.readOnly:False
PeristalticPumpComponent.numberOfSequences.staticUpdater:None
PeristalticPumpComponent.numberOfSequences.updates:None
PeristalticPumpComponent.numberOfSequences.val:0
PeristalticPumpComponent.numberOfSequences.valType:num
PeristalticPumpComponent.pulseDuration.default:0.0
PeristalticPumpComponent.pulseDuration.allowedLabels:[]
PeristalticPumpComponent.pulseDuration.allowedTypes:[]
PeristalticPumpComponent.pulseDuration.allowedUpdates:None
PeristalticPumpComponent.pulseDuration.allowedVals:[]
PeristalticPumpComponent.pulseDuration.canBePath:True
PeristalticPumpComponent.pulseDuration.categ:Basic
PeristalticPumpComponent.pulseDuration.codeWanted:False
PeristalticPumpComponent.pulseDuration.direct:True
PeristalticPumpComponent.pulseDuration.hint:The duration of the pulse sent to the peristaltic pump
PeristalticPumpComponent.pulseDuration.inputType:single
PeristalticPumpComponent.pulseDuration.label:Pulse duration (s)
PeristalticPumpComponent.pulseDuration.readOnly:False
PeristalticPumpComponent.pulseDuration.staticUpdater:None
PeristalticPumpComponent.pulseDuration.updates:None
PeristalticPumpComponent.pulseDuration.val:0
PeristalticPumpComponent.pulseDuration.valType:num
PeristalticPumpComponent.saveStartStop.default:True
PeristalticPumpComponent.saveStartStop.allowedLabels:[]
PeristalticPumpComponent.saveStartStop.allowedTypes:[]
PeristalticPumpComponent.saveStartStop.allowedUpdates:None
PeristalticPumpComponent.saveStartStop.allowedVals:[]
PeristalticPumpComponent.saveStartStop.canBePath:True
PeristalticPumpComponent.saveStartStop.categ:Data
PeristalticPumpComponent.saveStartStop.codeWanted:False
PeristalticPumpComponent.saveStartStop.direct:True
PeristalticPumpComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
PeristalticPumpComponent.saveStartStop.inputType:bool
PeristalticPumpComponent.saveStartStop.label:Save onset/offset times
PeristalticPumpComponent.saveStartStop.readOnly:False
PeristalticPumpComponent.saveStartStop.staticUpdater:None
PeristalticPumpComponent.saveStartStop.updates:None
PeristalticPumpComponent.saveStartStop.val:True
PeristalticPumpComponent.saveStartStop.valType:bool
PeristalticPumpComponent.saveStats.default:False
PeristalticPumpComponent.saveStats.allowedLabels:[]
PeristalticPumpComponent.saveStats.allowedTypes:[]
PeristalticPumpComponent.saveStats.allowedUpdates:None
PeristalticPumpComponent.saveStats.allowedVals:[]
PeristalticPumpComponent.saveStats.canBePath:True
PeristalticPumpComponent.saveStats.categ:Basic
PeristalticPumpComponent.saveStats.codeWanted:False
PeristalticPumpComponent.saveStats.direct:True
PeristalticPumpComponent.saveStats.hint:Save log to txt file
PeristalticPumpComponent.saveStats.inputType:bool
PeristalticPumpComponent.saveStats.label:Save actions of pump and licks to txt file
PeristalticPumpComponent.saveStats.readOnly:False
PeristalticPumpComponent.saveStats.staticUpdater:None
PeristalticPumpComponent.saveStats.updates:None
PeristalticPumpComponent.saveStats.val:False
PeristalticPumpComponent.saveStats.valType:bool
PeristalticPumpComponent.startEstim.default:
PeristalticPumpComponent.startEstim.allowedLabels:[]
PeristalticPumpComponent.startEstim.allowedTypes:[]
PeristalticPumpComponent.startEstim.allowedUpdates:None
PeristalticPumpComponent.startEstim.allowedVals:[]
PeristalticPumpComponent.startEstim.canBePath:True
PeristalticPumpComponent.startEstim.categ:Basic
PeristalticPumpComponent.startEstim.codeWanted:False
PeristalticPumpComponent.startEstim.direct:False
PeristalticPumpComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PeristalticPumpComponent.startEstim.inputType:single
PeristalticPumpComponent.startEstim.label:Expected start (s)
PeristalticPumpComponent.startEstim.readOnly:False
PeristalticPumpComponent.startEstim.staticUpdater:None
PeristalticPumpComponent.startEstim.updates:None
PeristalticPumpComponent.startEstim.val:
PeristalticPumpComponent.startEstim.valType:code
PeristalticPumpComponent.startType.default:'time (s)'
PeristalticPumpComponent.startType.allowedLabels:[]
PeristalticPumpComponent.startType.allowedTypes:[]
PeristalticPumpComponent.startType.allowedUpdates:None
PeristalticPumpComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PeristalticPumpComponent.startType.canBePath:True
PeristalticPumpComponent.startType.categ:Basic
PeristalticPumpComponent.startType.codeWanted:False
PeristalticPumpComponent.startType.direct:False
PeristalticPumpComponent.startType.hint:How do you want to define your start point?
PeristalticPumpComponent.startType.inputType:choice
PeristalticPumpComponent.startType.label:start type
PeristalticPumpComponent.startType.readOnly:False
PeristalticPumpComponent.startType.staticUpdater:None
PeristalticPumpComponent.startType.updates:None
PeristalticPumpComponent.startType.val:time (s)
PeristalticPumpComponent.startType.valType:str
PeristalticPumpComponent.startVal.default:0.0
PeristalticPumpComponent.startVal.allowedLabels:[]
PeristalticPumpComponent.startVal.allowedTypes:[]
PeristalticPumpComponent.startVal.allowedUpdates:None
PeristalticPumpComponent.startVal.allowedVals:[]
PeristalticPumpComponent.startVal.canBePath:True
PeristalticPumpComponent.startVal.categ:Basic
PeristalticPumpComponent.startVal.codeWanted:False
PeristalticPumpComponent.startVal.direct:True
PeristalticPumpComponent.startVal.hint:When does the component start?
PeristalticPumpComponent.startVal.inputType:single
PeristalticPumpComponent.startVal.label:Start
PeristalticPumpComponent.startVal.readOnly:False
PeristalticPumpComponent.startVal.staticUpdater:None
PeristalticPumpComponent.startVal.updates:None
PeristalticPumpComponent.startVal.val:0.0
PeristalticPumpComponent.startVal.valType:code
PeristalticPumpComponent.stopType.default:'duration (s)'
PeristalticPumpComponent.stopType.allowedLabels:[]
PeristalticPumpComponent.stopType.allowedTypes:[]
PeristalticPumpComponent.stopType.allowedUpdates:None
PeristalticPumpComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PeristalticPumpComponent.stopType.canBePath:True
PeristalticPumpComponent.stopType.categ:Basic
PeristalticPumpComponent.stopType.codeWanted:False
PeristalticPumpComponent.stopType.direct:False
PeristalticPumpComponent.stopType.hint:How do you want to define your end point?
PeristalticPumpComponent.stopType.inputType:choice
PeristalticPumpComponent.stopType.label:stop type
PeristalticPumpComponent.stopType.readOnly:False
PeristalticPumpComponent.stopType.staticUpdater:None
PeristalticPumpComponent.stopType.updates:None
PeristalticPumpComponent.stopType.val:duration (s)
PeristalticPumpComponent.stopType.valType:str
PeristalticPumpComponent.stopVal.default:0.0
PeristalticPumpComponent.stopVal.allowedLabels:[]
PeristalticPumpComponent.stopVal.allowedTypes:[]
PeristalticPumpComponent.stopVal.allowedUpdates:None
PeristalticPumpComponent.stopVal.allowedVals:[]
PeristalticPumpComponent.stopVal.canBePath:True
PeristalticPumpComponent.stopVal.categ:Basic
PeristalticPumpComponent.stopVal.codeWanted:False
PeristalticPumpComponent.stopVal.direct:True
PeristalticPumpComponent.stopVal.hint:The duration of the pulse sent to the peristaltic pump
PeristalticPumpComponent.stopVal.inputType:single
PeristalticPumpComponent.stopVal.label:Duration (s)
PeristalticPumpComponent.stopVal.readOnly:False
PeristalticPumpComponent.stopVal.staticUpdater:None
PeristalticPumpComponent.stopVal.updates:None
PeristalticPumpComponent.stopVal.val:0
PeristalticPumpComponent.stopVal.valType:num
PeristalticPumpComponent.syncScreenRefresh.default:False
PeristalticPumpComponent.syncScreenRefresh.allowedLabels:[]
PeristalticPumpComponent.syncScreenRefresh.allowedTypes:[]
PeristalticPumpComponent.syncScreenRefresh.allowedUpdates:None
PeristalticPumpComponent.syncScreenRefresh.allowedVals:[]
PeristalticPumpComponent.syncScreenRefresh.canBePath:True
PeristalticPumpComponent.syncScreenRefresh.categ:Data
PeristalticPumpComponent.syncScreenRefresh.codeWanted:False
PeristalticPumpComponent.syncScreenRefresh.direct:True
PeristalticPumpComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
PeristalticPumpComponent.syncScreenRefresh.inputType:bool
PeristalticPumpComponent.syncScreenRefresh.label:Sync timing with screen refresh
PeristalticPumpComponent.syncScreenRefresh.readOnly:False
PeristalticPumpComponent.syncScreenRefresh.staticUpdater:None
PeristalticPumpComponent.syncScreenRefresh.updates:None
PeristalticPumpComponent.syncScreenRefresh.val:False
PeristalticPumpComponent.syncScreenRefresh.valType:bool
PolygonComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'lineColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'shape', 'nVertices']
PolygonComponent.anchor.default:'center'
PolygonComponent.anchor.allowedLabels:[]
PolygonComponent.anchor.allowedTypes:[]
PolygonComponent.anchor.allowedUpdates:None
PolygonComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
PolygonComponent.anchor.canBePath:True
PolygonComponent.anchor.categ:Layout
PolygonComponent.anchor.codeWanted:False
PolygonComponent.anchor.direct:True
PolygonComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
PolygonComponent.anchor.inputType:choice
PolygonComponent.anchor.label:Anchor
PolygonComponent.anchor.readOnly:False
PolygonComponent.anchor.staticUpdater:None
PolygonComponent.anchor.updates:constant
PolygonComponent.anchor.val:center
PolygonComponent.anchor.valType:str
PolygonComponent.colorSpace.default:'rgb'
PolygonComponent.colorSpace.allowedLabels:[]
PolygonComponent.colorSpace.allowedTypes:[]
PolygonComponent.colorSpace.allowedUpdates:None
PolygonComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PolygonComponent.colorSpace.canBePath:True
PolygonComponent.colorSpace.categ:Appearance
PolygonComponent.colorSpace.codeWanted:False
PolygonComponent.colorSpace.direct:True
PolygonComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
PolygonComponent.colorSpace.inputType:choice
PolygonComponent.colorSpace.label:Color Space
PolygonComponent.colorSpace.readOnly:False
PolygonComponent.colorSpace.staticUpdater:None
PolygonComponent.colorSpace.updates:constant
PolygonComponent.colorSpace.val:rgb
PolygonComponent.colorSpace.valType:str
PolygonComponent.contrast.default:1.0
PolygonComponent.contrast.allowedLabels:[]
PolygonComponent.contrast.allowedTypes:[]
PolygonComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.contrast.allowedVals:[]
PolygonComponent.contrast.canBePath:True
PolygonComponent.contrast.categ:Appearance
PolygonComponent.contrast.codeWanted:False
PolygonComponent.contrast.direct:True
PolygonComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
PolygonComponent.contrast.inputType:single
PolygonComponent.contrast.label:Contrast
PolygonComponent.contrast.readOnly:False
PolygonComponent.contrast.staticUpdater:None
PolygonComponent.contrast.updates:constant
PolygonComponent.contrast.val:1
PolygonComponent.contrast.valType:num
PolygonComponent.disabled.default:False
PolygonComponent.disabled.allowedLabels:[]
PolygonComponent.disabled.allowedTypes:[]
PolygonComponent.disabled.allowedUpdates:None
PolygonComponent.disabled.allowedVals:[]
PolygonComponent.disabled.canBePath:True
PolygonComponent.disabled.categ:Testing
PolygonComponent.disabled.codeWanted:False
PolygonComponent.disabled.direct:False
PolygonComponent.disabled.hint:Disable this component
PolygonComponent.disabled.inputType:bool
PolygonComponent.disabled.label:Disable component
PolygonComponent.disabled.readOnly:False
PolygonComponent.disabled.staticUpdater:None
PolygonComponent.disabled.updates:None
PolygonComponent.disabled.val:False
PolygonComponent.disabled.valType:bool
PolygonComponent.durationEstim.default:
PolygonComponent.durationEstim.allowedLabels:[]
PolygonComponent.durationEstim.allowedTypes:[]
PolygonComponent.durationEstim.allowedUpdates:None
PolygonComponent.durationEstim.allowedVals:[]
PolygonComponent.durationEstim.canBePath:True
PolygonComponent.durationEstim.categ:Basic
PolygonComponent.durationEstim.codeWanted:False
PolygonComponent.durationEstim.direct:False
PolygonComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PolygonComponent.durationEstim.inputType:single
PolygonComponent.durationEstim.label:Expected duration (s)
PolygonComponent.durationEstim.readOnly:False
PolygonComponent.durationEstim.staticUpdater:None
PolygonComponent.durationEstim.updates:None
PolygonComponent.durationEstim.val:
PolygonComponent.durationEstim.valType:code
PolygonComponent.fillColor.default:'white'
PolygonComponent.fillColor.allowedLabels:[]
PolygonComponent.fillColor.allowedTypes:[]
PolygonComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.fillColor.allowedVals:[]
PolygonComponent.fillColor.canBePath:True
PolygonComponent.fillColor.categ:Appearance
PolygonComponent.fillColor.codeWanted:False
PolygonComponent.fillColor.direct:True
PolygonComponent.fillColor.hint:Fill color of this stimulus (e.g. $[1,1,0], red )
PolygonComponent.fillColor.inputType:color
PolygonComponent.fillColor.label:Fill Color
PolygonComponent.fillColor.readOnly:False
PolygonComponent.fillColor.staticUpdater:None
PolygonComponent.fillColor.updates:constant
PolygonComponent.fillColor.val:white
PolygonComponent.fillColor.valType:color
PolygonComponent.interpolate.default:'linear'
PolygonComponent.interpolate.allowedLabels:[]
PolygonComponent.interpolate.allowedTypes:[]
PolygonComponent.interpolate.allowedUpdates:[]
PolygonComponent.interpolate.allowedVals:['linear', 'nearest']
PolygonComponent.interpolate.canBePath:True
PolygonComponent.interpolate.categ:Texture
PolygonComponent.interpolate.codeWanted:False
PolygonComponent.interpolate.direct:False
PolygonComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PolygonComponent.interpolate.inputType:choice
PolygonComponent.interpolate.label:Interpolate
PolygonComponent.interpolate.readOnly:False
PolygonComponent.interpolate.staticUpdater:None
PolygonComponent.interpolate.updates:constant
PolygonComponent.interpolate.val:linear
PolygonComponent.interpolate.valType:str
PolygonComponent.lineColor.default:'white'
PolygonComponent.lineColor.allowedLabels:[]
PolygonComponent.lineColor.allowedTypes:[]
PolygonComponent.lineColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineColor.allowedVals:[]
PolygonComponent.lineColor.canBePath:True
PolygonComponent.lineColor.categ:Appearance
PolygonComponent.lineColor.codeWanted:False
PolygonComponent.lineColor.direct:True
PolygonComponent.lineColor.hint:Color of this stimulus (e.g. $[1,1,0], red )
PolygonComponent.lineColor.inputType:color
PolygonComponent.lineColor.label:Border Color
PolygonComponent.lineColor.readOnly:False
PolygonComponent.lineColor.staticUpdater:None
PolygonComponent.lineColor.updates:constant
PolygonComponent.lineColor.val:white
PolygonComponent.lineColor.valType:color
PolygonComponent.lineWidth.default:1.0
PolygonComponent.lineWidth.allowedLabels:[]
PolygonComponent.lineWidth.allowedTypes:[]
PolygonComponent.lineWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineWidth.allowedVals:[]
PolygonComponent.lineWidth.canBePath:True
PolygonComponent.lineWidth.categ:Appearance
PolygonComponent.lineWidth.codeWanted:False
PolygonComponent.lineWidth.direct:True
PolygonComponent.lineWidth.hint:Width of the shape's line (always in pixels - this does NOT use 'units')
PolygonComponent.lineWidth.inputType:single
PolygonComponent.lineWidth.label:Line width
PolygonComponent.lineWidth.readOnly:False
PolygonComponent.lineWidth.staticUpdater:None
PolygonComponent.lineWidth.updates:constant
PolygonComponent.lineWidth.val:1
PolygonComponent.lineWidth.valType:num
PolygonComponent.nVertices.default:4
PolygonComponent.nVertices.allowedLabels:[]
PolygonComponent.nVertices.allowedTypes:[]
PolygonComponent.nVertices.allowedUpdates:['constant']
PolygonComponent.nVertices.allowedVals:[]
PolygonComponent.nVertices.canBePath:True
PolygonComponent.nVertices.categ:Basic
PolygonComponent.nVertices.codeWanted:False
PolygonComponent.nVertices.direct:True
PolygonComponent.nVertices.hint:How many vertices in your regular polygon?
PolygonComponent.nVertices.inputType:single
PolygonComponent.nVertices.label:Num. vertices
PolygonComponent.nVertices.readOnly:False
PolygonComponent.nVertices.staticUpdater:None
PolygonComponent.nVertices.updates:constant
PolygonComponent.nVertices.val:4
PolygonComponent.nVertices.valType:int
PolygonComponent.name.default:polygon
PolygonComponent.name.allowedLabels:[]
PolygonComponent.name.allowedTypes:[]
PolygonComponent.name.allowedUpdates:None
PolygonComponent.name.allowedVals:[]
PolygonComponent.name.canBePath:True
PolygonComponent.name.categ:Basic
PolygonComponent.name.codeWanted:False
PolygonComponent.name.direct:True
PolygonComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
PolygonComponent.name.inputType:single
PolygonComponent.name.label:Name
PolygonComponent.name.readOnly:False
PolygonComponent.name.staticUpdater:None
PolygonComponent.name.val:polygon
PolygonComponent.name.valType:code
PolygonComponent.opacity.default:None
PolygonComponent.opacity.allowedLabels:[]
PolygonComponent.opacity.allowedTypes:[]
PolygonComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.opacity.allowedVals:[]
PolygonComponent.opacity.canBePath:True
PolygonComponent.opacity.categ:Appearance
PolygonComponent.opacity.codeWanted:False
PolygonComponent.opacity.direct:True
PolygonComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
PolygonComponent.opacity.inputType:single
PolygonComponent.opacity.label:Opacity
PolygonComponent.opacity.readOnly:False
PolygonComponent.opacity.staticUpdater:None
PolygonComponent.opacity.updates:constant
PolygonComponent.opacity.val:
PolygonComponent.opacity.valType:num
PolygonComponent.ori.default:0.0
PolygonComponent.ori.allowedLabels:[]
PolygonComponent.ori.allowedTypes:[]
PolygonComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.ori.allowedVals:[-360, 360]
PolygonComponent.ori.canBePath:True
PolygonComponent.ori.categ:Layout
PolygonComponent.ori.codeWanted:False
PolygonComponent.ori.direct:True
PolygonComponent.ori.hint:Orientation of this stimulus (in deg)
PolygonComponent.ori.inputType:spin
PolygonComponent.ori.label:Orientation
PolygonComponent.ori.readOnly:False
PolygonComponent.ori.staticUpdater:None
PolygonComponent.ori.updates:constant
PolygonComponent.ori.val:0
PolygonComponent.ori.valType:num
PolygonComponent.pos.default:(0, 0)
PolygonComponent.pos.allowedLabels:[]
PolygonComponent.pos.allowedTypes:[]
PolygonComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.pos.allowedVals:[]
PolygonComponent.pos.canBePath:True
PolygonComponent.pos.categ:Layout
PolygonComponent.pos.codeWanted:False
PolygonComponent.pos.direct:True
PolygonComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PolygonComponent.pos.inputType:single
PolygonComponent.pos.label:Position [x,y]
PolygonComponent.pos.readOnly:False
PolygonComponent.pos.staticUpdater:None
PolygonComponent.pos.updates:constant
PolygonComponent.pos.val:(0, 0)
PolygonComponent.pos.valType:list
PolygonComponent.saveStartStop.default:True
PolygonComponent.saveStartStop.allowedLabels:[]
PolygonComponent.saveStartStop.allowedTypes:[]
PolygonComponent.saveStartStop.allowedUpdates:None
PolygonComponent.saveStartStop.allowedVals:[]
PolygonComponent.saveStartStop.canBePath:True
PolygonComponent.saveStartStop.categ:Data
PolygonComponent.saveStartStop.codeWanted:False
PolygonComponent.saveStartStop.direct:True
PolygonComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
PolygonComponent.saveStartStop.inputType:bool
PolygonComponent.saveStartStop.label:Save onset/offset times
PolygonComponent.saveStartStop.readOnly:False
PolygonComponent.saveStartStop.staticUpdater:None
PolygonComponent.saveStartStop.updates:None
PolygonComponent.saveStartStop.val:True
PolygonComponent.saveStartStop.valType:bool
PolygonComponent.shape.default:'triangle'
PolygonComponent.shape.allowedLabels:[]
PolygonComponent.shape.allowedTypes:[]
PolygonComponent.shape.allowedUpdates:None
PolygonComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'circle', 'cross', 'star', 'regular polygon...', 'custom polygon...']
PolygonComponent.shape.canBePath:True
PolygonComponent.shape.categ:Basic
PolygonComponent.shape.codeWanted:False
PolygonComponent.shape.direct:False
PolygonComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices and with 'custom polygon...' you can set vertices
PolygonComponent.shape.inputType:choice
PolygonComponent.shape.label:Shape
PolygonComponent.shape.readOnly:False
PolygonComponent.shape.staticUpdater:None
PolygonComponent.shape.updates:None
PolygonComponent.shape.val:triangle
PolygonComponent.shape.valType:str
PolygonComponent.size.default:(0.5, 0.5)
PolygonComponent.size.allowedLabels:[]
PolygonComponent.size.allowedTypes:[]
PolygonComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.size.allowedVals:[]
PolygonComponent.size.canBePath:True
PolygonComponent.size.categ:Layout
PolygonComponent.size.codeWanted:False
PolygonComponent.size.direct:True
PolygonComponent.size.hint:Size of this stimulus [w,h]. Note that for a line only the first value is used, for triangle and rect the [w,h] is as expected,
 but for higher-order polygons it represents the [w,h] of the ellipse that the polygon sits on!! 
PolygonComponent.size.inputType:single
PolygonComponent.size.label:Size [w,h]
PolygonComponent.size.readOnly:False
PolygonComponent.size.staticUpdater:None
PolygonComponent.size.updates:constant
PolygonComponent.size.val:(0.5, 0.5)
PolygonComponent.size.valType:list
PolygonComponent.startEstim.default:
PolygonComponent.startEstim.allowedLabels:[]
PolygonComponent.startEstim.allowedTypes:[]
PolygonComponent.startEstim.allowedUpdates:None
PolygonComponent.startEstim.allowedVals:[]
PolygonComponent.startEstim.canBePath:True
PolygonComponent.startEstim.categ:Basic
PolygonComponent.startEstim.codeWanted:False
PolygonComponent.startEstim.direct:False
PolygonComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PolygonComponent.startEstim.inputType:single
PolygonComponent.startEstim.label:Expected start (s)
PolygonComponent.startEstim.readOnly:False
PolygonComponent.startEstim.staticUpdater:None
PolygonComponent.startEstim.updates:None
PolygonComponent.startEstim.val:
PolygonComponent.startEstim.valType:code
PolygonComponent.startType.default:'time (s)'
PolygonComponent.startType.allowedLabels:[]
PolygonComponent.startType.allowedTypes:[]
PolygonComponent.startType.allowedUpdates:None
PolygonComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PolygonComponent.startType.canBePath:True
PolygonComponent.startType.categ:Basic
PolygonComponent.startType.codeWanted:False
PolygonComponent.startType.direct:False
PolygonComponent.startType.hint:How do you want to define your start point?
PolygonComponent.startType.inputType:choice
PolygonComponent.startType.label:start type
PolygonComponent.startType.readOnly:False
PolygonComponent.startType.staticUpdater:None
PolygonComponent.startType.updates:None
PolygonComponent.startType.val:time (s)
PolygonComponent.startType.valType:str
PolygonComponent.startVal.default:0.0
PolygonComponent.startVal.allowedLabels:[]
PolygonComponent.startVal.allowedTypes:[]
PolygonComponent.startVal.allowedUpdates:None
PolygonComponent.startVal.allowedVals:[]
PolygonComponent.startVal.canBePath:True
PolygonComponent.startVal.categ:Basic
PolygonComponent.startVal.codeWanted:False
PolygonComponent.startVal.direct:True
PolygonComponent.startVal.hint:When does the component start?
PolygonComponent.startVal.inputType:single
PolygonComponent.startVal.label:Start
PolygonComponent.startVal.readOnly:False
PolygonComponent.startVal.staticUpdater:None
PolygonComponent.startVal.updates:None
PolygonComponent.startVal.val:0.0
PolygonComponent.startVal.valType:code
PolygonComponent.stopType.default:'duration (s)'
PolygonComponent.stopType.allowedLabels:[]
PolygonComponent.stopType.allowedTypes:[]
PolygonComponent.stopType.allowedUpdates:None
PolygonComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PolygonComponent.stopType.canBePath:True
PolygonComponent.stopType.categ:Basic
PolygonComponent.stopType.codeWanted:False
PolygonComponent.stopType.direct:False
PolygonComponent.stopType.hint:How do you want to define your end point?
PolygonComponent.stopType.inputType:choice
PolygonComponent.stopType.label:stop type
PolygonComponent.stopType.readOnly:False
PolygonComponent.stopType.staticUpdater:None
PolygonComponent.stopType.updates:None
PolygonComponent.stopType.val:duration (s)
PolygonComponent.stopType.valType:str
PolygonComponent.stopVal.default:1.0
PolygonComponent.stopVal.allowedLabels:[]
PolygonComponent.stopVal.allowedTypes:[]
PolygonComponent.stopVal.allowedUpdates:[]
PolygonComponent.stopVal.allowedVals:[]
PolygonComponent.stopVal.canBePath:True
PolygonComponent.stopVal.categ:Basic
PolygonComponent.stopVal.codeWanted:False
PolygonComponent.stopVal.direct:True
PolygonComponent.stopVal.hint:When does the component end? (blank is endless)
PolygonComponent.stopVal.inputType:single
PolygonComponent.stopVal.label:Stop
PolygonComponent.stopVal.readOnly:False
PolygonComponent.stopVal.staticUpdater:None
PolygonComponent.stopVal.updates:constant
PolygonComponent.stopVal.val:1.0
PolygonComponent.stopVal.valType:code
PolygonComponent.syncScreenRefresh.default:True
PolygonComponent.syncScreenRefresh.allowedLabels:[]
PolygonComponent.syncScreenRefresh.allowedTypes:[]
PolygonComponent.syncScreenRefresh.allowedUpdates:None
PolygonComponent.syncScreenRefresh.allowedVals:[]
PolygonComponent.syncScreenRefresh.canBePath:True
PolygonComponent.syncScreenRefresh.categ:Data
PolygonComponent.syncScreenRefresh.codeWanted:False
PolygonComponent.syncScreenRefresh.direct:True
PolygonComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
PolygonComponent.syncScreenRefresh.inputType:bool
PolygonComponent.syncScreenRefresh.label:Sync timing with screen refresh
PolygonComponent.syncScreenRefresh.readOnly:True
PolygonComponent.syncScreenRefresh.staticUpdater:None
PolygonComponent.syncScreenRefresh.updates:None
PolygonComponent.syncScreenRefresh.val:True
PolygonComponent.syncScreenRefresh.valType:bool
PolygonComponent.units.default:'from exp settings'
PolygonComponent.units.allowedLabels:[]
PolygonComponent.units.allowedTypes:[]
PolygonComponent.units.allowedUpdates:None
PolygonComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PolygonComponent.units.canBePath:True
PolygonComponent.units.categ:Layout
PolygonComponent.units.codeWanted:False
PolygonComponent.units.direct:True
PolygonComponent.units.hint:Units of dimensions for this stimulus
PolygonComponent.units.inputType:choice
PolygonComponent.units.label:Spatial Units
PolygonComponent.units.readOnly:False
PolygonComponent.units.staticUpdater:None
PolygonComponent.units.updates:None
PolygonComponent.units.val:from exp settings
PolygonComponent.units.valType:str
PolygonComponent.vertices.default:[]
PolygonComponent.vertices.allowedLabels:[]
PolygonComponent.vertices.allowedTypes:[]
PolygonComponent.vertices.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.vertices.allowedVals:[]
PolygonComponent.vertices.canBePath:True
PolygonComponent.vertices.categ:Basic
PolygonComponent.vertices.codeWanted:False
PolygonComponent.vertices.direct:True
PolygonComponent.vertices.hint:What are the vertices of your polygon? Should be an nx2 array or a list of [x, y] lists
PolygonComponent.vertices.inputType:single
PolygonComponent.vertices.label:Vertices
PolygonComponent.vertices.readOnly:False
PolygonComponent.vertices.staticUpdater:None
PolygonComponent.vertices.updates:constant
PolygonComponent.vertices.val:
PolygonComponent.vertices.valType:list
QmixPumpComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'syncToScreen', 'pumpIndex', 'syringeType', 'pumpAction', 'flowRate', 'flowRateUnit', 'switchValveWhenDone']
QmixPumpComponent.disabled.default:False
QmixPumpComponent.disabled.allowedLabels:[]
QmixPumpComponent.disabled.allowedTypes:[]
QmixPumpComponent.disabled.allowedUpdates:None
QmixPumpComponent.disabled.allowedVals:[]
QmixPumpComponent.disabled.canBePath:True
QmixPumpComponent.disabled.categ:Testing
QmixPumpComponent.disabled.codeWanted:False
QmixPumpComponent.disabled.direct:False
QmixPumpComponent.disabled.hint:Disable this component
QmixPumpComponent.disabled.inputType:bool
QmixPumpComponent.disabled.label:Disable component
QmixPumpComponent.disabled.readOnly:False
QmixPumpComponent.disabled.staticUpdater:None
QmixPumpComponent.disabled.updates:None
QmixPumpComponent.disabled.val:False
QmixPumpComponent.disabled.valType:bool
QmixPumpComponent.durationEstim.default:
QmixPumpComponent.durationEstim.allowedLabels:[]
QmixPumpComponent.durationEstim.allowedTypes:[]
QmixPumpComponent.durationEstim.allowedUpdates:None
QmixPumpComponent.durationEstim.allowedVals:[]
QmixPumpComponent.durationEstim.canBePath:True
QmixPumpComponent.durationEstim.categ:Basic
QmixPumpComponent.durationEstim.codeWanted:False
QmixPumpComponent.durationEstim.direct:False
QmixPumpComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
QmixPumpComponent.durationEstim.inputType:single
QmixPumpComponent.durationEstim.label:Expected duration (s)
QmixPumpComponent.durationEstim.readOnly:False
QmixPumpComponent.durationEstim.staticUpdater:None
QmixPumpComponent.durationEstim.updates:None
QmixPumpComponent.durationEstim.val:
QmixPumpComponent.durationEstim.valType:code
QmixPumpComponent.flowRate.default:1.0
QmixPumpComponent.flowRate.allowedLabels:[]
QmixPumpComponent.flowRate.allowedTypes:[]
QmixPumpComponent.flowRate.allowedUpdates:None
QmixPumpComponent.flowRate.allowedVals:[]
QmixPumpComponent.flowRate.canBePath:True
QmixPumpComponent.flowRate.categ:Hardware
QmixPumpComponent.flowRate.codeWanted:False
QmixPumpComponent.flowRate.direct:True
QmixPumpComponent.flowRate.hint:The flow rate
QmixPumpComponent.flowRate.inputType:single
QmixPumpComponent.flowRate.label:Flow rate
QmixPumpComponent.flowRate.readOnly:False
QmixPumpComponent.flowRate.staticUpdater:None
QmixPumpComponent.flowRate.updates:None
QmixPumpComponent.flowRate.val:1.0
QmixPumpComponent.flowRate.valType:num
QmixPumpComponent.flowRateUnit.default:'mL/s'
QmixPumpComponent.flowRateUnit.allowedLabels:[]
QmixPumpComponent.flowRateUnit.allowedTypes:[]
QmixPumpComponent.flowRateUnit.allowedUpdates:None
QmixPumpComponent.flowRateUnit.allowedVals:['mL/s', 'mL/min']
QmixPumpComponent.flowRateUnit.canBePath:True
QmixPumpComponent.flowRateUnit.categ:Hardware
QmixPumpComponent.flowRateUnit.codeWanted:False
QmixPumpComponent.flowRateUnit.direct:True
QmixPumpComponent.flowRateUnit.hint:The unit of the flow rate
QmixPumpComponent.flowRateUnit.inputType:choice
QmixPumpComponent.flowRateUnit.label:Flow rate unit
QmixPumpComponent.flowRateUnit.readOnly:False
QmixPumpComponent.flowRateUnit.staticUpdater:None
QmixPumpComponent.flowRateUnit.updates:None
QmixPumpComponent.flowRateUnit.val:mL/s
QmixPumpComponent.flowRateUnit.valType:str
QmixPumpComponent.name.default:pump
QmixPumpComponent.name.allowedLabels:[]
QmixPumpComponent.name.allowedTypes:[]
QmixPumpComponent.name.allowedUpdates:None
QmixPumpComponent.name.allowedVals:[]
QmixPumpComponent.name.canBePath:True
QmixPumpComponent.name.categ:Basic
QmixPumpComponent.name.codeWanted:False
QmixPumpComponent.name.direct:True
QmixPumpComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
QmixPumpComponent.name.inputType:single
QmixPumpComponent.name.label:Name
QmixPumpComponent.name.readOnly:False
QmixPumpComponent.name.staticUpdater:None
QmixPumpComponent.name.val:pump
QmixPumpComponent.name.valType:code
QmixPumpComponent.pumpAction.default:'dispense'
QmixPumpComponent.pumpAction.allowedLabels:[]
QmixPumpComponent.pumpAction.allowedTypes:[]
QmixPumpComponent.pumpAction.allowedUpdates:None
QmixPumpComponent.pumpAction.allowedVals:['aspirate', 'dispense']
QmixPumpComponent.pumpAction.canBePath:True
QmixPumpComponent.pumpAction.categ:Hardware
QmixPumpComponent.pumpAction.codeWanted:False
QmixPumpComponent.pumpAction.direct:False
QmixPumpComponent.pumpAction.hint:Whether the syringe should be filled (aspirate) or emptied (dispense
QmixPumpComponent.pumpAction.inputType:choice
QmixPumpComponent.pumpAction.label:Pump action
QmixPumpComponent.pumpAction.readOnly:False
QmixPumpComponent.pumpAction.staticUpdater:None
QmixPumpComponent.pumpAction.updates:None
QmixPumpComponent.pumpAction.val:dispense
QmixPumpComponent.pumpAction.valType:str
QmixPumpComponent.pumpIndex.default:0
QmixPumpComponent.pumpIndex.allowedLabels:[]
QmixPumpComponent.pumpIndex.allowedTypes:[]
QmixPumpComponent.pumpIndex.allowedUpdates:None
QmixPumpComponent.pumpIndex.allowedVals:[]
QmixPumpComponent.pumpIndex.canBePath:True
QmixPumpComponent.pumpIndex.categ:Hardware
QmixPumpComponent.pumpIndex.codeWanted:False
QmixPumpComponent.pumpIndex.direct:True
QmixPumpComponent.pumpIndex.hint:The index of the pump(s) (first pump is 0).
QmixPumpComponent.pumpIndex.inputType:single
QmixPumpComponent.pumpIndex.label:Pump index
QmixPumpComponent.pumpIndex.readOnly:False
QmixPumpComponent.pumpIndex.staticUpdater:None
QmixPumpComponent.pumpIndex.updates:None
QmixPumpComponent.pumpIndex.val:0
QmixPumpComponent.pumpIndex.valType:code
QmixPumpComponent.saveStartStop.default:True
QmixPumpComponent.saveStartStop.allowedLabels:[]
QmixPumpComponent.saveStartStop.allowedTypes:[]
QmixPumpComponent.saveStartStop.allowedUpdates:None
QmixPumpComponent.saveStartStop.allowedVals:[]
QmixPumpComponent.saveStartStop.canBePath:True
QmixPumpComponent.saveStartStop.categ:Data
QmixPumpComponent.saveStartStop.codeWanted:False
QmixPumpComponent.saveStartStop.direct:True
QmixPumpComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
QmixPumpComponent.saveStartStop.inputType:bool
QmixPumpComponent.saveStartStop.label:Save onset/offset times
QmixPumpComponent.saveStartStop.readOnly:False
QmixPumpComponent.saveStartStop.staticUpdater:None
QmixPumpComponent.saveStartStop.updates:None
QmixPumpComponent.saveStartStop.val:True
QmixPumpComponent.saveStartStop.valType:bool
QmixPumpComponent.startEstim.default:
QmixPumpComponent.startEstim.allowedLabels:[]
QmixPumpComponent.startEstim.allowedTypes:[]
QmixPumpComponent.startEstim.allowedUpdates:None
QmixPumpComponent.startEstim.allowedVals:[]
QmixPumpComponent.startEstim.canBePath:True
QmixPumpComponent.startEstim.categ:Basic
QmixPumpComponent.startEstim.codeWanted:False
QmixPumpComponent.startEstim.direct:False
QmixPumpComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
QmixPumpComponent.startEstim.inputType:single
QmixPumpComponent.startEstim.label:Expected start (s)
QmixPumpComponent.startEstim.readOnly:False
QmixPumpComponent.startEstim.staticUpdater:None
QmixPumpComponent.startEstim.updates:None
QmixPumpComponent.startEstim.val:
QmixPumpComponent.startEstim.valType:code
QmixPumpComponent.startType.default:'time (s)'
QmixPumpComponent.startType.allowedLabels:[]
QmixPumpComponent.startType.allowedTypes:[]
QmixPumpComponent.startType.allowedUpdates:None
QmixPumpComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
QmixPumpComponent.startType.canBePath:True
QmixPumpComponent.startType.categ:Basic
QmixPumpComponent.startType.codeWanted:False
QmixPumpComponent.startType.direct:False
QmixPumpComponent.startType.hint:How do you want to define your start point?
QmixPumpComponent.startType.inputType:choice
QmixPumpComponent.startType.label:start type
QmixPumpComponent.startType.readOnly:False
QmixPumpComponent.startType.staticUpdater:None
QmixPumpComponent.startType.updates:None
QmixPumpComponent.startType.val:time (s)
QmixPumpComponent.startType.valType:str
QmixPumpComponent.startVal.default:0.0
QmixPumpComponent.startVal.allowedLabels:[]
QmixPumpComponent.startVal.allowedTypes:[]
QmixPumpComponent.startVal.allowedUpdates:None
QmixPumpComponent.startVal.allowedVals:[]
QmixPumpComponent.startVal.canBePath:True
QmixPumpComponent.startVal.categ:Basic
QmixPumpComponent.startVal.codeWanted:False
QmixPumpComponent.startVal.direct:True
QmixPumpComponent.startVal.hint:When does the component start?
QmixPumpComponent.startVal.inputType:single
QmixPumpComponent.startVal.label:Start
QmixPumpComponent.startVal.readOnly:False
QmixPumpComponent.startVal.staticUpdater:None
QmixPumpComponent.startVal.updates:None
QmixPumpComponent.startVal.val:0.0
QmixPumpComponent.startVal.valType:code
QmixPumpComponent.stopType.default:'duration (s)'
QmixPumpComponent.stopType.allowedLabels:[]
QmixPumpComponent.stopType.allowedTypes:[]
QmixPumpComponent.stopType.allowedUpdates:None
QmixPumpComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
QmixPumpComponent.stopType.canBePath:True
QmixPumpComponent.stopType.categ:Basic
QmixPumpComponent.stopType.codeWanted:False
QmixPumpComponent.stopType.direct:False
QmixPumpComponent.stopType.hint:How do you want to define your end point?
QmixPumpComponent.stopType.inputType:choice
QmixPumpComponent.stopType.label:stop type
QmixPumpComponent.stopType.readOnly:False
QmixPumpComponent.stopType.staticUpdater:None
QmixPumpComponent.stopType.updates:None
QmixPumpComponent.stopType.val:duration (s)
QmixPumpComponent.stopType.valType:str
QmixPumpComponent.stopVal.default:1.0
QmixPumpComponent.stopVal.allowedLabels:[]
QmixPumpComponent.stopVal.allowedTypes:[]
QmixPumpComponent.stopVal.allowedUpdates:[]
QmixPumpComponent.stopVal.allowedVals:[]
QmixPumpComponent.stopVal.canBePath:True
QmixPumpComponent.stopVal.categ:Basic
QmixPumpComponent.stopVal.codeWanted:False
QmixPumpComponent.stopVal.direct:True
QmixPumpComponent.stopVal.hint:When does the component end? (blank is endless)
QmixPumpComponent.stopVal.inputType:single
QmixPumpComponent.stopVal.label:Stop
QmixPumpComponent.stopVal.readOnly:False
QmixPumpComponent.stopVal.staticUpdater:None
QmixPumpComponent.stopVal.updates:constant
QmixPumpComponent.stopVal.val:1.0
QmixPumpComponent.stopVal.valType:code
QmixPumpComponent.switchValveWhenDone.default:True
QmixPumpComponent.switchValveWhenDone.allowedLabels:[]
QmixPumpComponent.switchValveWhenDone.allowedTypes:[]
QmixPumpComponent.switchValveWhenDone.allowedUpdates:None
QmixPumpComponent.switchValveWhenDone.allowedVals:[True, False]
QmixPumpComponent.switchValveWhenDone.canBePath:True
QmixPumpComponent.switchValveWhenDone.categ:Hardware
QmixPumpComponent.switchValveWhenDone.codeWanted:False
QmixPumpComponent.switchValveWhenDone.direct:True
QmixPumpComponent.switchValveWhenDone.hint:Switch the valve after pump operation
QmixPumpComponent.switchValveWhenDone.inputType:bool
QmixPumpComponent.switchValveWhenDone.label:Switch valve after dosing
QmixPumpComponent.switchValveWhenDone.readOnly:False
QmixPumpComponent.switchValveWhenDone.staticUpdater:None
QmixPumpComponent.switchValveWhenDone.updates:None
QmixPumpComponent.switchValveWhenDone.val:True
QmixPumpComponent.switchValveWhenDone.valType:bool
QmixPumpComponent.syncScreenRefresh.default:False
QmixPumpComponent.syncScreenRefresh.allowedLabels:[]
QmixPumpComponent.syncScreenRefresh.allowedTypes:[]
QmixPumpComponent.syncScreenRefresh.allowedUpdates:None
QmixPumpComponent.syncScreenRefresh.allowedVals:[]
QmixPumpComponent.syncScreenRefresh.canBePath:True
QmixPumpComponent.syncScreenRefresh.categ:Data
QmixPumpComponent.syncScreenRefresh.codeWanted:False
QmixPumpComponent.syncScreenRefresh.direct:True
QmixPumpComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
QmixPumpComponent.syncScreenRefresh.inputType:bool
QmixPumpComponent.syncScreenRefresh.label:Sync timing with screen refresh
QmixPumpComponent.syncScreenRefresh.readOnly:False
QmixPumpComponent.syncScreenRefresh.staticUpdater:None
QmixPumpComponent.syncScreenRefresh.updates:None
QmixPumpComponent.syncScreenRefresh.val:False
QmixPumpComponent.syncScreenRefresh.valType:bool
QmixPumpComponent.syncToScreen.default:True
QmixPumpComponent.syncToScreen.allowedLabels:[]
QmixPumpComponent.syncToScreen.allowedTypes:[]
QmixPumpComponent.syncToScreen.allowedUpdates:None
QmixPumpComponent.syncToScreen.allowedVals:[True, False]
QmixPumpComponent.syncToScreen.canBePath:True
QmixPumpComponent.syncToScreen.categ:Basic
QmixPumpComponent.syncToScreen.codeWanted:False
QmixPumpComponent.syncToScreen.direct:True
QmixPumpComponent.syncToScreen.hint:Sync pump onset to the screen refresh
QmixPumpComponent.syncToScreen.inputType:bool
QmixPumpComponent.syncToScreen.label:Sync to screen
QmixPumpComponent.syncToScreen.readOnly:False
QmixPumpComponent.syncToScreen.staticUpdater:None
QmixPumpComponent.syncToScreen.updates:None
QmixPumpComponent.syncToScreen.val:True
QmixPumpComponent.syncToScreen.valType:bool
QmixPumpComponent.syringeType.default:'50 mL glass'
QmixPumpComponent.syringeType.allowedLabels:[]
QmixPumpComponent.syringeType.allowedTypes:[]
QmixPumpComponent.syringeType.allowedUpdates:None
QmixPumpComponent.syringeType.allowedVals:['25 mL glass', '50 mL glass']
QmixPumpComponent.syringeType.canBePath:True
QmixPumpComponent.syringeType.categ:Hardware
QmixPumpComponent.syringeType.codeWanted:False
QmixPumpComponent.syringeType.direct:True
QmixPumpComponent.syringeType.hint:Syringe type and dimensions
QmixPumpComponent.syringeType.inputType:choice
QmixPumpComponent.syringeType.label:Syringe type
QmixPumpComponent.syringeType.readOnly:False
QmixPumpComponent.syringeType.staticUpdater:None
QmixPumpComponent.syringeType.updates:None
QmixPumpComponent.syringeType.val:50 mL glass
QmixPumpComponent.syringeType.valType:str
RatingScaleComponent.order:['name', 'visualAnalogScale', 'categoryChoices', 'scaleDescription', 'low', 'high', 'labels', 'markerStart', 'size', 'pos', 'tickHeight']
RatingScaleComponent.categoryChoices.default:[]
RatingScaleComponent.categoryChoices.allowedLabels:[]
RatingScaleComponent.categoryChoices.allowedTypes:[]
RatingScaleComponent.categoryChoices.allowedUpdates:[]
RatingScaleComponent.categoryChoices.allowedVals:[]
RatingScaleComponent.categoryChoices.canBePath:True
RatingScaleComponent.categoryChoices.categ:Basic
RatingScaleComponent.categoryChoices.codeWanted:False
RatingScaleComponent.categoryChoices.direct:True
RatingScaleComponent.categoryChoices.hint:A list of categories (non-numeric alternatives) to present, space or comma-separated; these take precedence over a numeric scale
RatingScaleComponent.categoryChoices.inputType:single
RatingScaleComponent.categoryChoices.label:Category choices
RatingScaleComponent.categoryChoices.readOnly:False
RatingScaleComponent.categoryChoices.staticUpdater:None
RatingScaleComponent.categoryChoices.updates:constant
RatingScaleComponent.categoryChoices.val:
RatingScaleComponent.categoryChoices.valType:list
RatingScaleComponent.customize_everything.default:
RatingScaleComponent.customize_everything.allowedLabels:[]
RatingScaleComponent.customize_everything.allowedTypes:[]
RatingScaleComponent.customize_everything.allowedUpdates:[]
RatingScaleComponent.customize_everything.allowedVals:[]
RatingScaleComponent.customize_everything.canBePath:True
RatingScaleComponent.customize_everything.categ:Custom
RatingScaleComponent.customize_everything.codeWanted:False
RatingScaleComponent.customize_everything.direct:True
RatingScaleComponent.customize_everything.hint:Use this text to create the rating scale as you would in a code component; overrides all dialog settings except time parameters, forceEndRoutine, storeRatingTime, storeRating
RatingScaleComponent.customize_everything.inputType:multi
RatingScaleComponent.customize_everything.label:Customize everything :
RatingScaleComponent.customize_everything.readOnly:False
RatingScaleComponent.customize_everything.staticUpdater:None
RatingScaleComponent.customize_everything.updates:constant
RatingScaleComponent.customize_everything.val:
RatingScaleComponent.customize_everything.valType:code
RatingScaleComponent.disabled.default:False
RatingScaleComponent.disabled.allowedLabels:[]
RatingScaleComponent.disabled.allowedTypes:[]
RatingScaleComponent.disabled.allowedUpdates:None
RatingScaleComponent.disabled.allowedVals:[]
RatingScaleComponent.disabled.canBePath:True
RatingScaleComponent.disabled.categ:Testing
RatingScaleComponent.disabled.codeWanted:False
RatingScaleComponent.disabled.direct:False
RatingScaleComponent.disabled.hint:Disable this component
RatingScaleComponent.disabled.inputType:bool
RatingScaleComponent.disabled.label:Disable component
RatingScaleComponent.disabled.readOnly:False
RatingScaleComponent.disabled.staticUpdater:None
RatingScaleComponent.disabled.updates:None
RatingScaleComponent.disabled.val:False
RatingScaleComponent.disabled.valType:bool
RatingScaleComponent.disappear.default:False
RatingScaleComponent.disappear.allowedLabels:[]
RatingScaleComponent.disappear.allowedTypes:[]
RatingScaleComponent.disappear.allowedUpdates:[]
RatingScaleComponent.disappear.allowedVals:[]
RatingScaleComponent.disappear.canBePath:True
RatingScaleComponent.disappear.categ:Interface
RatingScaleComponent.disappear.codeWanted:False
RatingScaleComponent.disappear.direct:True
RatingScaleComponent.disappear.hint:Hide the scale when a rating has been accepted; False to remain on-screen
RatingScaleComponent.disappear.inputType:bool
RatingScaleComponent.disappear.label:Disappear
RatingScaleComponent.disappear.readOnly:False
RatingScaleComponent.disappear.staticUpdater:None
RatingScaleComponent.disappear.updates:constant
RatingScaleComponent.disappear.val:False
RatingScaleComponent.disappear.valType:bool
RatingScaleComponent.durationEstim.default:
RatingScaleComponent.durationEstim.allowedLabels:[]
RatingScaleComponent.durationEstim.allowedTypes:[]
RatingScaleComponent.durationEstim.allowedUpdates:None
RatingScaleComponent.durationEstim.allowedVals:[]
RatingScaleComponent.durationEstim.canBePath:True
RatingScaleComponent.durationEstim.categ:Basic
RatingScaleComponent.durationEstim.codeWanted:False
RatingScaleComponent.durationEstim.direct:False
RatingScaleComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
RatingScaleComponent.durationEstim.inputType:single
RatingScaleComponent.durationEstim.label:Expected duration (s)
RatingScaleComponent.durationEstim.readOnly:False
RatingScaleComponent.durationEstim.staticUpdater:None
RatingScaleComponent.durationEstim.updates:None
RatingScaleComponent.durationEstim.val:
RatingScaleComponent.durationEstim.valType:code
RatingScaleComponent.forceEndRoutine.default:True
RatingScaleComponent.forceEndRoutine.allowedLabels:[]
RatingScaleComponent.forceEndRoutine.allowedTypes:[]
RatingScaleComponent.forceEndRoutine.allowedUpdates:[]
RatingScaleComponent.forceEndRoutine.allowedVals:[]
RatingScaleComponent.forceEndRoutine.canBePath:True
RatingScaleComponent.forceEndRoutine.categ:Basic
RatingScaleComponent.forceEndRoutine.codeWanted:False
RatingScaleComponent.forceEndRoutine.direct:True
RatingScaleComponent.forceEndRoutine.hint:Should accepting a rating cause the end of the routine (e.g. trial)?
RatingScaleComponent.forceEndRoutine.inputType:bool
RatingScaleComponent.forceEndRoutine.label:Force end of Routine
RatingScaleComponent.forceEndRoutine.readOnly:False
RatingScaleComponent.forceEndRoutine.staticUpdater:None
RatingScaleComponent.forceEndRoutine.updates:constant
RatingScaleComponent.forceEndRoutine.val:True
RatingScaleComponent.forceEndRoutine.valType:bool
RatingScaleComponent.high.default:7.0
RatingScaleComponent.high.allowedLabels:[]
RatingScaleComponent.high.allowedTypes:[]
RatingScaleComponent.high.allowedUpdates:[]
RatingScaleComponent.high.allowedVals:[]
RatingScaleComponent.high.canBePath:True
RatingScaleComponent.high.categ:Data
RatingScaleComponent.high.codeWanted:False
RatingScaleComponent.high.direct:True
RatingScaleComponent.high.hint:Highest rating (top end of the scale); not used for categories.
RatingScaleComponent.high.inputType:single
RatingScaleComponent.high.label:Highest value
RatingScaleComponent.high.readOnly:False
RatingScaleComponent.high.staticUpdater:None
RatingScaleComponent.high.updates:constant
RatingScaleComponent.high.val:7
RatingScaleComponent.high.valType:num
RatingScaleComponent.labels.default:[]
RatingScaleComponent.labels.allowedLabels:[]
RatingScaleComponent.labels.allowedTypes:[]
RatingScaleComponent.labels.allowedUpdates:[]
RatingScaleComponent.labels.allowedVals:[]
RatingScaleComponent.labels.canBePath:True
RatingScaleComponent.labels.categ:Data
RatingScaleComponent.labels.codeWanted:False
RatingScaleComponent.labels.direct:True
RatingScaleComponent.labels.hint:Labels for the ends of the scale, separated by commas
RatingScaleComponent.labels.inputType:single
RatingScaleComponent.labels.label:Labels
RatingScaleComponent.labels.readOnly:False
RatingScaleComponent.labels.staticUpdater:None
RatingScaleComponent.labels.updates:constant
RatingScaleComponent.labels.val:
RatingScaleComponent.labels.valType:list
RatingScaleComponent.low.default:1.0
RatingScaleComponent.low.allowedLabels:[]
RatingScaleComponent.low.allowedTypes:[]
RatingScaleComponent.low.allowedUpdates:[]
RatingScaleComponent.low.allowedVals:[]
RatingScaleComponent.low.canBePath:True
RatingScaleComponent.low.categ:Data
RatingScaleComponent.low.codeWanted:False
RatingScaleComponent.low.direct:True
RatingScaleComponent.low.hint:Lowest rating (low end of the scale); not used for categories.
RatingScaleComponent.low.inputType:single
RatingScaleComponent.low.label:Lowest value
RatingScaleComponent.low.readOnly:False
RatingScaleComponent.low.staticUpdater:None
RatingScaleComponent.low.updates:constant
RatingScaleComponent.low.val:1
RatingScaleComponent.low.valType:num
RatingScaleComponent.marker.default:'triangle'
RatingScaleComponent.marker.allowedLabels:[]
RatingScaleComponent.marker.allowedTypes:[]
RatingScaleComponent.marker.allowedUpdates:[]
RatingScaleComponent.marker.allowedVals:['triangle', 'circle', 'glow', 'slider', 'hover']
RatingScaleComponent.marker.canBePath:True
RatingScaleComponent.marker.categ:Interface
RatingScaleComponent.marker.codeWanted:False
RatingScaleComponent.marker.direct:True
RatingScaleComponent.marker.hint:Style for the marker: triangle, circle, glow, slider, hover
RatingScaleComponent.marker.inputType:choice
RatingScaleComponent.marker.label:Marker type
RatingScaleComponent.marker.readOnly:False
RatingScaleComponent.marker.staticUpdater:None
RatingScaleComponent.marker.updates:constant
RatingScaleComponent.marker.val:triangle
RatingScaleComponent.marker.valType:str
RatingScaleComponent.markerStart.default:None
RatingScaleComponent.markerStart.allowedLabels:[]
RatingScaleComponent.markerStart.allowedTypes:[]
RatingScaleComponent.markerStart.allowedUpdates:[]
RatingScaleComponent.markerStart.allowedVals:[]
RatingScaleComponent.markerStart.canBePath:True
RatingScaleComponent.markerStart.categ:Data
RatingScaleComponent.markerStart.codeWanted:False
RatingScaleComponent.markerStart.direct:True
RatingScaleComponent.markerStart.hint:initial position for the marker
RatingScaleComponent.markerStart.inputType:single
RatingScaleComponent.markerStart.label:Marker start
RatingScaleComponent.markerStart.readOnly:False
RatingScaleComponent.markerStart.staticUpdater:None
RatingScaleComponent.markerStart.updates:constant
RatingScaleComponent.markerStart.val:
RatingScaleComponent.markerStart.valType:num
RatingScaleComponent.name.default:rating
RatingScaleComponent.name.allowedLabels:[]
RatingScaleComponent.name.allowedTypes:[]
RatingScaleComponent.name.allowedUpdates:None
RatingScaleComponent.name.allowedVals:[]
RatingScaleComponent.name.canBePath:True
RatingScaleComponent.name.categ:Basic
RatingScaleComponent.name.codeWanted:False
RatingScaleComponent.name.direct:True
RatingScaleComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
RatingScaleComponent.name.inputType:single
RatingScaleComponent.name.label:Name
RatingScaleComponent.name.readOnly:False
RatingScaleComponent.name.staticUpdater:None
RatingScaleComponent.name.val:rating
RatingScaleComponent.name.valType:code
RatingScaleComponent.pos.default:[0, -0.4]
RatingScaleComponent.pos.allowedLabels:[]
RatingScaleComponent.pos.allowedTypes:[]
RatingScaleComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RatingScaleComponent.pos.allowedVals:[]
RatingScaleComponent.pos.canBePath:True
RatingScaleComponent.pos.categ:Layout
RatingScaleComponent.pos.codeWanted:False
RatingScaleComponent.pos.direct:True
RatingScaleComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
RatingScaleComponent.pos.inputType:single
RatingScaleComponent.pos.label:Position [x,y]
RatingScaleComponent.pos.readOnly:False
RatingScaleComponent.pos.staticUpdater:None
RatingScaleComponent.pos.updates:constant
RatingScaleComponent.pos.val:0, -0.4
RatingScaleComponent.pos.valType:list
RatingScaleComponent.saveStartStop.default:True
RatingScaleComponent.saveStartStop.allowedLabels:[]
RatingScaleComponent.saveStartStop.allowedTypes:[]
RatingScaleComponent.saveStartStop.allowedUpdates:None
RatingScaleComponent.saveStartStop.allowedVals:[]
RatingScaleComponent.saveStartStop.canBePath:True
RatingScaleComponent.saveStartStop.categ:Data
RatingScaleComponent.saveStartStop.codeWanted:False
RatingScaleComponent.saveStartStop.direct:True
RatingScaleComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
RatingScaleComponent.saveStartStop.inputType:bool
RatingScaleComponent.saveStartStop.label:Save onset/offset times
RatingScaleComponent.saveStartStop.readOnly:False
RatingScaleComponent.saveStartStop.staticUpdater:None
RatingScaleComponent.saveStartStop.updates:None
RatingScaleComponent.saveStartStop.val:True
RatingScaleComponent.saveStartStop.valType:bool
RatingScaleComponent.scaleDescription.default:''
RatingScaleComponent.scaleDescription.allowedLabels:[]
RatingScaleComponent.scaleDescription.allowedTypes:[]
RatingScaleComponent.scaleDescription.allowedUpdates:[]
RatingScaleComponent.scaleDescription.allowedVals:[]
RatingScaleComponent.scaleDescription.canBePath:True
RatingScaleComponent.scaleDescription.categ:Basic
RatingScaleComponent.scaleDescription.codeWanted:False
RatingScaleComponent.scaleDescription.direct:True
RatingScaleComponent.scaleDescription.hint:Brief instructions, such as a description of the scale numbers as seen by the subject.
RatingScaleComponent.scaleDescription.inputType:single
RatingScaleComponent.scaleDescription.label:Scale description
RatingScaleComponent.scaleDescription.readOnly:False
RatingScaleComponent.scaleDescription.staticUpdater:None
RatingScaleComponent.scaleDescription.updates:constant
RatingScaleComponent.scaleDescription.val:
RatingScaleComponent.scaleDescription.valType:str
RatingScaleComponent.showAccept.default:True
RatingScaleComponent.showAccept.allowedLabels:[]
RatingScaleComponent.showAccept.allowedTypes:[]
RatingScaleComponent.showAccept.allowedUpdates:[]
RatingScaleComponent.showAccept.allowedVals:[]
RatingScaleComponent.showAccept.canBePath:True
RatingScaleComponent.showAccept.categ:Interface
RatingScaleComponent.showAccept.codeWanted:False
RatingScaleComponent.showAccept.direct:True
RatingScaleComponent.showAccept.hint:Should the accept button by visible?
RatingScaleComponent.showAccept.inputType:bool
RatingScaleComponent.showAccept.label:Show accept
RatingScaleComponent.showAccept.readOnly:False
RatingScaleComponent.showAccept.staticUpdater:None
RatingScaleComponent.showAccept.updates:constant
RatingScaleComponent.showAccept.val:True
RatingScaleComponent.showAccept.valType:bool
RatingScaleComponent.singleClick.default:False
RatingScaleComponent.singleClick.allowedLabels:[]
RatingScaleComponent.singleClick.allowedTypes:[]
RatingScaleComponent.singleClick.allowedUpdates:[]
RatingScaleComponent.singleClick.allowedVals:[]
RatingScaleComponent.singleClick.canBePath:True
RatingScaleComponent.singleClick.categ:Interface
RatingScaleComponent.singleClick.codeWanted:False
RatingScaleComponent.singleClick.direct:True
RatingScaleComponent.singleClick.hint:Should clicking the line accept that rating (without needing to confirm via 'accept')?
RatingScaleComponent.singleClick.inputType:bool
RatingScaleComponent.singleClick.label:Single click
RatingScaleComponent.singleClick.readOnly:False
RatingScaleComponent.singleClick.staticUpdater:None
RatingScaleComponent.singleClick.updates:constant
RatingScaleComponent.singleClick.val:False
RatingScaleComponent.singleClick.valType:bool
RatingScaleComponent.size.default:[1.0]
RatingScaleComponent.size.allowedLabels:[]
RatingScaleComponent.size.allowedTypes:[]
RatingScaleComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RatingScaleComponent.size.allowedVals:[]
RatingScaleComponent.size.canBePath:True
RatingScaleComponent.size.categ:Layout
RatingScaleComponent.size.codeWanted:False
RatingScaleComponent.size.direct:True
RatingScaleComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
RatingScaleComponent.size.inputType:single
RatingScaleComponent.size.label:Size
RatingScaleComponent.size.readOnly:False
RatingScaleComponent.size.staticUpdater:None
RatingScaleComponent.size.updates:constant
RatingScaleComponent.size.val:1.0
RatingScaleComponent.size.valType:list
RatingScaleComponent.startEstim.default:
RatingScaleComponent.startEstim.allowedLabels:[]
RatingScaleComponent.startEstim.allowedTypes:[]
RatingScaleComponent.startEstim.allowedUpdates:None
RatingScaleComponent.startEstim.allowedVals:[]
RatingScaleComponent.startEstim.canBePath:True
RatingScaleComponent.startEstim.categ:Basic
RatingScaleComponent.startEstim.codeWanted:False
RatingScaleComponent.startEstim.direct:False
RatingScaleComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
RatingScaleComponent.startEstim.inputType:single
RatingScaleComponent.startEstim.label:Expected start (s)
RatingScaleComponent.startEstim.readOnly:False
RatingScaleComponent.startEstim.staticUpdater:None
RatingScaleComponent.startEstim.updates:None
RatingScaleComponent.startEstim.val:
RatingScaleComponent.startEstim.valType:code
RatingScaleComponent.startType.default:'time (s)'
RatingScaleComponent.startType.allowedLabels:[]
RatingScaleComponent.startType.allowedTypes:[]
RatingScaleComponent.startType.allowedUpdates:None
RatingScaleComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
RatingScaleComponent.startType.canBePath:True
RatingScaleComponent.startType.categ:Basic
RatingScaleComponent.startType.codeWanted:False
RatingScaleComponent.startType.direct:False
RatingScaleComponent.startType.hint:How do you want to define your start point?
RatingScaleComponent.startType.inputType:choice
RatingScaleComponent.startType.label:start type
RatingScaleComponent.startType.readOnly:False
RatingScaleComponent.startType.staticUpdater:None
RatingScaleComponent.startType.updates:None
RatingScaleComponent.startType.val:time (s)
RatingScaleComponent.startType.valType:str
RatingScaleComponent.startVal.default:0.0
RatingScaleComponent.startVal.allowedLabels:[]
RatingScaleComponent.startVal.allowedTypes:[]
RatingScaleComponent.startVal.allowedUpdates:None
RatingScaleComponent.startVal.allowedVals:[]
RatingScaleComponent.startVal.canBePath:True
RatingScaleComponent.startVal.categ:Basic
RatingScaleComponent.startVal.codeWanted:False
RatingScaleComponent.startVal.direct:True
RatingScaleComponent.startVal.hint:When does the component start?
RatingScaleComponent.startVal.inputType:single
RatingScaleComponent.startVal.label:Start
RatingScaleComponent.startVal.readOnly:False
RatingScaleComponent.startVal.staticUpdater:None
RatingScaleComponent.startVal.updates:None
RatingScaleComponent.startVal.val:0.0
RatingScaleComponent.startVal.valType:code
RatingScaleComponent.stopType.default:'condition'
RatingScaleComponent.stopType.allowedLabels:[]
RatingScaleComponent.stopType.allowedTypes:[]
RatingScaleComponent.stopType.allowedUpdates:None
RatingScaleComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
RatingScaleComponent.stopType.canBePath:True
RatingScaleComponent.stopType.categ:Basic
RatingScaleComponent.stopType.codeWanted:False
RatingScaleComponent.stopType.direct:False
RatingScaleComponent.stopType.hint:How do you want to define your end point?
RatingScaleComponent.stopType.inputType:choice
RatingScaleComponent.stopType.label:stop type
RatingScaleComponent.stopType.readOnly:False
RatingScaleComponent.stopType.staticUpdater:None
RatingScaleComponent.stopType.updates:None
RatingScaleComponent.stopType.val:condition
RatingScaleComponent.stopType.valType:str
RatingScaleComponent.stopVal.default:
RatingScaleComponent.stopVal.allowedLabels:[]
RatingScaleComponent.stopVal.allowedTypes:[]
RatingScaleComponent.stopVal.allowedUpdates:[]
RatingScaleComponent.stopVal.allowedVals:[]
RatingScaleComponent.stopVal.canBePath:True
RatingScaleComponent.stopVal.categ:Basic
RatingScaleComponent.stopVal.codeWanted:False
RatingScaleComponent.stopVal.direct:True
RatingScaleComponent.stopVal.hint:When does the component end? (blank is endless)
RatingScaleComponent.stopVal.inputType:single
RatingScaleComponent.stopVal.label:Stop
RatingScaleComponent.stopVal.readOnly:False
RatingScaleComponent.stopVal.staticUpdater:None
RatingScaleComponent.stopVal.updates:constant
RatingScaleComponent.stopVal.val:
RatingScaleComponent.stopVal.valType:code
RatingScaleComponent.storeHistory.default:False
RatingScaleComponent.storeHistory.allowedLabels:[]
RatingScaleComponent.storeHistory.allowedTypes:[]
RatingScaleComponent.storeHistory.allowedUpdates:[]
RatingScaleComponent.storeHistory.allowedVals:[]
RatingScaleComponent.storeHistory.canBePath:True
RatingScaleComponent.storeHistory.categ:Data
RatingScaleComponent.storeHistory.codeWanted:False
RatingScaleComponent.storeHistory.direct:True
RatingScaleComponent.storeHistory.hint:store the history of (selection, time)
RatingScaleComponent.storeHistory.inputType:bool
RatingScaleComponent.storeHistory.label:Store history
RatingScaleComponent.storeHistory.readOnly:False
RatingScaleComponent.storeHistory.staticUpdater:None
RatingScaleComponent.storeHistory.updates:constant
RatingScaleComponent.storeHistory.val:False
RatingScaleComponent.storeHistory.valType:bool
RatingScaleComponent.storeRating.default:True
RatingScaleComponent.storeRating.allowedLabels:[]
RatingScaleComponent.storeRating.allowedTypes:[]
RatingScaleComponent.storeRating.allowedUpdates:[]
RatingScaleComponent.storeRating.allowedVals:[]
RatingScaleComponent.storeRating.canBePath:True
RatingScaleComponent.storeRating.categ:Data
RatingScaleComponent.storeRating.codeWanted:False
RatingScaleComponent.storeRating.direct:True
RatingScaleComponent.storeRating.hint:store the rating
RatingScaleComponent.storeRating.inputType:bool
RatingScaleComponent.storeRating.label:Store rating
RatingScaleComponent.storeRating.readOnly:False
RatingScaleComponent.storeRating.staticUpdater:None
RatingScaleComponent.storeRating.updates:constant
RatingScaleComponent.storeRating.val:True
RatingScaleComponent.storeRating.valType:bool
RatingScaleComponent.storeRatingTime.default:True
RatingScaleComponent.storeRatingTime.allowedLabels:[]
RatingScaleComponent.storeRatingTime.allowedTypes:[]
RatingScaleComponent.storeRatingTime.allowedUpdates:[]
RatingScaleComponent.storeRatingTime.allowedVals:[]
RatingScaleComponent.storeRatingTime.canBePath:True
RatingScaleComponent.storeRatingTime.categ:Data
RatingScaleComponent.storeRatingTime.codeWanted:False
RatingScaleComponent.storeRatingTime.direct:True
RatingScaleComponent.storeRatingTime.hint:store the time taken to make the choice (in seconds)
RatingScaleComponent.storeRatingTime.inputType:bool
RatingScaleComponent.storeRatingTime.label:Store rating time
RatingScaleComponent.storeRatingTime.readOnly:False
RatingScaleComponent.storeRatingTime.staticUpdater:None
RatingScaleComponent.storeRatingTime.updates:constant
RatingScaleComponent.storeRatingTime.val:True
RatingScaleComponent.storeRatingTime.valType:bool
RatingScaleComponent.syncScreenRefresh.default:False
RatingScaleComponent.syncScreenRefresh.allowedLabels:[]
RatingScaleComponent.syncScreenRefresh.allowedTypes:[]
RatingScaleComponent.syncScreenRefresh.allowedUpdates:None
RatingScaleComponent.syncScreenRefresh.allowedVals:[]
RatingScaleComponent.syncScreenRefresh.canBePath:True
RatingScaleComponent.syncScreenRefresh.categ:Data
RatingScaleComponent.syncScreenRefresh.codeWanted:False
RatingScaleComponent.syncScreenRefresh.direct:True
RatingScaleComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
RatingScaleComponent.syncScreenRefresh.inputType:bool
RatingScaleComponent.syncScreenRefresh.label:Sync timing with screen refresh
RatingScaleComponent.syncScreenRefresh.readOnly:False
RatingScaleComponent.syncScreenRefresh.staticUpdater:None
RatingScaleComponent.syncScreenRefresh.updates:None
RatingScaleComponent.syncScreenRefresh.val:False
RatingScaleComponent.syncScreenRefresh.valType:bool
RatingScaleComponent.tickHeight.default:None
RatingScaleComponent.tickHeight.allowedLabels:[]
RatingScaleComponent.tickHeight.allowedTypes:[]
RatingScaleComponent.tickHeight.allowedUpdates:[]
RatingScaleComponent.tickHeight.allowedVals:[]
RatingScaleComponent.tickHeight.canBePath:True
RatingScaleComponent.tickHeight.categ:Interface
RatingScaleComponent.tickHeight.codeWanted:False
RatingScaleComponent.tickHeight.direct:True
RatingScaleComponent.tickHeight.hint:height of tick marks (1 is upward, 0 is hidden, -1 is downward)
RatingScaleComponent.tickHeight.inputType:single
RatingScaleComponent.tickHeight.label:Tick height
RatingScaleComponent.tickHeight.readOnly:False
RatingScaleComponent.tickHeight.staticUpdater:None
RatingScaleComponent.tickHeight.updates:constant
RatingScaleComponent.tickHeight.val:
RatingScaleComponent.tickHeight.valType:num
RatingScaleComponent.visualAnalogScale.default:False
RatingScaleComponent.visualAnalogScale.allowedLabels:[]
RatingScaleComponent.visualAnalogScale.allowedTypes:[]
RatingScaleComponent.visualAnalogScale.allowedUpdates:[]
RatingScaleComponent.visualAnalogScale.allowedVals:[]
RatingScaleComponent.visualAnalogScale.canBePath:True
RatingScaleComponent.visualAnalogScale.categ:Data
RatingScaleComponent.visualAnalogScale.codeWanted:False
RatingScaleComponent.visualAnalogScale.direct:True
RatingScaleComponent.visualAnalogScale.hint:Show a continuous visual analog scale; returns 0.00 to 1.00; takes precedence over numeric scale or categorical choices
RatingScaleComponent.visualAnalogScale.inputType:bool
RatingScaleComponent.visualAnalogScale.label:Visual analog scale
RatingScaleComponent.visualAnalogScale.readOnly:False
RatingScaleComponent.visualAnalogScale.staticUpdater:None
RatingScaleComponent.visualAnalogScale.updates:constant
RatingScaleComponent.visualAnalogScale.val:False
RatingScaleComponent.visualAnalogScale.valType:bool
RegionOfInterestComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'lineColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori', 'shape', 'nVertices', 'config']
RegionOfInterestComponent.anchor.default:'center'
RegionOfInterestComponent.anchor.allowedLabels:[]
RegionOfInterestComponent.anchor.allowedTypes:[]
RegionOfInterestComponent.anchor.allowedUpdates:None
RegionOfInterestComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
RegionOfInterestComponent.anchor.canBePath:True
RegionOfInterestComponent.anchor.categ:Layout
RegionOfInterestComponent.anchor.codeWanted:False
RegionOfInterestComponent.anchor.direct:True
RegionOfInterestComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
RegionOfInterestComponent.anchor.inputType:choice
RegionOfInterestComponent.anchor.label:Anchor
RegionOfInterestComponent.anchor.readOnly:False
RegionOfInterestComponent.anchor.staticUpdater:None
RegionOfInterestComponent.anchor.updates:constant
RegionOfInterestComponent.anchor.val:center
RegionOfInterestComponent.anchor.valType:str
RegionOfInterestComponent.debug.default:False
RegionOfInterestComponent.debug.allowedLabels:[]
RegionOfInterestComponent.debug.allowedTypes:[]
RegionOfInterestComponent.debug.allowedUpdates:None
RegionOfInterestComponent.debug.allowedVals:[]
RegionOfInterestComponent.debug.canBePath:True
RegionOfInterestComponent.debug.categ:Testing
RegionOfInterestComponent.debug.codeWanted:False
RegionOfInterestComponent.debug.direct:True
RegionOfInterestComponent.debug.hint:In debug mode, the ROI is drawn in red. Use this to see what area of the screen is in the ROI.
RegionOfInterestComponent.debug.inputType:bool
RegionOfInterestComponent.debug.label:Debug Mode
RegionOfInterestComponent.debug.readOnly:False
RegionOfInterestComponent.debug.staticUpdater:None
RegionOfInterestComponent.debug.updates:None
RegionOfInterestComponent.debug.val:False
RegionOfInterestComponent.debug.valType:bool
RegionOfInterestComponent.disabled.default:False
RegionOfInterestComponent.disabled.allowedLabels:[]
RegionOfInterestComponent.disabled.allowedTypes:[]
RegionOfInterestComponent.disabled.allowedUpdates:None
RegionOfInterestComponent.disabled.allowedVals:[]
RegionOfInterestComponent.disabled.canBePath:True
RegionOfInterestComponent.disabled.categ:Testing
RegionOfInterestComponent.disabled.codeWanted:False
RegionOfInterestComponent.disabled.direct:False
RegionOfInterestComponent.disabled.hint:Disable this component
RegionOfInterestComponent.disabled.inputType:bool
RegionOfInterestComponent.disabled.label:Disable component
RegionOfInterestComponent.disabled.readOnly:False
RegionOfInterestComponent.disabled.staticUpdater:None
RegionOfInterestComponent.disabled.updates:None
RegionOfInterestComponent.disabled.val:False
RegionOfInterestComponent.disabled.valType:bool
RegionOfInterestComponent.durationEstim.default:
RegionOfInterestComponent.durationEstim.allowedLabels:[]
RegionOfInterestComponent.durationEstim.allowedTypes:[]
RegionOfInterestComponent.durationEstim.allowedUpdates:None
RegionOfInterestComponent.durationEstim.allowedVals:[]
RegionOfInterestComponent.durationEstim.canBePath:True
RegionOfInterestComponent.durationEstim.categ:Basic
RegionOfInterestComponent.durationEstim.codeWanted:False
RegionOfInterestComponent.durationEstim.direct:False
RegionOfInterestComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
RegionOfInterestComponent.durationEstim.inputType:single
RegionOfInterestComponent.durationEstim.label:Expected duration (s)
RegionOfInterestComponent.durationEstim.readOnly:False
RegionOfInterestComponent.durationEstim.staticUpdater:None
RegionOfInterestComponent.durationEstim.updates:None
RegionOfInterestComponent.durationEstim.val:
RegionOfInterestComponent.durationEstim.valType:code
RegionOfInterestComponent.endRoutineOn.default:'none'
RegionOfInterestComponent.endRoutineOn.allowedLabels:[]
RegionOfInterestComponent.endRoutineOn.allowedTypes:[]
RegionOfInterestComponent.endRoutineOn.allowedUpdates:None
RegionOfInterestComponent.endRoutineOn.allowedVals:['look at', 'look away', 'none']
RegionOfInterestComponent.endRoutineOn.canBePath:True
RegionOfInterestComponent.endRoutineOn.categ:Basic
RegionOfInterestComponent.endRoutineOn.codeWanted:False
RegionOfInterestComponent.endRoutineOn.direct:True
RegionOfInterestComponent.endRoutineOn.hint:Under what condition should this ROI end the routine?
RegionOfInterestComponent.endRoutineOn.inputType:choice
RegionOfInterestComponent.endRoutineOn.label:End Routine On...
RegionOfInterestComponent.endRoutineOn.readOnly:False
RegionOfInterestComponent.endRoutineOn.staticUpdater:None
RegionOfInterestComponent.endRoutineOn.updates:None
RegionOfInterestComponent.endRoutineOn.val:none
RegionOfInterestComponent.endRoutineOn.valType:str
RegionOfInterestComponent.lookDur.default:0.1
RegionOfInterestComponent.lookDur.allowedLabels:[]
RegionOfInterestComponent.lookDur.allowedTypes:[]
RegionOfInterestComponent.lookDur.allowedUpdates:None
RegionOfInterestComponent.lookDur.allowedVals:[]
RegionOfInterestComponent.lookDur.canBePath:True
RegionOfInterestComponent.lookDur.categ:Basic
RegionOfInterestComponent.lookDur.codeWanted:False
RegionOfInterestComponent.lookDur.direct:True
RegionOfInterestComponent.lookDur.hint:Minimum dwell time within roi (look at) or outside roi (look away).
RegionOfInterestComponent.lookDur.inputType:single
RegionOfInterestComponent.lookDur.label:Min. Look Time
RegionOfInterestComponent.lookDur.readOnly:False
RegionOfInterestComponent.lookDur.staticUpdater:None
RegionOfInterestComponent.lookDur.updates:None
RegionOfInterestComponent.lookDur.val:0.1
RegionOfInterestComponent.lookDur.valType:num
RegionOfInterestComponent.nVertices.default:4
RegionOfInterestComponent.nVertices.allowedLabels:[]
RegionOfInterestComponent.nVertices.allowedTypes:[]
RegionOfInterestComponent.nVertices.allowedUpdates:['constant']
RegionOfInterestComponent.nVertices.allowedVals:[]
RegionOfInterestComponent.nVertices.canBePath:True
RegionOfInterestComponent.nVertices.categ:Basic
RegionOfInterestComponent.nVertices.codeWanted:False
RegionOfInterestComponent.nVertices.direct:True
RegionOfInterestComponent.nVertices.hint:How many vertices in your regular polygon?
RegionOfInterestComponent.nVertices.inputType:single
RegionOfInterestComponent.nVertices.label:Num. vertices
RegionOfInterestComponent.nVertices.readOnly:False
RegionOfInterestComponent.nVertices.staticUpdater:None
RegionOfInterestComponent.nVertices.updates:constant
RegionOfInterestComponent.nVertices.val:4
RegionOfInterestComponent.nVertices.valType:int
RegionOfInterestComponent.name.default:roi
RegionOfInterestComponent.name.allowedLabels:[]
RegionOfInterestComponent.name.allowedTypes:[]
RegionOfInterestComponent.name.allowedUpdates:None
RegionOfInterestComponent.name.allowedVals:[]
RegionOfInterestComponent.name.canBePath:True
RegionOfInterestComponent.name.categ:Basic
RegionOfInterestComponent.name.codeWanted:False
RegionOfInterestComponent.name.direct:True
RegionOfInterestComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
RegionOfInterestComponent.name.inputType:single
RegionOfInterestComponent.name.label:Name
RegionOfInterestComponent.name.readOnly:False
RegionOfInterestComponent.name.staticUpdater:None
RegionOfInterestComponent.name.val:roi
RegionOfInterestComponent.name.valType:code
RegionOfInterestComponent.ori.default:0.0
RegionOfInterestComponent.ori.allowedLabels:[]
RegionOfInterestComponent.ori.allowedTypes:[]
RegionOfInterestComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RegionOfInterestComponent.ori.allowedVals:[-360, 360]
RegionOfInterestComponent.ori.canBePath:True
RegionOfInterestComponent.ori.categ:Layout
RegionOfInterestComponent.ori.codeWanted:False
RegionOfInterestComponent.ori.direct:True
RegionOfInterestComponent.ori.hint:Orientation of this stimulus (in deg)
RegionOfInterestComponent.ori.inputType:spin
RegionOfInterestComponent.ori.label:Orientation
RegionOfInterestComponent.ori.readOnly:False
RegionOfInterestComponent.ori.staticUpdater:None
RegionOfInterestComponent.ori.updates:constant
RegionOfInterestComponent.ori.val:0
RegionOfInterestComponent.ori.valType:num
RegionOfInterestComponent.pos.default:(0, 0)
RegionOfInterestComponent.pos.allowedLabels:[]
RegionOfInterestComponent.pos.allowedTypes:[]
RegionOfInterestComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RegionOfInterestComponent.pos.allowedVals:[]
RegionOfInterestComponent.pos.canBePath:True
RegionOfInterestComponent.pos.categ:Layout
RegionOfInterestComponent.pos.codeWanted:False
RegionOfInterestComponent.pos.direct:True
RegionOfInterestComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
RegionOfInterestComponent.pos.inputType:single
RegionOfInterestComponent.pos.label:Position [x,y]
RegionOfInterestComponent.pos.readOnly:False
RegionOfInterestComponent.pos.staticUpdater:None
RegionOfInterestComponent.pos.updates:constant
RegionOfInterestComponent.pos.val:(0, 0)
RegionOfInterestComponent.pos.valType:list
RegionOfInterestComponent.save.default:'every look'
RegionOfInterestComponent.save.allowedLabels:[]
RegionOfInterestComponent.save.allowedTypes:[]
RegionOfInterestComponent.save.allowedUpdates:None
RegionOfInterestComponent.save.allowedVals:['first look', 'last look', 'every look', 'none']
RegionOfInterestComponent.save.canBePath:True
RegionOfInterestComponent.save.categ:Data
RegionOfInterestComponent.save.codeWanted:False
RegionOfInterestComponent.save.direct:False
RegionOfInterestComponent.save.hint:What looks on this ROI should be saved to the data output?
RegionOfInterestComponent.save.inputType:choice
RegionOfInterestComponent.save.label:Save...
RegionOfInterestComponent.save.readOnly:False
RegionOfInterestComponent.save.staticUpdater:None
RegionOfInterestComponent.save.updates:None
RegionOfInterestComponent.save.val:every look
RegionOfInterestComponent.save.valType:str
RegionOfInterestComponent.saveStartStop.default:True
RegionOfInterestComponent.saveStartStop.allowedLabels:[]
RegionOfInterestComponent.saveStartStop.allowedTypes:[]
RegionOfInterestComponent.saveStartStop.allowedUpdates:None
RegionOfInterestComponent.saveStartStop.allowedVals:[]
RegionOfInterestComponent.saveStartStop.canBePath:True
RegionOfInterestComponent.saveStartStop.categ:Data
RegionOfInterestComponent.saveStartStop.codeWanted:False
RegionOfInterestComponent.saveStartStop.direct:True
RegionOfInterestComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
RegionOfInterestComponent.saveStartStop.inputType:bool
RegionOfInterestComponent.saveStartStop.label:Save onset/offset times
RegionOfInterestComponent.saveStartStop.readOnly:False
RegionOfInterestComponent.saveStartStop.staticUpdater:None
RegionOfInterestComponent.saveStartStop.updates:None
RegionOfInterestComponent.saveStartStop.val:True
RegionOfInterestComponent.saveStartStop.valType:bool
RegionOfInterestComponent.shape.default:'triangle'
RegionOfInterestComponent.shape.allowedLabels:[]
RegionOfInterestComponent.shape.allowedTypes:[]
RegionOfInterestComponent.shape.allowedUpdates:None
RegionOfInterestComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'circle', 'cross', 'star', 'regular polygon...', 'custom polygon...']
RegionOfInterestComponent.shape.canBePath:True
RegionOfInterestComponent.shape.categ:Basic
RegionOfInterestComponent.shape.codeWanted:False
RegionOfInterestComponent.shape.direct:False
RegionOfInterestComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices and with 'custom polygon...' you can set vertices
RegionOfInterestComponent.shape.inputType:choice
RegionOfInterestComponent.shape.label:Shape
RegionOfInterestComponent.shape.readOnly:False
RegionOfInterestComponent.shape.staticUpdater:None
RegionOfInterestComponent.shape.updates:None
RegionOfInterestComponent.shape.val:triangle
RegionOfInterestComponent.shape.valType:str
RegionOfInterestComponent.size.default:(0.5, 0.5)
RegionOfInterestComponent.size.allowedLabels:[]
RegionOfInterestComponent.size.allowedTypes:[]
RegionOfInterestComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RegionOfInterestComponent.size.allowedVals:[]
RegionOfInterestComponent.size.canBePath:True
RegionOfInterestComponent.size.categ:Layout
RegionOfInterestComponent.size.codeWanted:False
RegionOfInterestComponent.size.direct:True
RegionOfInterestComponent.size.hint:Size of this stimulus [w,h]. Note that for a line only the first value is used, for triangle and rect the [w,h] is as expected,
 but for higher-order polygons it represents the [w,h] of the ellipse that the polygon sits on!! 
RegionOfInterestComponent.size.inputType:single
RegionOfInterestComponent.size.label:Size [w,h]
RegionOfInterestComponent.size.readOnly:False
RegionOfInterestComponent.size.staticUpdater:None
RegionOfInterestComponent.size.updates:constant
RegionOfInterestComponent.size.val:(0.5, 0.5)
RegionOfInterestComponent.size.valType:list
RegionOfInterestComponent.startEstim.default:
RegionOfInterestComponent.startEstim.allowedLabels:[]
RegionOfInterestComponent.startEstim.allowedTypes:[]
RegionOfInterestComponent.startEstim.allowedUpdates:None
RegionOfInterestComponent.startEstim.allowedVals:[]
RegionOfInterestComponent.startEstim.canBePath:True
RegionOfInterestComponent.startEstim.categ:Basic
RegionOfInterestComponent.startEstim.codeWanted:False
RegionOfInterestComponent.startEstim.direct:False
RegionOfInterestComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
RegionOfInterestComponent.startEstim.inputType:single
RegionOfInterestComponent.startEstim.label:Expected start (s)
RegionOfInterestComponent.startEstim.readOnly:False
RegionOfInterestComponent.startEstim.staticUpdater:None
RegionOfInterestComponent.startEstim.updates:None
RegionOfInterestComponent.startEstim.val:
RegionOfInterestComponent.startEstim.valType:code
RegionOfInterestComponent.startType.default:'time (s)'
RegionOfInterestComponent.startType.allowedLabels:[]
RegionOfInterestComponent.startType.allowedTypes:[]
RegionOfInterestComponent.startType.allowedUpdates:None
RegionOfInterestComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
RegionOfInterestComponent.startType.canBePath:True
RegionOfInterestComponent.startType.categ:Basic
RegionOfInterestComponent.startType.codeWanted:False
RegionOfInterestComponent.startType.direct:False
RegionOfInterestComponent.startType.hint:How do you want to define your start point?
RegionOfInterestComponent.startType.inputType:choice
RegionOfInterestComponent.startType.label:start type
RegionOfInterestComponent.startType.readOnly:False
RegionOfInterestComponent.startType.staticUpdater:None
RegionOfInterestComponent.startType.updates:None
RegionOfInterestComponent.startType.val:time (s)
RegionOfInterestComponent.startType.valType:str
RegionOfInterestComponent.startVal.default:0.0
RegionOfInterestComponent.startVal.allowedLabels:[]
RegionOfInterestComponent.startVal.allowedTypes:[]
RegionOfInterestComponent.startVal.allowedUpdates:None
RegionOfInterestComponent.startVal.allowedVals:[]
RegionOfInterestComponent.startVal.canBePath:True
RegionOfInterestComponent.startVal.categ:Basic
RegionOfInterestComponent.startVal.codeWanted:False
RegionOfInterestComponent.startVal.direct:True
RegionOfInterestComponent.startVal.hint:When does the component start?
RegionOfInterestComponent.startVal.inputType:single
RegionOfInterestComponent.startVal.label:Start
RegionOfInterestComponent.startVal.readOnly:False
RegionOfInterestComponent.startVal.staticUpdater:None
RegionOfInterestComponent.startVal.updates:None
RegionOfInterestComponent.startVal.val:0.0
RegionOfInterestComponent.startVal.valType:code
RegionOfInterestComponent.stopType.default:'duration (s)'
RegionOfInterestComponent.stopType.allowedLabels:[]
RegionOfInterestComponent.stopType.allowedTypes:[]
RegionOfInterestComponent.stopType.allowedUpdates:None
RegionOfInterestComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
RegionOfInterestComponent.stopType.canBePath:True
RegionOfInterestComponent.stopType.categ:Basic
RegionOfInterestComponent.stopType.codeWanted:False
RegionOfInterestComponent.stopType.direct:False
RegionOfInterestComponent.stopType.hint:How do you want to define your end point?
RegionOfInterestComponent.stopType.inputType:choice
RegionOfInterestComponent.stopType.label:stop type
RegionOfInterestComponent.stopType.readOnly:False
RegionOfInterestComponent.stopType.staticUpdater:None
RegionOfInterestComponent.stopType.updates:None
RegionOfInterestComponent.stopType.val:duration (s)
RegionOfInterestComponent.stopType.valType:str
RegionOfInterestComponent.stopVal.default:1.0
RegionOfInterestComponent.stopVal.allowedLabels:[]
RegionOfInterestComponent.stopVal.allowedTypes:[]
RegionOfInterestComponent.stopVal.allowedUpdates:[]
RegionOfInterestComponent.stopVal.allowedVals:[]
RegionOfInterestComponent.stopVal.canBePath:True
RegionOfInterestComponent.stopVal.categ:Basic
RegionOfInterestComponent.stopVal.codeWanted:False
RegionOfInterestComponent.stopVal.direct:True
RegionOfInterestComponent.stopVal.hint:When does the component end? (blank is endless)
RegionOfInterestComponent.stopVal.inputType:single
RegionOfInterestComponent.stopVal.label:Stop
RegionOfInterestComponent.stopVal.readOnly:False
RegionOfInterestComponent.stopVal.staticUpdater:None
RegionOfInterestComponent.stopVal.updates:constant
RegionOfInterestComponent.stopVal.val:1.0
RegionOfInterestComponent.stopVal.valType:code
RegionOfInterestComponent.syncScreenRefresh.default:True
RegionOfInterestComponent.syncScreenRefresh.allowedLabels:[]
RegionOfInterestComponent.syncScreenRefresh.allowedTypes:[]
RegionOfInterestComponent.syncScreenRefresh.allowedUpdates:None
RegionOfInterestComponent.syncScreenRefresh.allowedVals:[]
RegionOfInterestComponent.syncScreenRefresh.canBePath:True
RegionOfInterestComponent.syncScreenRefresh.categ:Data
RegionOfInterestComponent.syncScreenRefresh.codeWanted:False
RegionOfInterestComponent.syncScreenRefresh.direct:True
RegionOfInterestComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
RegionOfInterestComponent.syncScreenRefresh.inputType:bool
RegionOfInterestComponent.syncScreenRefresh.label:Sync timing with screen refresh
RegionOfInterestComponent.syncScreenRefresh.readOnly:True
RegionOfInterestComponent.syncScreenRefresh.staticUpdater:None
RegionOfInterestComponent.syncScreenRefresh.updates:None
RegionOfInterestComponent.syncScreenRefresh.val:True
RegionOfInterestComponent.syncScreenRefresh.valType:bool
RegionOfInterestComponent.timeRelativeTo.default:'roi onset'
RegionOfInterestComponent.timeRelativeTo.allowedLabels:[]
RegionOfInterestComponent.timeRelativeTo.allowedTypes:[]
RegionOfInterestComponent.timeRelativeTo.allowedUpdates:None
RegionOfInterestComponent.timeRelativeTo.allowedVals:['roi onset', 'experiment', 'routine']
RegionOfInterestComponent.timeRelativeTo.canBePath:True
RegionOfInterestComponent.timeRelativeTo.categ:Data
RegionOfInterestComponent.timeRelativeTo.codeWanted:False
RegionOfInterestComponent.timeRelativeTo.direct:False
RegionOfInterestComponent.timeRelativeTo.hint:What should the values of roi.time should be relative to?
RegionOfInterestComponent.timeRelativeTo.inputType:choice
RegionOfInterestComponent.timeRelativeTo.label:Time Relative To...
RegionOfInterestComponent.timeRelativeTo.readOnly:False
RegionOfInterestComponent.timeRelativeTo.staticUpdater:None
RegionOfInterestComponent.timeRelativeTo.updates:constant
RegionOfInterestComponent.timeRelativeTo.val:roi onset
RegionOfInterestComponent.timeRelativeTo.valType:str
RegionOfInterestComponent.units.default:'from exp settings'
RegionOfInterestComponent.units.allowedLabels:[]
RegionOfInterestComponent.units.allowedTypes:[]
RegionOfInterestComponent.units.allowedUpdates:None
RegionOfInterestComponent.units.allowedVals:['from exp settings']
RegionOfInterestComponent.units.canBePath:True
RegionOfInterestComponent.units.categ:Layout
RegionOfInterestComponent.units.codeWanted:False
RegionOfInterestComponent.units.direct:True
RegionOfInterestComponent.units.hint:Units of dimensions for this stimulus
RegionOfInterestComponent.units.inputType:choice
RegionOfInterestComponent.units.label:Spatial Units
RegionOfInterestComponent.units.readOnly:False
RegionOfInterestComponent.units.staticUpdater:None
RegionOfInterestComponent.units.updates:None
RegionOfInterestComponent.units.val:from exp settings
RegionOfInterestComponent.units.valType:str
RegionOfInterestComponent.vertices.default:[]
RegionOfInterestComponent.vertices.allowedLabels:[]
RegionOfInterestComponent.vertices.allowedTypes:[]
RegionOfInterestComponent.vertices.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RegionOfInterestComponent.vertices.allowedVals:[]
RegionOfInterestComponent.vertices.canBePath:True
RegionOfInterestComponent.vertices.categ:Basic
RegionOfInterestComponent.vertices.codeWanted:False
RegionOfInterestComponent.vertices.direct:True
RegionOfInterestComponent.vertices.hint:What are the vertices of your polygon? Should be an nx2 array or a list of [x, y] lists
RegionOfInterestComponent.vertices.inputType:single
RegionOfInterestComponent.vertices.label:Vertices
RegionOfInterestComponent.vertices.readOnly:False
RegionOfInterestComponent.vertices.staticUpdater:None
RegionOfInterestComponent.vertices.updates:constant
RegionOfInterestComponent.vertices.val:
RegionOfInterestComponent.vertices.valType:list
ResourceManagerComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType']
ResourceManagerComponent.actionType.default:'Start and Check'
ResourceManagerComponent.actionType.allowedLabels:[]
ResourceManagerComponent.actionType.allowedTypes:[]
ResourceManagerComponent.actionType.allowedUpdates:None
ResourceManagerComponent.actionType.allowedVals:['Start and Check', 'Start Only', 'Check Only']
ResourceManagerComponent.actionType.canBePath:True
ResourceManagerComponent.actionType.categ:Basic
ResourceManagerComponent.actionType.codeWanted:False
ResourceManagerComponent.actionType.direct:True
ResourceManagerComponent.actionType.hint:Should this component start an / or check resource preloading?
ResourceManagerComponent.actionType.inputType:choice
ResourceManagerComponent.actionType.label:Preload Actions
ResourceManagerComponent.actionType.readOnly:False
ResourceManagerComponent.actionType.staticUpdater:None
ResourceManagerComponent.actionType.updates:None
ResourceManagerComponent.actionType.val:Start and Check
ResourceManagerComponent.actionType.valType:str
ResourceManagerComponent.checkAll.default:[]
ResourceManagerComponent.checkAll.allowedLabels:[]
ResourceManagerComponent.checkAll.allowedTypes:[]
ResourceManagerComponent.checkAll.allowedUpdates:None
ResourceManagerComponent.checkAll.allowedVals:[]
ResourceManagerComponent.checkAll.canBePath:True
ResourceManagerComponent.checkAll.categ:Basic
ResourceManagerComponent.checkAll.codeWanted:False
ResourceManagerComponent.checkAll.direct:True
ResourceManagerComponent.checkAll.hint:When checking these resources, also check for all currently downloading?
ResourceManagerComponent.checkAll.inputType:bool
ResourceManagerComponent.checkAll.label:Check All
ResourceManagerComponent.checkAll.readOnly:False
ResourceManagerComponent.checkAll.staticUpdater:None
ResourceManagerComponent.checkAll.updates:None
ResourceManagerComponent.checkAll.val:[]
ResourceManagerComponent.checkAll.valType:bool
ResourceManagerComponent.disabled.default:False
ResourceManagerComponent.disabled.allowedLabels:[]
ResourceManagerComponent.disabled.allowedTypes:[]
ResourceManagerComponent.disabled.allowedUpdates:None
ResourceManagerComponent.disabled.allowedVals:[]
ResourceManagerComponent.disabled.canBePath:True
ResourceManagerComponent.disabled.categ:Testing
ResourceManagerComponent.disabled.codeWanted:False
ResourceManagerComponent.disabled.direct:False
ResourceManagerComponent.disabled.hint:Disable this component
ResourceManagerComponent.disabled.inputType:bool
ResourceManagerComponent.disabled.label:Disable component
ResourceManagerComponent.disabled.readOnly:False
ResourceManagerComponent.disabled.staticUpdater:None
ResourceManagerComponent.disabled.updates:None
ResourceManagerComponent.disabled.val:False
ResourceManagerComponent.disabled.valType:bool
ResourceManagerComponent.durationEstim.default:
ResourceManagerComponent.durationEstim.allowedLabels:[]
ResourceManagerComponent.durationEstim.allowedTypes:[]
ResourceManagerComponent.durationEstim.allowedUpdates:None
ResourceManagerComponent.durationEstim.allowedVals:[]
ResourceManagerComponent.durationEstim.canBePath:True
ResourceManagerComponent.durationEstim.categ:Basic
ResourceManagerComponent.durationEstim.codeWanted:False
ResourceManagerComponent.durationEstim.direct:False
ResourceManagerComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ResourceManagerComponent.durationEstim.inputType:single
ResourceManagerComponent.durationEstim.label:Expected duration (s)
ResourceManagerComponent.durationEstim.readOnly:False
ResourceManagerComponent.durationEstim.staticUpdater:None
ResourceManagerComponent.durationEstim.updates:None
ResourceManagerComponent.durationEstim.val:
ResourceManagerComponent.durationEstim.valType:code
ResourceManagerComponent.forceEndRoutine.default:False
ResourceManagerComponent.forceEndRoutine.allowedLabels:[]
ResourceManagerComponent.forceEndRoutine.allowedTypes:[]
ResourceManagerComponent.forceEndRoutine.allowedUpdates:None
ResourceManagerComponent.forceEndRoutine.allowedVals:[]
ResourceManagerComponent.forceEndRoutine.canBePath:True
ResourceManagerComponent.forceEndRoutine.categ:Basic
ResourceManagerComponent.forceEndRoutine.codeWanted:False
ResourceManagerComponent.forceEndRoutine.direct:True
ResourceManagerComponent.forceEndRoutine.hint:Should we end the Routine when the resource download is complete?
ResourceManagerComponent.forceEndRoutine.inputType:bool
ResourceManagerComponent.forceEndRoutine.label:forceEndRoutine
ResourceManagerComponent.forceEndRoutine.readOnly:False
ResourceManagerComponent.forceEndRoutine.staticUpdater:None
ResourceManagerComponent.forceEndRoutine.updates:constant
ResourceManagerComponent.forceEndRoutine.val:False
ResourceManagerComponent.forceEndRoutine.valType:bool
ResourceManagerComponent.name.default:resources
ResourceManagerComponent.name.allowedLabels:[]
ResourceManagerComponent.name.allowedTypes:[]
ResourceManagerComponent.name.allowedUpdates:None
ResourceManagerComponent.name.allowedVals:[]
ResourceManagerComponent.name.canBePath:True
ResourceManagerComponent.name.categ:Basic
ResourceManagerComponent.name.codeWanted:False
ResourceManagerComponent.name.direct:True
ResourceManagerComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
ResourceManagerComponent.name.inputType:single
ResourceManagerComponent.name.label:Name
ResourceManagerComponent.name.readOnly:False
ResourceManagerComponent.name.staticUpdater:None
ResourceManagerComponent.name.val:resources
ResourceManagerComponent.name.valType:code
ResourceManagerComponent.resources.default:[]
ResourceManagerComponent.resources.allowedLabels:[]
ResourceManagerComponent.resources.allowedTypes:[]
ResourceManagerComponent.resources.allowedUpdates:None
ResourceManagerComponent.resources.allowedVals:[]
ResourceManagerComponent.resources.canBePath:True
ResourceManagerComponent.resources.categ:Basic
ResourceManagerComponent.resources.codeWanted:False
ResourceManagerComponent.resources.direct:False
ResourceManagerComponent.resources.hint:Resources to download/check
ResourceManagerComponent.resources.inputType:fileList
ResourceManagerComponent.resources.label:Resources
ResourceManagerComponent.resources.readOnly:False
ResourceManagerComponent.resources.staticUpdater:None
ResourceManagerComponent.resources.updates:constant
ResourceManagerComponent.resources.val:[]
ResourceManagerComponent.resources.valType:list
ResourceManagerComponent.startEstim.default:
ResourceManagerComponent.startEstim.allowedLabels:[]
ResourceManagerComponent.startEstim.allowedTypes:[]
ResourceManagerComponent.startEstim.allowedUpdates:None
ResourceManagerComponent.startEstim.allowedVals:[]
ResourceManagerComponent.startEstim.canBePath:True
ResourceManagerComponent.startEstim.categ:Basic
ResourceManagerComponent.startEstim.codeWanted:False
ResourceManagerComponent.startEstim.direct:False
ResourceManagerComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ResourceManagerComponent.startEstim.inputType:single
ResourceManagerComponent.startEstim.label:Expected start (s)
ResourceManagerComponent.startEstim.readOnly:False
ResourceManagerComponent.startEstim.staticUpdater:None
ResourceManagerComponent.startEstim.updates:None
ResourceManagerComponent.startEstim.val:
ResourceManagerComponent.startEstim.valType:code
ResourceManagerComponent.startType.default:'time (s)'
ResourceManagerComponent.startType.allowedLabels:[]
ResourceManagerComponent.startType.allowedTypes:[]
ResourceManagerComponent.startType.allowedUpdates:None
ResourceManagerComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ResourceManagerComponent.startType.canBePath:True
ResourceManagerComponent.startType.categ:Basic
ResourceManagerComponent.startType.codeWanted:False
ResourceManagerComponent.startType.direct:False
ResourceManagerComponent.startType.hint:How do you want to define your start point?
ResourceManagerComponent.startType.inputType:choice
ResourceManagerComponent.startType.label:start type
ResourceManagerComponent.startType.readOnly:False
ResourceManagerComponent.startType.staticUpdater:None
ResourceManagerComponent.startType.updates:None
ResourceManagerComponent.startType.val:time (s)
ResourceManagerComponent.startType.valType:str
ResourceManagerComponent.startVal.default:0
ResourceManagerComponent.startVal.allowedLabels:[]
ResourceManagerComponent.startVal.allowedTypes:[]
ResourceManagerComponent.startVal.allowedUpdates:None
ResourceManagerComponent.startVal.allowedVals:[]
ResourceManagerComponent.startVal.canBePath:True
ResourceManagerComponent.startVal.categ:Basic
ResourceManagerComponent.startVal.codeWanted:False
ResourceManagerComponent.startVal.direct:True
ResourceManagerComponent.startVal.hint:When does the component start?
ResourceManagerComponent.startVal.inputType:single
ResourceManagerComponent.startVal.label:Start
ResourceManagerComponent.startVal.readOnly:False
ResourceManagerComponent.startVal.staticUpdater:None
ResourceManagerComponent.startVal.updates:None
ResourceManagerComponent.startVal.val:0
ResourceManagerComponent.startVal.valType:code
ResourceManagerComponent.stopType.default:'duration (s)'
ResourceManagerComponent.stopType.allowedLabels:[]
ResourceManagerComponent.stopType.allowedTypes:[]
ResourceManagerComponent.stopType.allowedUpdates:None
ResourceManagerComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ResourceManagerComponent.stopType.canBePath:True
ResourceManagerComponent.stopType.categ:Basic
ResourceManagerComponent.stopType.codeWanted:False
ResourceManagerComponent.stopType.direct:False
ResourceManagerComponent.stopType.hint:How do you want to define your end point?
ResourceManagerComponent.stopType.inputType:choice
ResourceManagerComponent.stopType.label:stop type
ResourceManagerComponent.stopType.readOnly:False
ResourceManagerComponent.stopType.staticUpdater:None
ResourceManagerComponent.stopType.updates:None
ResourceManagerComponent.stopType.val:duration (s)
ResourceManagerComponent.stopType.valType:str
ResourceManagerComponent.stopVal.default:
ResourceManagerComponent.stopVal.allowedLabels:[]
ResourceManagerComponent.stopVal.allowedTypes:[]
ResourceManagerComponent.stopVal.allowedUpdates:[]
ResourceManagerComponent.stopVal.allowedVals:[]
ResourceManagerComponent.stopVal.canBePath:True
ResourceManagerComponent.stopVal.categ:Basic
ResourceManagerComponent.stopVal.codeWanted:False
ResourceManagerComponent.stopVal.direct:True
ResourceManagerComponent.stopVal.hint:When does the component end? (blank is endless)
ResourceManagerComponent.stopVal.inputType:single
ResourceManagerComponent.stopVal.label:Check
ResourceManagerComponent.stopVal.readOnly:False
ResourceManagerComponent.stopVal.staticUpdater:None
ResourceManagerComponent.stopVal.updates:constant
ResourceManagerComponent.stopVal.val:
ResourceManagerComponent.stopVal.valType:code
SettingsComponent.order:['expName', 'Use version', 'Show info dlg', 'Enable Escape', 'Experiment info', 'Data filename', 'Data file delimiter', 'Save excel file', 'Save csv file', 'Save wide csv file', 'Save psydat file', 'Save hdf5 file', 'Save log file', 'logging level', 'Audio lib', 'Audio latency priority', 'Force stereo', 'HTML path', 'exportHTML', 'Completed URL', 'Incomplete URL', 'Resources', 'Monitor', 'Screen', 'Full-screen window', 'Window size (pixels)', 'Units', 'color', 'colorSpace', 'eyetracker', 'gpAddress', 'gpPort', 'elModel', 'elAddress', 'elSimMode']
SettingsComponent.Audio latency priority.default:'use prefs'
SettingsComponent.Audio latency priority.allowedLabels:['use prefs', '0: Latency not important', '1: Share low-latency driver', '2: Exclusive low-latency', '3: Aggressive low-latency', '4: Latency critical']
SettingsComponent.Audio latency priority.allowedTypes:[]
SettingsComponent.Audio latency priority.allowedUpdates:None
SettingsComponent.Audio latency priority.allowedVals:['use prefs', '0', '1', '2', '3', '4']
SettingsComponent.Audio latency priority.canBePath:True
SettingsComponent.Audio latency priority.categ:Audio
SettingsComponent.Audio latency priority.codeWanted:False
SettingsComponent.Audio latency priority.direct:True
SettingsComponent.Audio latency priority.hint:How important is audio latency for you? If essential then you may need to get all your sounds in correct formats.
SettingsComponent.Audio latency priority.inputType:choice
SettingsComponent.Audio latency priority.label:Audio latency priority
SettingsComponent.Audio latency priority.readOnly:False
SettingsComponent.Audio latency priority.staticUpdater:None
SettingsComponent.Audio latency priority.updates:None
SettingsComponent.Audio latency priority.val:use prefs
SettingsComponent.Audio latency priority.valType:str
SettingsComponent.Audio lib.default:'use prefs'
SettingsComponent.Audio lib.allowedLabels:[]
SettingsComponent.Audio lib.allowedTypes:[]
SettingsComponent.Audio lib.allowedUpdates:None
SettingsComponent.Audio lib.allowedVals:['use prefs', 'ptb', 'pyo', 'sounddevice', 'pygame']
SettingsComponent.Audio lib.canBePath:True
SettingsComponent.Audio lib.categ:Audio
SettingsComponent.Audio lib.codeWanted:False
SettingsComponent.Audio lib.direct:True
SettingsComponent.Audio lib.hint:Which Python sound engine do you want to play your sounds?
SettingsComponent.Audio lib.inputType:choice
SettingsComponent.Audio lib.label:Audio library
SettingsComponent.Audio lib.readOnly:False
SettingsComponent.Audio lib.staticUpdater:None
SettingsComponent.Audio lib.updates:None
SettingsComponent.Audio lib.val:use prefs
SettingsComponent.Audio lib.valType:str
SettingsComponent.Completed URL.default:''
SettingsComponent.Completed URL.allowedLabels:[]
SettingsComponent.Completed URL.allowedTypes:[]
SettingsComponent.Completed URL.allowedUpdates:None
SettingsComponent.Completed URL.allowedVals:[]
SettingsComponent.Completed URL.canBePath:True
SettingsComponent.Completed URL.categ:Online
SettingsComponent.Completed URL.codeWanted:False
SettingsComponent.Completed URL.direct:True
SettingsComponent.Completed URL.hint:Where should participants be redirected after the experiment on completion
 INSERT COMPLETION URL E.G.?
SettingsComponent.Completed URL.inputType:single
SettingsComponent.Completed URL.label:Completed URL
SettingsComponent.Completed URL.readOnly:False
SettingsComponent.Completed URL.staticUpdater:None
SettingsComponent.Completed URL.updates:None
SettingsComponent.Completed URL.val:
SettingsComponent.Completed URL.valType:str
SettingsComponent.Data file delimiter.default:'auto'
SettingsComponent.Data file delimiter.allowedLabels:[]
SettingsComponent.Data file delimiter.allowedTypes:[]
SettingsComponent.Data file delimiter.allowedUpdates:None
SettingsComponent.Data file delimiter.allowedVals:['auto', 'comma', 'semicolon', 'tab']
SettingsComponent.Data file delimiter.canBePath:True
SettingsComponent.Data file delimiter.categ:Data
SettingsComponent.Data file delimiter.codeWanted:False
SettingsComponent.Data file delimiter.direct:True
SettingsComponent.Data file delimiter.hint:What symbol should the data file use to separate columns? Auto will select a delimiter automatically from the filename.
SettingsComponent.Data file delimiter.inputType:choice
SettingsComponent.Data file delimiter.label:Data file delimiter
SettingsComponent.Data file delimiter.readOnly:False
SettingsComponent.Data file delimiter.staticUpdater:None
SettingsComponent.Data file delimiter.updates:None
SettingsComponent.Data file delimiter.val:auto
SettingsComponent.Data file delimiter.valType:str
SettingsComponent.Data filename.default:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.allowedLabels:[]
SettingsComponent.Data filename.allowedTypes:[]
SettingsComponent.Data filename.allowedUpdates:None
SettingsComponent.Data filename.allowedVals:[]
SettingsComponent.Data filename.canBePath:True
SettingsComponent.Data filename.categ:Data
SettingsComponent.Data filename.codeWanted:False
SettingsComponent.Data filename.direct:True
SettingsComponent.Data filename.hint:Code to create your custom file name base. Don't give a file extension - this will be added.
SettingsComponent.Data filename.inputType:single
SettingsComponent.Data filename.label:Data filename
SettingsComponent.Data filename.readOnly:False
SettingsComponent.Data filename.staticUpdater:None
SettingsComponent.Data filename.updates:None
SettingsComponent.Data filename.val:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.valType:code
SettingsComponent.Enable Escape.default:True
SettingsComponent.Enable Escape.allowedLabels:[]
SettingsComponent.Enable Escape.allowedTypes:[]
SettingsComponent.Enable Escape.allowedUpdates:None
SettingsComponent.Enable Escape.allowedVals:[]
SettingsComponent.Enable Escape.canBePath:True
SettingsComponent.Enable Escape.categ:Basic
SettingsComponent.Enable Escape.codeWanted:False
SettingsComponent.Enable Escape.direct:True
SettingsComponent.Enable Escape.hint:Enable the <esc> key, to allow subjects to quit / break out of the experiment
SettingsComponent.Enable Escape.inputType:bool
SettingsComponent.Enable Escape.label:Enable Escape key
SettingsComponent.Enable Escape.readOnly:False
SettingsComponent.Enable Escape.staticUpdater:None
SettingsComponent.Enable Escape.updates:None
SettingsComponent.Enable Escape.val:True
SettingsComponent.Enable Escape.valType:bool
SettingsComponent.Experiment info.default:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.allowedLabels:[]
SettingsComponent.Experiment info.allowedTypes:[]
SettingsComponent.Experiment info.allowedUpdates:None
SettingsComponent.Experiment info.allowedVals:[]
SettingsComponent.Experiment info.canBePath:True
SettingsComponent.Experiment info.categ:Basic
SettingsComponent.Experiment info.codeWanted:False
SettingsComponent.Experiment info.direct:True
SettingsComponent.Experiment info.hint:The info to present in a dialog box. Right-click to check syntax and preview the dialog box.
SettingsComponent.Experiment info.inputType:dict
SettingsComponent.Experiment info.label:Experiment info
SettingsComponent.Experiment info.readOnly:False
SettingsComponent.Experiment info.staticUpdater:None
SettingsComponent.Experiment info.updates:None
SettingsComponent.Experiment info.val:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.valType:code
SettingsComponent.Force stereo.default:True
SettingsComponent.Force stereo.allowedLabels:[]
SettingsComponent.Force stereo.allowedTypes:[]
SettingsComponent.Force stereo.allowedUpdates:None
SettingsComponent.Force stereo.allowedVals:[]
SettingsComponent.Force stereo.canBePath:True
SettingsComponent.Force stereo.categ:Audio
SettingsComponent.Force stereo.codeWanted:False
SettingsComponent.Force stereo.direct:True
SettingsComponent.Force stereo.hint:Force audio to stereo (2-channel) output
SettingsComponent.Force stereo.inputType:bool
SettingsComponent.Force stereo.label:Force stereo
SettingsComponent.Force stereo.readOnly:False
SettingsComponent.Force stereo.staticUpdater:None
SettingsComponent.Force stereo.updates:None
SettingsComponent.Force stereo.val:True
SettingsComponent.Force stereo.valType:bool
SettingsComponent.Full-screen window.default:True
SettingsComponent.Full-screen window.allowedLabels:[]
SettingsComponent.Full-screen window.allowedTypes:[]
SettingsComponent.Full-screen window.allowedUpdates:None
SettingsComponent.Full-screen window.allowedVals:[]
SettingsComponent.Full-screen window.canBePath:True
SettingsComponent.Full-screen window.categ:Screen
SettingsComponent.Full-screen window.codeWanted:False
SettingsComponent.Full-screen window.direct:True
SettingsComponent.Full-screen window.hint:Run the experiment full-screen (recommended)
SettingsComponent.Full-screen window.inputType:bool
SettingsComponent.Full-screen window.label:Full-screen window
SettingsComponent.Full-screen window.readOnly:False
SettingsComponent.Full-screen window.staticUpdater:None
SettingsComponent.Full-screen window.updates:None
SettingsComponent.Full-screen window.val:True
SettingsComponent.Full-screen window.valType:bool
SettingsComponent.HTML path.default:''
SettingsComponent.HTML path.allowedLabels:[]
SettingsComponent.HTML path.allowedTypes:[]
SettingsComponent.HTML path.allowedUpdates:None
SettingsComponent.HTML path.allowedVals:[]
SettingsComponent.HTML path.canBePath:True
SettingsComponent.HTML path.categ:Online
SettingsComponent.HTML path.codeWanted:False
SettingsComponent.HTML path.direct:True
SettingsComponent.HTML path.hint:Place the HTML files will be saved locally 
SettingsComponent.HTML path.inputType:single
SettingsComponent.HTML path.label:Output path
SettingsComponent.HTML path.readOnly:False
SettingsComponent.HTML path.staticUpdater:None
SettingsComponent.HTML path.updates:None
SettingsComponent.HTML path.val:
SettingsComponent.HTML path.valType:str
SettingsComponent.Incomplete URL.default:''
SettingsComponent.Incomplete URL.allowedLabels:[]
SettingsComponent.Incomplete URL.allowedTypes:[]
SettingsComponent.Incomplete URL.allowedUpdates:None
SettingsComponent.Incomplete URL.allowedVals:[]
SettingsComponent.Incomplete URL.canBePath:True
SettingsComponent.Incomplete URL.categ:Online
SettingsComponent.Incomplete URL.codeWanted:False
SettingsComponent.Incomplete URL.direct:True
SettingsComponent.Incomplete URL.hint:Where participants are redirected if they do not complete the task
 INSERT INCOMPLETION URL E.G.?
SettingsComponent.Incomplete URL.inputType:single
SettingsComponent.Incomplete URL.label:Incomplete URL
SettingsComponent.Incomplete URL.readOnly:False
SettingsComponent.Incomplete URL.staticUpdater:None
SettingsComponent.Incomplete URL.updates:None
SettingsComponent.Incomplete URL.val:
SettingsComponent.Incomplete URL.valType:str
SettingsComponent.Monitor.default:'testMonitor'
SettingsComponent.Monitor.allowedLabels:[]
SettingsComponent.Monitor.allowedTypes:[]
SettingsComponent.Monitor.allowedUpdates:None
SettingsComponent.Monitor.allowedVals:[]
SettingsComponent.Monitor.canBePath:True
SettingsComponent.Monitor.categ:Screen
SettingsComponent.Monitor.codeWanted:False
SettingsComponent.Monitor.direct:True
SettingsComponent.Monitor.hint:Name of the monitor (from Monitor Center). Right-click to go there, then copy & paste a monitor name here.
SettingsComponent.Monitor.inputType:single
SettingsComponent.Monitor.label:Monitor
SettingsComponent.Monitor.readOnly:False
SettingsComponent.Monitor.staticUpdater:None
SettingsComponent.Monitor.updates:None
SettingsComponent.Monitor.val:testMonitor
SettingsComponent.Monitor.valType:str
SettingsComponent.Resources.default:[]
SettingsComponent.Resources.allowedLabels:[]
SettingsComponent.Resources.allowedTypes:[]
SettingsComponent.Resources.allowedUpdates:None
SettingsComponent.Resources.allowedVals:[]
SettingsComponent.Resources.canBePath:True
SettingsComponent.Resources.categ:Online
SettingsComponent.Resources.codeWanted:False
SettingsComponent.Resources.direct:True
SettingsComponent.Resources.hint:Any additional resources needed
SettingsComponent.Resources.inputType:fileList
SettingsComponent.Resources.label:Additional Resources
SettingsComponent.Resources.readOnly:False
SettingsComponent.Resources.staticUpdater:None
SettingsComponent.Resources.updates:None
SettingsComponent.Resources.val:[]
SettingsComponent.Resources.valType:list
SettingsComponent.Save csv file.default:False
SettingsComponent.Save csv file.allowedLabels:[]
SettingsComponent.Save csv file.allowedTypes:[]
SettingsComponent.Save csv file.allowedUpdates:None
SettingsComponent.Save csv file.allowedVals:[]
SettingsComponent.Save csv file.canBePath:True
SettingsComponent.Save csv file.categ:Data
SettingsComponent.Save csv file.codeWanted:False
SettingsComponent.Save csv file.direct:True
SettingsComponent.Save csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save csv file.inputType:bool
SettingsComponent.Save csv file.label:Save csv file (summaries)
SettingsComponent.Save csv file.readOnly:False
SettingsComponent.Save csv file.staticUpdater:None
SettingsComponent.Save csv file.updates:None
SettingsComponent.Save csv file.val:False
SettingsComponent.Save csv file.valType:bool
SettingsComponent.Save excel file.default:False
SettingsComponent.Save excel file.allowedLabels:[]
SettingsComponent.Save excel file.allowedTypes:[]
SettingsComponent.Save excel file.allowedUpdates:None
SettingsComponent.Save excel file.allowedVals:[]
SettingsComponent.Save excel file.canBePath:True
SettingsComponent.Save excel file.categ:Data
SettingsComponent.Save excel file.codeWanted:False
SettingsComponent.Save excel file.direct:True
SettingsComponent.Save excel file.hint:Save data from loops in Excel (.xlsx) format
SettingsComponent.Save excel file.inputType:bool
SettingsComponent.Save excel file.label:Save excel file
SettingsComponent.Save excel file.readOnly:False
SettingsComponent.Save excel file.staticUpdater:None
SettingsComponent.Save excel file.updates:None
SettingsComponent.Save excel file.val:False
SettingsComponent.Save excel file.valType:bool
SettingsComponent.Save hdf5 file.default:False
SettingsComponent.Save hdf5 file.allowedLabels:[]
SettingsComponent.Save hdf5 file.allowedTypes:[]
SettingsComponent.Save hdf5 file.allowedUpdates:None
SettingsComponent.Save hdf5 file.allowedVals:[]
SettingsComponent.Save hdf5 file.canBePath:True
SettingsComponent.Save hdf5 file.categ:Data
SettingsComponent.Save hdf5 file.codeWanted:False
SettingsComponent.Save hdf5 file.direct:True
SettingsComponent.Save hdf5 file.hint:Save data from eyetrackers in hdf5 format. This is useful for viewing and analyzing complex data in structures.
SettingsComponent.Save hdf5 file.inputType:bool
SettingsComponent.Save hdf5 file.label:Save hdf5 file
SettingsComponent.Save hdf5 file.readOnly:False
SettingsComponent.Save hdf5 file.staticUpdater:None
SettingsComponent.Save hdf5 file.updates:None
SettingsComponent.Save hdf5 file.val:False
SettingsComponent.Save hdf5 file.valType:bool
SettingsComponent.Save log file.default:True
SettingsComponent.Save log file.allowedLabels:[]
SettingsComponent.Save log file.allowedTypes:[]
SettingsComponent.Save log file.allowedUpdates:None
SettingsComponent.Save log file.allowedVals:[]
SettingsComponent.Save log file.canBePath:True
SettingsComponent.Save log file.categ:Data
SettingsComponent.Save log file.codeWanted:False
SettingsComponent.Save log file.direct:True
SettingsComponent.Save log file.hint:Save a detailed log (more detailed than the excel/csv files) of the entire experiment
SettingsComponent.Save log file.inputType:bool
SettingsComponent.Save log file.label:Save log file
SettingsComponent.Save log file.readOnly:False
SettingsComponent.Save log file.staticUpdater:None
SettingsComponent.Save log file.updates:None
SettingsComponent.Save log file.val:True
SettingsComponent.Save log file.valType:bool
SettingsComponent.Save psydat file.default:True
SettingsComponent.Save psydat file.allowedLabels:[]
SettingsComponent.Save psydat file.allowedTypes:[]
SettingsComponent.Save psydat file.allowedUpdates:None
SettingsComponent.Save psydat file.allowedVals:[True]
SettingsComponent.Save psydat file.canBePath:True
SettingsComponent.Save psydat file.categ:Data
SettingsComponent.Save psydat file.codeWanted:False
SettingsComponent.Save psydat file.direct:True
SettingsComponent.Save psydat file.hint:Save data from loops in psydat format. This is useful for python programmers to generate analysis scripts.
SettingsComponent.Save psydat file.inputType:bool
SettingsComponent.Save psydat file.label:Save psydat file
SettingsComponent.Save psydat file.readOnly:False
SettingsComponent.Save psydat file.staticUpdater:None
SettingsComponent.Save psydat file.updates:None
SettingsComponent.Save psydat file.val:True
SettingsComponent.Save psydat file.valType:bool
SettingsComponent.Save wide csv file.default:True
SettingsComponent.Save wide csv file.allowedLabels:[]
SettingsComponent.Save wide csv file.allowedTypes:[]
SettingsComponent.Save wide csv file.allowedUpdates:None
SettingsComponent.Save wide csv file.allowedVals:[]
SettingsComponent.Save wide csv file.canBePath:True
SettingsComponent.Save wide csv file.categ:Data
SettingsComponent.Save wide csv file.codeWanted:False
SettingsComponent.Save wide csv file.direct:True
SettingsComponent.Save wide csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save wide csv file.inputType:bool
SettingsComponent.Save wide csv file.label:Save csv file (trial-by-trial)
SettingsComponent.Save wide csv file.readOnly:False
SettingsComponent.Save wide csv file.staticUpdater:None
SettingsComponent.Save wide csv file.updates:None
SettingsComponent.Save wide csv file.val:True
SettingsComponent.Save wide csv file.valType:bool
SettingsComponent.Screen.default:1.0
SettingsComponent.Screen.allowedLabels:[]
SettingsComponent.Screen.allowedTypes:[]
SettingsComponent.Screen.allowedUpdates:None
SettingsComponent.Screen.allowedVals:[]
SettingsComponent.Screen.canBePath:True
SettingsComponent.Screen.categ:Screen
SettingsComponent.Screen.codeWanted:False
SettingsComponent.Screen.direct:True
SettingsComponent.Screen.hint:Which physical screen to run on (1 or 2)
SettingsComponent.Screen.inputType:spin
SettingsComponent.Screen.label:Screen
SettingsComponent.Screen.readOnly:False
SettingsComponent.Screen.staticUpdater:None
SettingsComponent.Screen.updates:None
SettingsComponent.Screen.val:1
SettingsComponent.Screen.valType:num
SettingsComponent.Show info dlg.default:True
SettingsComponent.Show info dlg.allowedLabels:[]
SettingsComponent.Show info dlg.allowedTypes:[]
SettingsComponent.Show info dlg.allowedUpdates:None
SettingsComponent.Show info dlg.allowedVals:[]
SettingsComponent.Show info dlg.canBePath:True
SettingsComponent.Show info dlg.categ:Basic
SettingsComponent.Show info dlg.codeWanted:False
SettingsComponent.Show info dlg.direct:True
SettingsComponent.Show info dlg.hint:Start the experiment with a dialog to set info (e.g.participant or condition)
SettingsComponent.Show info dlg.inputType:bool
SettingsComponent.Show info dlg.label:Show info dialog
SettingsComponent.Show info dlg.readOnly:False
SettingsComponent.Show info dlg.staticUpdater:None
SettingsComponent.Show info dlg.updates:None
SettingsComponent.Show info dlg.val:True
SettingsComponent.Show info dlg.valType:bool
SettingsComponent.Show mouse.default:False
SettingsComponent.Show mouse.allowedLabels:[]
SettingsComponent.Show mouse.allowedTypes:[]
SettingsComponent.Show mouse.allowedUpdates:None
SettingsComponent.Show mouse.allowedVals:[]
SettingsComponent.Show mouse.canBePath:True
SettingsComponent.Show mouse.categ:Screen
SettingsComponent.Show mouse.codeWanted:False
SettingsComponent.Show mouse.direct:True
SettingsComponent.Show mouse.hint:Should the mouse be visible on screen?
SettingsComponent.Show mouse.inputType:bool
SettingsComponent.Show mouse.label:Show mouse
SettingsComponent.Show mouse.readOnly:False
SettingsComponent.Show mouse.staticUpdater:None
SettingsComponent.Show mouse.updates:None
SettingsComponent.Show mouse.val:False
SettingsComponent.Show mouse.valType:bool
SettingsComponent.Units.default:'height'
SettingsComponent.Units.allowedLabels:[]
SettingsComponent.Units.allowedTypes:[]
SettingsComponent.Units.allowedUpdates:None
SettingsComponent.Units.allowedVals:['use prefs', 'deg', 'pix', 'cm', 'norm', 'height', 'degFlatPos', 'degFlat']
SettingsComponent.Units.canBePath:True
SettingsComponent.Units.categ:Screen
SettingsComponent.Units.codeWanted:False
SettingsComponent.Units.direct:True
SettingsComponent.Units.hint:Units to use for window/stimulus coordinates (e.g. cm, pix, deg)
SettingsComponent.Units.inputType:choice
SettingsComponent.Units.label:Units
SettingsComponent.Units.readOnly:False
SettingsComponent.Units.staticUpdater:None
SettingsComponent.Units.updates:None
SettingsComponent.Units.val:height
SettingsComponent.Units.valType:str
SettingsComponent.Use version.default:''
SettingsComponent.Use version.allowedLabels:[]
SettingsComponent.Use version.allowedTypes:[]
SettingsComponent.Use version.allowedUpdates:None
SettingsComponent.Use version.allowedVals:['latest', '2021', '2020', '2021.2', '2021.1', '2020.2', '2020.1', '3.2', '3.1', '3.0', '1.90', '', '2021.2.3', '2021.2.2', '2021.2.1', '2021.2.0', '2021.1.4', '2021.1.0', '2020.2.10', '2020.2.9', '2020.2.8', '2020.2.7', '2020.2.6', '2020.2.5', '2020.2.4', '2020.2.3', '2020.2.2', '2020.2.1', '2020.2.0', '2020.1.3', '2020.1.2', '2020.1.1', '3.2.4', '3.2.3', '3.2.2', '3.2.1', '3.2.0', '3.1.5', '3.1.4', '3.1.3', '3.1.2', '3.1.1', '3.1.0', '3.0.7', '3.0.6', '3.0.5', '3.0.4', '3.0.3', '3.0.2', '3.0.1', '3.0.0', '1.90.2', '1.90.1', '1.90.0']
SettingsComponent.Use version.canBePath:True
SettingsComponent.Use version.categ:Basic
SettingsComponent.Use version.codeWanted:False
SettingsComponent.Use version.direct:True
SettingsComponent.Use version.hint:The version of PsychoPy to use when running the experiment.
SettingsComponent.Use version.inputType:choice
SettingsComponent.Use version.label:Use PsychoPy version
SettingsComponent.Use version.readOnly:False
SettingsComponent.Use version.staticUpdater:None
SettingsComponent.Use version.updates:None
SettingsComponent.Use version.val:
SettingsComponent.Use version.valType:str
SettingsComponent.Window size (pixels).default:(1024, 768)
SettingsComponent.Window size (pixels).allowedLabels:[]
SettingsComponent.Window size (pixels).allowedTypes:[]
SettingsComponent.Window size (pixels).allowedUpdates:None
SettingsComponent.Window size (pixels).allowedVals:[]
SettingsComponent.Window size (pixels).canBePath:True
SettingsComponent.Window size (pixels).categ:Screen
SettingsComponent.Window size (pixels).codeWanted:False
SettingsComponent.Window size (pixels).direct:True
SettingsComponent.Window size (pixels).hint:Size of window (if not fullscreen)
SettingsComponent.Window size (pixels).inputType:single
SettingsComponent.Window size (pixels).label:Window size (pixels)
SettingsComponent.Window size (pixels).readOnly:False
SettingsComponent.Window size (pixels).staticUpdater:None
SettingsComponent.Window size (pixels).updates:None
SettingsComponent.Window size (pixels).val:(1024, 768)
SettingsComponent.Window size (pixels).valType:list
SettingsComponent.blendMode.default:'avg'
SettingsComponent.blendMode.allowedLabels:[]
SettingsComponent.blendMode.allowedTypes:[]
SettingsComponent.blendMode.allowedUpdates:None
SettingsComponent.blendMode.allowedVals:['add', 'avg']
SettingsComponent.blendMode.canBePath:True
SettingsComponent.blendMode.categ:Screen
SettingsComponent.blendMode.codeWanted:False
SettingsComponent.blendMode.direct:True
SettingsComponent.blendMode.hint:Should new stimuli be added or averaged with the stimuli that have been drawn already
SettingsComponent.blendMode.inputType:choice
SettingsComponent.blendMode.label:Blend mode
SettingsComponent.blendMode.readOnly:False
SettingsComponent.blendMode.staticUpdater:None
SettingsComponent.blendMode.updates:None
SettingsComponent.blendMode.val:avg
SettingsComponent.blendMode.valType:str
SettingsComponent.color.default:[0,0,0]
SettingsComponent.color.allowedLabels:[]
SettingsComponent.color.allowedTypes:[]
SettingsComponent.color.allowedUpdates:None
SettingsComponent.color.allowedVals:[]
SettingsComponent.color.canBePath:True
SettingsComponent.color.categ:Screen
SettingsComponent.color.codeWanted:True
SettingsComponent.color.direct:True
SettingsComponent.color.hint:Color of the screen (e.g. black, $[1.0,1.0,1.0], $variable. Right-click to bring up a color-picker.)
SettingsComponent.color.inputType:color
SettingsComponent.color.label:Color
SettingsComponent.color.readOnly:False
SettingsComponent.color.staticUpdater:None
SettingsComponent.color.updates:None
SettingsComponent.color.val:$[0,0,0]
SettingsComponent.color.valType:color
SettingsComponent.colorSpace.default:'rgb'
SettingsComponent.colorSpace.allowedLabels:[]
SettingsComponent.colorSpace.allowedTypes:[]
SettingsComponent.colorSpace.allowedUpdates:None
SettingsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'hex']
SettingsComponent.colorSpace.canBePath:True
SettingsComponent.colorSpace.categ:Screen
SettingsComponent.colorSpace.codeWanted:False
SettingsComponent.colorSpace.direct:True
SettingsComponent.colorSpace.hint:Needed if color is defined numerically (see PsychoPy documentation on color spaces)
SettingsComponent.colorSpace.inputType:choice
SettingsComponent.colorSpace.label:Color space
SettingsComponent.colorSpace.readOnly:False
SettingsComponent.colorSpace.staticUpdater:None
SettingsComponent.colorSpace.updates:None
SettingsComponent.colorSpace.val:rgb
SettingsComponent.colorSpace.valType:str
SettingsComponent.elAddress.default:'100.1.1.1'
SettingsComponent.elAddress.allowedLabels:[]
SettingsComponent.elAddress.allowedTypes:[]
SettingsComponent.elAddress.allowedUpdates:None
SettingsComponent.elAddress.allowedVals:[]
SettingsComponent.elAddress.canBePath:True
SettingsComponent.elAddress.categ:Eyetracking
SettingsComponent.elAddress.codeWanted:False
SettingsComponent.elAddress.direct:True
SettingsComponent.elAddress.hint:IP Address of the EyeLink *Host* computer.
SettingsComponent.elAddress.inputType:single
SettingsComponent.elAddress.label:EyeLink IP Address
SettingsComponent.elAddress.readOnly:False
SettingsComponent.elAddress.staticUpdater:None
SettingsComponent.elAddress.updates:None
SettingsComponent.elAddress.val:100.1.1.1
SettingsComponent.elAddress.valType:str
SettingsComponent.elDataFiltering.default:'FILTER_LEVEL_2'
SettingsComponent.elDataFiltering.allowedLabels:[]
SettingsComponent.elDataFiltering.allowedTypes:[]
SettingsComponent.elDataFiltering.allowedUpdates:None
SettingsComponent.elDataFiltering.allowedVals:['FILTER_LEVEL_OFF', 'FILTER_LEVEL_1', 'FILTER_LEVEL_2']
SettingsComponent.elDataFiltering.canBePath:True
SettingsComponent.elDataFiltering.categ:Eyetracking
SettingsComponent.elDataFiltering.codeWanted:False
SettingsComponent.elDataFiltering.direct:True
SettingsComponent.elDataFiltering.hint:Filter eye sample data when it is saved to the output file. This will not affect the sampling speed.
SettingsComponent.elDataFiltering.inputType:choice
SettingsComponent.elDataFiltering.label:Saved Sample Filtering
SettingsComponent.elDataFiltering.readOnly:False
SettingsComponent.elDataFiltering.staticUpdater:None
SettingsComponent.elDataFiltering.updates:None
SettingsComponent.elDataFiltering.val:FILTER_LEVEL_2
SettingsComponent.elDataFiltering.valType:str
SettingsComponent.elLiveFiltering.default:'FILTER_LEVEL_OFF'
SettingsComponent.elLiveFiltering.allowedLabels:[]
SettingsComponent.elLiveFiltering.allowedTypes:[]
SettingsComponent.elLiveFiltering.allowedUpdates:None
SettingsComponent.elLiveFiltering.allowedVals:['FILTER_LEVEL_OFF', 'FILTER_LEVEL_1', 'FILTER_LEVEL_2']
SettingsComponent.elLiveFiltering.canBePath:True
SettingsComponent.elLiveFiltering.categ:Eyetracking
SettingsComponent.elLiveFiltering.codeWanted:False
SettingsComponent.elLiveFiltering.direct:True
SettingsComponent.elLiveFiltering.hint:Filter eye sample data live, as it is streamed to the driving device. This may reduce the sampling speed.
SettingsComponent.elLiveFiltering.inputType:choice
SettingsComponent.elLiveFiltering.label:Live Sample Filtering
SettingsComponent.elLiveFiltering.readOnly:False
SettingsComponent.elLiveFiltering.staticUpdater:None
SettingsComponent.elLiveFiltering.updates:None
SettingsComponent.elLiveFiltering.val:FILTER_LEVEL_OFF
SettingsComponent.elLiveFiltering.valType:str
SettingsComponent.elModel.default:'EYELINK 1000 DESKTOP'
SettingsComponent.elModel.allowedLabels:[]
SettingsComponent.elModel.allowedTypes:[]
SettingsComponent.elModel.allowedUpdates:None
SettingsComponent.elModel.allowedVals:['EYELINK 1000 DESKTOP', 'EYELINK 1000 TOWER', 'EYELINK 1000 REMOTE', 'EYELINK 1000 LONG RANGE']
SettingsComponent.elModel.canBePath:True
SettingsComponent.elModel.categ:Eyetracking
SettingsComponent.elModel.codeWanted:False
SettingsComponent.elModel.direct:True
SettingsComponent.elModel.hint:Eye tracker model.
SettingsComponent.elModel.inputType:choice
SettingsComponent.elModel.label:Model Name
SettingsComponent.elModel.readOnly:False
SettingsComponent.elModel.staticUpdater:None
SettingsComponent.elModel.updates:None
SettingsComponent.elModel.val:EYELINK 1000 DESKTOP
SettingsComponent.elModel.valType:str
SettingsComponent.elPupilAlgorithm.default:'ELLIPSE_FIT'
SettingsComponent.elPupilAlgorithm.allowedLabels:[]
SettingsComponent.elPupilAlgorithm.allowedTypes:[]
SettingsComponent.elPupilAlgorithm.allowedUpdates:None
SettingsComponent.elPupilAlgorithm.allowedVals:['ELLIPSE_FIT', 'CENTROID_FIT']
SettingsComponent.elPupilAlgorithm.canBePath:True
SettingsComponent.elPupilAlgorithm.categ:Eyetracking
SettingsComponent.elPupilAlgorithm.codeWanted:False
SettingsComponent.elPupilAlgorithm.direct:True
SettingsComponent.elPupilAlgorithm.hint:Algorithm used to detect the pupil center.
SettingsComponent.elPupilAlgorithm.inputType:choice
SettingsComponent.elPupilAlgorithm.label:Pupil Center Algorithm
SettingsComponent.elPupilAlgorithm.readOnly:False
SettingsComponent.elPupilAlgorithm.staticUpdater:None
SettingsComponent.elPupilAlgorithm.updates:None
SettingsComponent.elPupilAlgorithm.val:ELLIPSE_FIT
SettingsComponent.elPupilAlgorithm.valType:str
SettingsComponent.elPupilMeasure.default:'PUPIL_AREA'
SettingsComponent.elPupilMeasure.allowedLabels:[]
SettingsComponent.elPupilMeasure.allowedTypes:[]
SettingsComponent.elPupilMeasure.allowedUpdates:None
SettingsComponent.elPupilMeasure.allowedVals:['PUPIL_AREA', 'PUPIL_DIAMETER', 'NEITHER']
SettingsComponent.elPupilMeasure.canBePath:True
SettingsComponent.elPupilMeasure.categ:Eyetracking
SettingsComponent.elPupilMeasure.codeWanted:False
SettingsComponent.elPupilMeasure.direct:True
SettingsComponent.elPupilMeasure.hint:Type of pupil data to record.
SettingsComponent.elPupilMeasure.inputType:choice
SettingsComponent.elPupilMeasure.label:Pupil Data Type
SettingsComponent.elPupilMeasure.readOnly:False
SettingsComponent.elPupilMeasure.staticUpdater:None
SettingsComponent.elPupilMeasure.updates:None
SettingsComponent.elPupilMeasure.val:PUPIL_AREA
SettingsComponent.elPupilMeasure.valType:str
SettingsComponent.elSampleRate.default:1000.0
SettingsComponent.elSampleRate.allowedLabels:[]
SettingsComponent.elSampleRate.allowedTypes:[]
SettingsComponent.elSampleRate.allowedUpdates:None
SettingsComponent.elSampleRate.allowedVals:['250', '500', '1000', '2000']
SettingsComponent.elSampleRate.canBePath:True
SettingsComponent.elSampleRate.categ:Eyetracking
SettingsComponent.elSampleRate.codeWanted:False
SettingsComponent.elSampleRate.direct:True
SettingsComponent.elSampleRate.hint:Eye tracker sampling rate.
SettingsComponent.elSampleRate.inputType:choice
SettingsComponent.elSampleRate.label:Sampling Rate
SettingsComponent.elSampleRate.readOnly:False
SettingsComponent.elSampleRate.staticUpdater:None
SettingsComponent.elSampleRate.updates:None
SettingsComponent.elSampleRate.val:1000
SettingsComponent.elSampleRate.valType:num
SettingsComponent.elSimMode.default:False
SettingsComponent.elSimMode.allowedLabels:[]
SettingsComponent.elSimMode.allowedTypes:[]
SettingsComponent.elSimMode.allowedUpdates:None
SettingsComponent.elSimMode.allowedVals:[]
SettingsComponent.elSimMode.canBePath:True
SettingsComponent.elSimMode.categ:Eyetracking
SettingsComponent.elSimMode.codeWanted:False
SettingsComponent.elSimMode.direct:True
SettingsComponent.elSimMode.hint:Set the EyeLink to run in mouse simulation mode.
SettingsComponent.elSimMode.inputType:bool
SettingsComponent.elSimMode.label:Mouse Simulation Mode
SettingsComponent.elSimMode.readOnly:False
SettingsComponent.elSimMode.staticUpdater:None
SettingsComponent.elSimMode.updates:None
SettingsComponent.elSimMode.val:False
SettingsComponent.elSimMode.valType:bool
SettingsComponent.elTrackEyes.default:'RIGHT_EYE'
SettingsComponent.elTrackEyes.allowedLabels:[]
SettingsComponent.elTrackEyes.allowedTypes:[]
SettingsComponent.elTrackEyes.allowedUpdates:None
SettingsComponent.elTrackEyes.allowedVals:['LEFT_EYE', 'RIGHT_EYE', 'BOTH']
SettingsComponent.elTrackEyes.canBePath:True
SettingsComponent.elTrackEyes.categ:Eyetracking
SettingsComponent.elTrackEyes.codeWanted:False
SettingsComponent.elTrackEyes.direct:True
SettingsComponent.elTrackEyes.hint:Select with eye(s) to track.
SettingsComponent.elTrackEyes.inputType:choice
SettingsComponent.elTrackEyes.label:Track Eyes
SettingsComponent.elTrackEyes.readOnly:False
SettingsComponent.elTrackEyes.staticUpdater:None
SettingsComponent.elTrackEyes.updates:None
SettingsComponent.elTrackEyes.val:RIGHT_EYE
SettingsComponent.elTrackEyes.valType:str
SettingsComponent.elTrackingMode.default:'PUPIL_CR_TRACKING'
SettingsComponent.elTrackingMode.allowedLabels:[]
SettingsComponent.elTrackingMode.allowedTypes:[]
SettingsComponent.elTrackingMode.allowedUpdates:None
SettingsComponent.elTrackingMode.allowedVals:['PUPIL_CR_TRACKING', 'PUPIL_ONLY_TRACKING']
SettingsComponent.elTrackingMode.canBePath:True
SettingsComponent.elTrackingMode.categ:Eyetracking
SettingsComponent.elTrackingMode.codeWanted:False
SettingsComponent.elTrackingMode.direct:True
SettingsComponent.elTrackingMode.hint:Track Pupil-CR or Pupil only.
SettingsComponent.elTrackingMode.inputType:choice
SettingsComponent.elTrackingMode.label:Pupil Tracking Mode
SettingsComponent.elTrackingMode.readOnly:False
SettingsComponent.elTrackingMode.staticUpdater:None
SettingsComponent.elTrackingMode.updates:None
SettingsComponent.elTrackingMode.val:PUPIL_CR_TRACKING
SettingsComponent.elTrackingMode.valType:str
SettingsComponent.expName.default:''
SettingsComponent.expName.allowedLabels:[]
SettingsComponent.expName.allowedTypes:[]
SettingsComponent.expName.allowedUpdates:None
SettingsComponent.expName.allowedVals:[]
SettingsComponent.expName.canBePath:True
SettingsComponent.expName.categ:Basic
SettingsComponent.expName.codeWanted:False
SettingsComponent.expName.direct:True
SettingsComponent.expName.hint:Name of the entire experiment (taken by default from the filename on save)
SettingsComponent.expName.inputType:single
SettingsComponent.expName.label:Experiment name
SettingsComponent.expName.readOnly:False
SettingsComponent.expName.staticUpdater:None
SettingsComponent.expName.updates:None
SettingsComponent.expName.val:
SettingsComponent.expName.valType:str
SettingsComponent.exportHTML.default:'on Sync'
SettingsComponent.exportHTML.allowedLabels:[]
SettingsComponent.exportHTML.allowedTypes:[]
SettingsComponent.exportHTML.allowedUpdates:None
SettingsComponent.exportHTML.allowedVals:['on Save', 'on Sync', 'manually']
SettingsComponent.exportHTML.canBePath:True
SettingsComponent.exportHTML.categ:Online
SettingsComponent.exportHTML.codeWanted:False
SettingsComponent.exportHTML.direct:True
SettingsComponent.exportHTML.hint:When to export experiment to the HTML folder.
SettingsComponent.exportHTML.inputType:choice
SettingsComponent.exportHTML.label:Export HTML
SettingsComponent.exportHTML.readOnly:False
SettingsComponent.exportHTML.staticUpdater:None
SettingsComponent.exportHTML.updates:None
SettingsComponent.exportHTML.val:on Sync
SettingsComponent.exportHTML.valType:str
SettingsComponent.eyetracker.default:'None'
SettingsComponent.eyetracker.allowedLabels:[]
SettingsComponent.eyetracker.allowedTypes:[]
SettingsComponent.eyetracker.allowedUpdates:None
SettingsComponent.eyetracker.allowedVals:['GazePoint', 'Pupil Labs', 'SR Research Ltd', 'MouseGaze', 'Tobii Technology', 'None']
SettingsComponent.eyetracker.canBePath:True
SettingsComponent.eyetracker.categ:Eyetracking
SettingsComponent.eyetracker.codeWanted:False
SettingsComponent.eyetracker.direct:True
SettingsComponent.eyetracker.hint:What kind of eye tracker should PsychoPy use? Select 'MouseGaze' to use the mouse to simulate eye movement (for debugging without a tracker connected)
SettingsComponent.eyetracker.inputType:choice
SettingsComponent.eyetracker.label:Eyetracker Device
SettingsComponent.eyetracker.readOnly:False
SettingsComponent.eyetracker.staticUpdater:None
SettingsComponent.eyetracker.updates:None
SettingsComponent.eyetracker.val:None
SettingsComponent.eyetracker.valType:str
SettingsComponent.gpAddress.default:'127.0.0.1'
SettingsComponent.gpAddress.allowedLabels:[]
SettingsComponent.gpAddress.allowedTypes:[]
SettingsComponent.gpAddress.allowedUpdates:None
SettingsComponent.gpAddress.allowedVals:[]
SettingsComponent.gpAddress.canBePath:True
SettingsComponent.gpAddress.categ:Eyetracking
SettingsComponent.gpAddress.codeWanted:False
SettingsComponent.gpAddress.direct:True
SettingsComponent.gpAddress.hint:IP Address of the computer running GazePoint Control.
SettingsComponent.gpAddress.inputType:single
SettingsComponent.gpAddress.label:GazePoint IP Address
SettingsComponent.gpAddress.readOnly:False
SettingsComponent.gpAddress.staticUpdater:None
SettingsComponent.gpAddress.updates:None
SettingsComponent.gpAddress.val:127.0.0.1
SettingsComponent.gpAddress.valType:str
SettingsComponent.gpPort.default:4242.0
SettingsComponent.gpPort.allowedLabels:[]
SettingsComponent.gpPort.allowedTypes:[]
SettingsComponent.gpPort.allowedUpdates:None
SettingsComponent.gpPort.allowedVals:[]
SettingsComponent.gpPort.canBePath:True
SettingsComponent.gpPort.categ:Eyetracking
SettingsComponent.gpPort.codeWanted:False
SettingsComponent.gpPort.direct:True
SettingsComponent.gpPort.hint:Port of the GazePoint Control server. Usually 4242.
SettingsComponent.gpPort.inputType:single
SettingsComponent.gpPort.label:GazePoint Port
SettingsComponent.gpPort.readOnly:False
SettingsComponent.gpPort.staticUpdater:None
SettingsComponent.gpPort.updates:None
SettingsComponent.gpPort.val:4242
SettingsComponent.gpPort.valType:num
SettingsComponent.keyboardBackend.default:'ioHub'
SettingsComponent.keyboardBackend.allowedLabels:[]
SettingsComponent.keyboardBackend.allowedTypes:[]
SettingsComponent.keyboardBackend.allowedUpdates:None
SettingsComponent.keyboardBackend.allowedVals:['ioHub', 'PsychToolbox', 'Pyglet']
SettingsComponent.keyboardBackend.canBePath:True
SettingsComponent.keyboardBackend.categ:Input
SettingsComponent.keyboardBackend.codeWanted:False
SettingsComponent.keyboardBackend.direct:True
SettingsComponent.keyboardBackend.hint:What Python package should PsychoPy use to get keyboard input?
SettingsComponent.keyboardBackend.inputType:choice
SettingsComponent.keyboardBackend.label:Keyboard Backend
SettingsComponent.keyboardBackend.readOnly:False
SettingsComponent.keyboardBackend.staticUpdater:None
SettingsComponent.keyboardBackend.updates:None
SettingsComponent.keyboardBackend.val:ioHub
SettingsComponent.keyboardBackend.valType:str
SettingsComponent.logging level.default:exp
SettingsComponent.logging level.allowedLabels:[]
SettingsComponent.logging level.allowedTypes:[]
SettingsComponent.logging level.allowedUpdates:None
SettingsComponent.logging level.allowedVals:['error', 'warning', 'data', 'exp', 'info', 'debug']
SettingsComponent.logging level.canBePath:True
SettingsComponent.logging level.categ:Data
SettingsComponent.logging level.codeWanted:False
SettingsComponent.logging level.direct:True
SettingsComponent.logging level.hint:How much output do you want in the log files? ('error' is fewest messages, 'debug' is most)
SettingsComponent.logging level.inputType:choice
SettingsComponent.logging level.label:Logging level
SettingsComponent.logging level.readOnly:False
SettingsComponent.logging level.staticUpdater:None
SettingsComponent.logging level.updates:None
SettingsComponent.logging level.val:exp
SettingsComponent.logging level.valType:code
SettingsComponent.mgBlink.default:MIDDLE_BUTTON
SettingsComponent.mgBlink.allowedLabels:[]
SettingsComponent.mgBlink.allowedTypes:[]
SettingsComponent.mgBlink.allowedUpdates:None
SettingsComponent.mgBlink.allowedVals:['LEFT_BUTTON', 'MIDDLE_BUTTON', 'RIGHT_BUTTON']
SettingsComponent.mgBlink.canBePath:True
SettingsComponent.mgBlink.categ:Eyetracking
SettingsComponent.mgBlink.codeWanted:False
SettingsComponent.mgBlink.direct:True
SettingsComponent.mgBlink.hint:Mouse button to press for a blink.
SettingsComponent.mgBlink.inputType:multiChoice
SettingsComponent.mgBlink.label:Blink Button
SettingsComponent.mgBlink.readOnly:False
SettingsComponent.mgBlink.staticUpdater:None
SettingsComponent.mgBlink.updates:None
SettingsComponent.mgBlink.val:MIDDLE_BUTTON
SettingsComponent.mgBlink.valType:list
SettingsComponent.mgMove.default:'CONTINUOUS'
SettingsComponent.mgMove.allowedLabels:[]
SettingsComponent.mgMove.allowedTypes:[]
SettingsComponent.mgMove.allowedUpdates:None
SettingsComponent.mgMove.allowedVals:['CONTINUOUS', 'LEFT_BUTTON', 'MIDDLE_BUTTON', 'RIGHT_BUTTON']
SettingsComponent.mgMove.canBePath:True
SettingsComponent.mgMove.categ:Eyetracking
SettingsComponent.mgMove.codeWanted:False
SettingsComponent.mgMove.direct:True
SettingsComponent.mgMove.hint:Mouse button to press for eye movement.
SettingsComponent.mgMove.inputType:choice
SettingsComponent.mgMove.label:Move Button
SettingsComponent.mgMove.readOnly:False
SettingsComponent.mgMove.staticUpdater:None
SettingsComponent.mgMove.updates:None
SettingsComponent.mgMove.val:CONTINUOUS
SettingsComponent.mgMove.valType:str
SettingsComponent.mgSaccade.default:0.5
SettingsComponent.mgSaccade.allowedLabels:[]
SettingsComponent.mgSaccade.allowedTypes:[]
SettingsComponent.mgSaccade.allowedUpdates:None
SettingsComponent.mgSaccade.allowedVals:[]
SettingsComponent.mgSaccade.canBePath:True
SettingsComponent.mgSaccade.categ:Eyetracking
SettingsComponent.mgSaccade.codeWanted:False
SettingsComponent.mgSaccade.direct:True
SettingsComponent.mgSaccade.hint:Visual degree threshold for Saccade event creation.
SettingsComponent.mgSaccade.inputType:single
SettingsComponent.mgSaccade.label:Saccade Threshold
SettingsComponent.mgSaccade.readOnly:False
SettingsComponent.mgSaccade.staticUpdater:None
SettingsComponent.mgSaccade.updates:None
SettingsComponent.mgSaccade.val:0.5
SettingsComponent.mgSaccade.valType:num
SettingsComponent.plConfidenceThreshold.default:0.6
SettingsComponent.plConfidenceThreshold.allowedLabels:[]
SettingsComponent.plConfidenceThreshold.allowedTypes:[]
SettingsComponent.plConfidenceThreshold.allowedUpdates:None
SettingsComponent.plConfidenceThreshold.allowedVals:[]
SettingsComponent.plConfidenceThreshold.canBePath:True
SettingsComponent.plConfidenceThreshold.categ:Eyetracking
SettingsComponent.plConfidenceThreshold.codeWanted:False
SettingsComponent.plConfidenceThreshold.direct:True
SettingsComponent.plConfidenceThreshold.hint:Gaze Confidence Threshold
SettingsComponent.plConfidenceThreshold.inputType:single
SettingsComponent.plConfidenceThreshold.label:Gaze Confidence Threshold
SettingsComponent.plConfidenceThreshold.readOnly:False
SettingsComponent.plConfidenceThreshold.staticUpdater:None
SettingsComponent.plConfidenceThreshold.updates:None
SettingsComponent.plConfidenceThreshold.val:0.6
SettingsComponent.plConfidenceThreshold.valType:num
SettingsComponent.plPupilCaptureRecordingEnabled.default:True
SettingsComponent.plPupilCaptureRecordingEnabled.allowedLabels:[]
SettingsComponent.plPupilCaptureRecordingEnabled.allowedTypes:[]
SettingsComponent.plPupilCaptureRecordingEnabled.allowedUpdates:None
SettingsComponent.plPupilCaptureRecordingEnabled.allowedVals:[]
SettingsComponent.plPupilCaptureRecordingEnabled.canBePath:True
SettingsComponent.plPupilCaptureRecordingEnabled.categ:Eyetracking
SettingsComponent.plPupilCaptureRecordingEnabled.codeWanted:False
SettingsComponent.plPupilCaptureRecordingEnabled.direct:True
SettingsComponent.plPupilCaptureRecordingEnabled.hint:Pupil Capture Recording Enabled
SettingsComponent.plPupilCaptureRecordingEnabled.inputType:bool
SettingsComponent.plPupilCaptureRecordingEnabled.label:Pupil Capture Recording Enabled
SettingsComponent.plPupilCaptureRecordingEnabled.readOnly:False
SettingsComponent.plPupilCaptureRecordingEnabled.staticUpdater:None
SettingsComponent.plPupilCaptureRecordingEnabled.updates:None
SettingsComponent.plPupilCaptureRecordingEnabled.val:True
SettingsComponent.plPupilCaptureRecordingEnabled.valType:bool
SettingsComponent.plPupilCaptureRecordingLocation.default:''
SettingsComponent.plPupilCaptureRecordingLocation.allowedLabels:[]
SettingsComponent.plPupilCaptureRecordingLocation.allowedTypes:[]
SettingsComponent.plPupilCaptureRecordingLocation.allowedUpdates:None
SettingsComponent.plPupilCaptureRecordingLocation.allowedVals:[]
SettingsComponent.plPupilCaptureRecordingLocation.canBePath:True
SettingsComponent.plPupilCaptureRecordingLocation.categ:Eyetracking
SettingsComponent.plPupilCaptureRecordingLocation.codeWanted:False
SettingsComponent.plPupilCaptureRecordingLocation.direct:True
SettingsComponent.plPupilCaptureRecordingLocation.hint:Pupil Capture Recording Location
SettingsComponent.plPupilCaptureRecordingLocation.inputType:single
SettingsComponent.plPupilCaptureRecordingLocation.label:Pupil Capture Recording Location
SettingsComponent.plPupilCaptureRecordingLocation.readOnly:False
SettingsComponent.plPupilCaptureRecordingLocation.staticUpdater:None
SettingsComponent.plPupilCaptureRecordingLocation.updates:None
SettingsComponent.plPupilCaptureRecordingLocation.val:
SettingsComponent.plPupilCaptureRecordingLocation.valType:str
SettingsComponent.plPupilRemoteAddress.default:'127.0.0.1'
SettingsComponent.plPupilRemoteAddress.allowedLabels:[]
SettingsComponent.plPupilRemoteAddress.allowedTypes:[]
SettingsComponent.plPupilRemoteAddress.allowedUpdates:None
SettingsComponent.plPupilRemoteAddress.allowedVals:[]
SettingsComponent.plPupilRemoteAddress.canBePath:True
SettingsComponent.plPupilRemoteAddress.categ:Eyetracking
SettingsComponent.plPupilRemoteAddress.codeWanted:False
SettingsComponent.plPupilRemoteAddress.direct:True
SettingsComponent.plPupilRemoteAddress.hint:Pupil Remote Address
SettingsComponent.plPupilRemoteAddress.inputType:single
SettingsComponent.plPupilRemoteAddress.label:Pupil Remote Address
SettingsComponent.plPupilRemoteAddress.readOnly:False
SettingsComponent.plPupilRemoteAddress.staticUpdater:None
SettingsComponent.plPupilRemoteAddress.updates:None
SettingsComponent.plPupilRemoteAddress.val:127.0.0.1
SettingsComponent.plPupilRemoteAddress.valType:str
SettingsComponent.plPupilRemotePort.default:50020.0
SettingsComponent.plPupilRemotePort.allowedLabels:[]
SettingsComponent.plPupilRemotePort.allowedTypes:[]
SettingsComponent.plPupilRemotePort.allowedUpdates:None
SettingsComponent.plPupilRemotePort.allowedVals:[]
SettingsComponent.plPupilRemotePort.canBePath:True
SettingsComponent.plPupilRemotePort.categ:Eyetracking
SettingsComponent.plPupilRemotePort.codeWanted:False
SettingsComponent.plPupilRemotePort.direct:True
SettingsComponent.plPupilRemotePort.hint:Pupil Remote Port
SettingsComponent.plPupilRemotePort.inputType:single
SettingsComponent.plPupilRemotePort.label:Pupil Remote Port
SettingsComponent.plPupilRemotePort.readOnly:False
SettingsComponent.plPupilRemotePort.staticUpdater:None
SettingsComponent.plPupilRemotePort.updates:None
SettingsComponent.plPupilRemotePort.val:50020
SettingsComponent.plPupilRemotePort.valType:num
SettingsComponent.plPupilRemoteTimeoutMs.default:1000.0
SettingsComponent.plPupilRemoteTimeoutMs.allowedLabels:[]
SettingsComponent.plPupilRemoteTimeoutMs.allowedTypes:[]
SettingsComponent.plPupilRemoteTimeoutMs.allowedUpdates:None
SettingsComponent.plPupilRemoteTimeoutMs.allowedVals:[]
SettingsComponent.plPupilRemoteTimeoutMs.canBePath:True
SettingsComponent.plPupilRemoteTimeoutMs.categ:Eyetracking
SettingsComponent.plPupilRemoteTimeoutMs.codeWanted:False
SettingsComponent.plPupilRemoteTimeoutMs.direct:True
SettingsComponent.plPupilRemoteTimeoutMs.hint:Pupil Remote Timeout (ms)
SettingsComponent.plPupilRemoteTimeoutMs.inputType:single
SettingsComponent.plPupilRemoteTimeoutMs.label:Pupil Remote Timeout (ms)
SettingsComponent.plPupilRemoteTimeoutMs.readOnly:False
SettingsComponent.plPupilRemoteTimeoutMs.staticUpdater:None
SettingsComponent.plPupilRemoteTimeoutMs.updates:None
SettingsComponent.plPupilRemoteTimeoutMs.val:1000
SettingsComponent.plPupilRemoteTimeoutMs.valType:num
SettingsComponent.plPupillometryOnly.default:False
SettingsComponent.plPupillometryOnly.allowedLabels:[]
SettingsComponent.plPupillometryOnly.allowedTypes:[]
SettingsComponent.plPupillometryOnly.allowedUpdates:None
SettingsComponent.plPupillometryOnly.allowedVals:[]
SettingsComponent.plPupillometryOnly.canBePath:True
SettingsComponent.plPupillometryOnly.categ:Eyetracking
SettingsComponent.plPupillometryOnly.codeWanted:False
SettingsComponent.plPupillometryOnly.direct:True
SettingsComponent.plPupillometryOnly.hint:Subscribe to pupil data only, does not require calibration or surface setup
SettingsComponent.plPupillometryOnly.inputType:bool
SettingsComponent.plPupillometryOnly.label:Pupillometry Only
SettingsComponent.plPupillometryOnly.readOnly:False
SettingsComponent.plPupillometryOnly.staticUpdater:None
SettingsComponent.plPupillometryOnly.updates:None
SettingsComponent.plPupillometryOnly.val:False
SettingsComponent.plPupillometryOnly.valType:bool
SettingsComponent.plSurfaceName.default:'psychopy_iohub_surface'
SettingsComponent.plSurfaceName.allowedLabels:[]
SettingsComponent.plSurfaceName.allowedTypes:[]
SettingsComponent.plSurfaceName.allowedUpdates:None
SettingsComponent.plSurfaceName.allowedVals:[]
SettingsComponent.plSurfaceName.canBePath:True
SettingsComponent.plSurfaceName.categ:Eyetracking
SettingsComponent.plSurfaceName.codeWanted:False
SettingsComponent.plSurfaceName.direct:True
SettingsComponent.plSurfaceName.hint:Name of the Pupil Capture surface
SettingsComponent.plSurfaceName.inputType:single
SettingsComponent.plSurfaceName.label:Surface Name
SettingsComponent.plSurfaceName.readOnly:False
SettingsComponent.plSurfaceName.staticUpdater:None
SettingsComponent.plSurfaceName.updates:None
SettingsComponent.plSurfaceName.val:psychopy_iohub_surface
SettingsComponent.plSurfaceName.valType:str
SettingsComponent.tbLicenseFile.default:''
SettingsComponent.tbLicenseFile.allowedLabels:[]
SettingsComponent.tbLicenseFile.allowedTypes:[]
SettingsComponent.tbLicenseFile.allowedUpdates:None
SettingsComponent.tbLicenseFile.allowedVals:[]
SettingsComponent.tbLicenseFile.canBePath:True
SettingsComponent.tbLicenseFile.categ:Eyetracking
SettingsComponent.tbLicenseFile.codeWanted:False
SettingsComponent.tbLicenseFile.direct:True
SettingsComponent.tbLicenseFile.hint:Eye tracker license file (optional).
SettingsComponent.tbLicenseFile.inputType:file
SettingsComponent.tbLicenseFile.label:License File
SettingsComponent.tbLicenseFile.readOnly:False
SettingsComponent.tbLicenseFile.staticUpdater:None
SettingsComponent.tbLicenseFile.updates:None
SettingsComponent.tbLicenseFile.val:
SettingsComponent.tbLicenseFile.valType:str
SettingsComponent.tbModel.default:''
SettingsComponent.tbModel.allowedLabels:[]
SettingsComponent.tbModel.allowedTypes:[]
SettingsComponent.tbModel.allowedUpdates:None
SettingsComponent.tbModel.allowedVals:[]
SettingsComponent.tbModel.canBePath:True
SettingsComponent.tbModel.categ:Eyetracking
SettingsComponent.tbModel.codeWanted:False
SettingsComponent.tbModel.direct:True
SettingsComponent.tbModel.hint:Eye tracker model.
SettingsComponent.tbModel.inputType:single
SettingsComponent.tbModel.label:Model Name
SettingsComponent.tbModel.readOnly:False
SettingsComponent.tbModel.staticUpdater:None
SettingsComponent.tbModel.updates:None
SettingsComponent.tbModel.val:
SettingsComponent.tbModel.valType:str
SettingsComponent.tbSampleRate.default:60.0
SettingsComponent.tbSampleRate.allowedLabels:[]
SettingsComponent.tbSampleRate.allowedTypes:[]
SettingsComponent.tbSampleRate.allowedUpdates:None
SettingsComponent.tbSampleRate.allowedVals:[]
SettingsComponent.tbSampleRate.canBePath:True
SettingsComponent.tbSampleRate.categ:Eyetracking
SettingsComponent.tbSampleRate.codeWanted:False
SettingsComponent.tbSampleRate.direct:True
SettingsComponent.tbSampleRate.hint:Eye tracker sampling rate.
SettingsComponent.tbSampleRate.inputType:single
SettingsComponent.tbSampleRate.label:Sampling Rate
SettingsComponent.tbSampleRate.readOnly:False
SettingsComponent.tbSampleRate.staticUpdater:None
SettingsComponent.tbSampleRate.updates:None
SettingsComponent.tbSampleRate.val:60
SettingsComponent.tbSampleRate.valType:num
SettingsComponent.tbSerialNo.default:''
SettingsComponent.tbSerialNo.allowedLabels:[]
SettingsComponent.tbSerialNo.allowedTypes:[]
SettingsComponent.tbSerialNo.allowedUpdates:None
SettingsComponent.tbSerialNo.allowedVals:[]
SettingsComponent.tbSerialNo.canBePath:True
SettingsComponent.tbSerialNo.categ:Eyetracking
SettingsComponent.tbSerialNo.codeWanted:False
SettingsComponent.tbSerialNo.direct:True
SettingsComponent.tbSerialNo.hint:Eye tracker serial number (optional).
SettingsComponent.tbSerialNo.inputType:single
SettingsComponent.tbSerialNo.label:Serial Number
SettingsComponent.tbSerialNo.readOnly:False
SettingsComponent.tbSerialNo.staticUpdater:None
SettingsComponent.tbSerialNo.updates:None
SettingsComponent.tbSerialNo.val:
SettingsComponent.tbSerialNo.valType:str
SliderComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'style', 'colorSpace', 'opacity', 'size', 'pos', 'Item Padding', 'units', 'anchor', 'ori', 'forceEndRoutine', 'contrast', 'styles', 'styleTweaks', 'font', 'flip', 'ticks', 'labels', 'granularity', 'readOnly']
SliderComponent.borderColor.default:'White'
SliderComponent.borderColor.allowedLabels:[]
SliderComponent.borderColor.allowedTypes:[]
SliderComponent.borderColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.borderColor.allowedVals:[]
SliderComponent.borderColor.canBePath:True
SliderComponent.borderColor.categ:Appearance
SliderComponent.borderColor.codeWanted:False
SliderComponent.borderColor.direct:True
SliderComponent.borderColor.hint:Color of all lines on this slider (might be overridden by the style setting)
SliderComponent.borderColor.inputType:color
SliderComponent.borderColor.label:Line Color
SliderComponent.borderColor.readOnly:False
SliderComponent.borderColor.staticUpdater:None
SliderComponent.borderColor.updates:constant
SliderComponent.borderColor.val:White
SliderComponent.borderColor.valType:color
SliderComponent.color.default:'LightGray'
SliderComponent.color.allowedLabels:[]
SliderComponent.color.allowedTypes:[]
SliderComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.color.allowedVals:[]
SliderComponent.color.canBePath:True
SliderComponent.color.categ:Appearance
SliderComponent.color.codeWanted:False
SliderComponent.color.direct:True
SliderComponent.color.hint:Color of all labels on this slider (might be overridden by the style setting)
SliderComponent.color.inputType:color
SliderComponent.color.label:Label Color
SliderComponent.color.readOnly:False
SliderComponent.color.staticUpdater:None
SliderComponent.color.updates:constant
SliderComponent.color.val:LightGray
SliderComponent.color.valType:color
SliderComponent.colorSpace.default:'rgb'
SliderComponent.colorSpace.allowedLabels:[]
SliderComponent.colorSpace.allowedTypes:[]
SliderComponent.colorSpace.allowedUpdates:None
SliderComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
SliderComponent.colorSpace.canBePath:True
SliderComponent.colorSpace.categ:Appearance
SliderComponent.colorSpace.codeWanted:False
SliderComponent.colorSpace.direct:True
SliderComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
SliderComponent.colorSpace.inputType:choice
SliderComponent.colorSpace.label:Color Space
SliderComponent.colorSpace.readOnly:False
SliderComponent.colorSpace.staticUpdater:None
SliderComponent.colorSpace.updates:constant
SliderComponent.colorSpace.val:rgb
SliderComponent.colorSpace.valType:str
SliderComponent.contrast.default:1.0
SliderComponent.contrast.allowedLabels:[]
SliderComponent.contrast.allowedTypes:[]
SliderComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.contrast.allowedVals:[]
SliderComponent.contrast.canBePath:True
SliderComponent.contrast.categ:Appearance
SliderComponent.contrast.codeWanted:False
SliderComponent.contrast.direct:True
SliderComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
SliderComponent.contrast.inputType:single
SliderComponent.contrast.label:Contrast
SliderComponent.contrast.readOnly:False
SliderComponent.contrast.staticUpdater:None
SliderComponent.contrast.updates:constant
SliderComponent.contrast.val:1
SliderComponent.contrast.valType:num
SliderComponent.disabled.default:False
SliderComponent.disabled.allowedLabels:[]
SliderComponent.disabled.allowedTypes:[]
SliderComponent.disabled.allowedUpdates:None
SliderComponent.disabled.allowedVals:[]
SliderComponent.disabled.canBePath:True
SliderComponent.disabled.categ:Testing
SliderComponent.disabled.codeWanted:False
SliderComponent.disabled.direct:False
SliderComponent.disabled.hint:Disable this component
SliderComponent.disabled.inputType:bool
SliderComponent.disabled.label:Disable component
SliderComponent.disabled.readOnly:False
SliderComponent.disabled.staticUpdater:None
SliderComponent.disabled.updates:None
SliderComponent.disabled.val:False
SliderComponent.disabled.valType:bool
SliderComponent.durationEstim.default:
SliderComponent.durationEstim.allowedLabels:[]
SliderComponent.durationEstim.allowedTypes:[]
SliderComponent.durationEstim.allowedUpdates:None
SliderComponent.durationEstim.allowedVals:[]
SliderComponent.durationEstim.canBePath:True
SliderComponent.durationEstim.categ:Basic
SliderComponent.durationEstim.codeWanted:False
SliderComponent.durationEstim.direct:False
SliderComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SliderComponent.durationEstim.inputType:single
SliderComponent.durationEstim.label:Expected duration (s)
SliderComponent.durationEstim.readOnly:False
SliderComponent.durationEstim.staticUpdater:None
SliderComponent.durationEstim.updates:None
SliderComponent.durationEstim.val:
SliderComponent.durationEstim.valType:code
SliderComponent.fillColor.default:'Red'
SliderComponent.fillColor.allowedLabels:[]
SliderComponent.fillColor.allowedTypes:[]
SliderComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.fillColor.allowedVals:[]
SliderComponent.fillColor.canBePath:True
SliderComponent.fillColor.categ:Appearance
SliderComponent.fillColor.codeWanted:False
SliderComponent.fillColor.direct:True
SliderComponent.fillColor.hint:Color of the marker on this slider (might be overridden by the style setting)
SliderComponent.fillColor.inputType:color
SliderComponent.fillColor.label:Marker Color
SliderComponent.fillColor.readOnly:False
SliderComponent.fillColor.staticUpdater:None
SliderComponent.fillColor.updates:constant
SliderComponent.fillColor.val:Red
SliderComponent.fillColor.valType:color
SliderComponent.flip.default:False
SliderComponent.flip.allowedLabels:[]
SliderComponent.flip.allowedTypes:[]
SliderComponent.flip.allowedUpdates:[]
SliderComponent.flip.allowedVals:[]
SliderComponent.flip.canBePath:True
SliderComponent.flip.categ:Layout
SliderComponent.flip.codeWanted:False
SliderComponent.flip.direct:True
SliderComponent.flip.hint:By default the labels will be on the bottom or left of the scale, but this can be flipped to the other side.
SliderComponent.flip.inputType:bool
SliderComponent.flip.label:Flip
SliderComponent.flip.readOnly:False
SliderComponent.flip.staticUpdater:None
SliderComponent.flip.updates:constant
SliderComponent.flip.val:False
SliderComponent.flip.valType:bool
SliderComponent.font.default:'Open Sans'
SliderComponent.font.allowedLabels:[]
SliderComponent.font.allowedTypes:[]
SliderComponent.font.allowedUpdates:['constant', 'set every repeat']
SliderComponent.font.allowedVals:[]
SliderComponent.font.canBePath:True
SliderComponent.font.categ:Formatting
SliderComponent.font.codeWanted:False
SliderComponent.font.direct:True
SliderComponent.font.hint:Font for the labels
SliderComponent.font.inputType:single
SliderComponent.font.label:Font
SliderComponent.font.readOnly:False
SliderComponent.font.staticUpdater:None
SliderComponent.font.updates:constant
SliderComponent.font.val:Open Sans
SliderComponent.font.valType:str
SliderComponent.forceEndRoutine.default:True
SliderComponent.forceEndRoutine.allowedLabels:[]
SliderComponent.forceEndRoutine.allowedTypes:[]
SliderComponent.forceEndRoutine.allowedUpdates:[]
SliderComponent.forceEndRoutine.allowedVals:[]
SliderComponent.forceEndRoutine.canBePath:True
SliderComponent.forceEndRoutine.categ:Basic
SliderComponent.forceEndRoutine.codeWanted:False
SliderComponent.forceEndRoutine.direct:True
SliderComponent.forceEndRoutine.hint:Should setting a rating (releasing the mouse) cause the end of the routine (e.g. trial)?
SliderComponent.forceEndRoutine.inputType:bool
SliderComponent.forceEndRoutine.label:Force end of Routine
SliderComponent.forceEndRoutine.readOnly:False
SliderComponent.forceEndRoutine.staticUpdater:None
SliderComponent.forceEndRoutine.updates:constant
SliderComponent.forceEndRoutine.val:True
SliderComponent.forceEndRoutine.valType:bool
SliderComponent.granularity.default:0.0
SliderComponent.granularity.allowedLabels:[]
SliderComponent.granularity.allowedTypes:[]
SliderComponent.granularity.allowedUpdates:None
SliderComponent.granularity.allowedVals:[]
SliderComponent.granularity.canBePath:True
SliderComponent.granularity.categ:Basic
SliderComponent.granularity.codeWanted:False
SliderComponent.granularity.direct:True
SliderComponent.granularity.hint:Specifies the minimum step size (0 for a continuous scale, 1 for integer rating scale)
SliderComponent.granularity.inputType:single
SliderComponent.granularity.label:Granularity
SliderComponent.granularity.readOnly:False
SliderComponent.granularity.staticUpdater:None
SliderComponent.granularity.updates:constant
SliderComponent.granularity.val:0
SliderComponent.granularity.valType:num
SliderComponent.initVal.default:
SliderComponent.initVal.allowedLabels:[]
SliderComponent.initVal.allowedTypes:[]
SliderComponent.initVal.allowedUpdates:None
SliderComponent.initVal.allowedVals:[]
SliderComponent.initVal.canBePath:True
SliderComponent.initVal.categ:Basic
SliderComponent.initVal.codeWanted:False
SliderComponent.initVal.direct:True
SliderComponent.initVal.hint:Value of the slider befre any response, leave blank to hide the marker until clicked on
SliderComponent.initVal.inputType:single
SliderComponent.initVal.label:Starting Value
SliderComponent.initVal.readOnly:False
SliderComponent.initVal.staticUpdater:None
SliderComponent.initVal.updates:None
SliderComponent.initVal.val:
SliderComponent.initVal.valType:code
SliderComponent.labels.default:[]
SliderComponent.labels.allowedLabels:[]
SliderComponent.labels.allowedTypes:[]
SliderComponent.labels.allowedUpdates:None
SliderComponent.labels.allowedVals:[]
SliderComponent.labels.canBePath:True
SliderComponent.labels.categ:Basic
SliderComponent.labels.codeWanted:False
SliderComponent.labels.direct:True
SliderComponent.labels.hint:Labels for the tick marks on the scale, separated by commas
SliderComponent.labels.inputType:single
SliderComponent.labels.label:Labels
SliderComponent.labels.readOnly:False
SliderComponent.labels.staticUpdater:None
SliderComponent.labels.updates:constant
SliderComponent.labels.val:
SliderComponent.labels.valType:list
SliderComponent.letterHeight.default:0.05
SliderComponent.letterHeight.allowedLabels:[]
SliderComponent.letterHeight.allowedTypes:[]
SliderComponent.letterHeight.allowedUpdates:['constant', 'set every repeat']
SliderComponent.letterHeight.allowedVals:[]
SliderComponent.letterHeight.canBePath:True
SliderComponent.letterHeight.categ:Formatting
SliderComponent.letterHeight.codeWanted:False
SliderComponent.letterHeight.direct:True
SliderComponent.letterHeight.hint:Letter height for text in labels
SliderComponent.letterHeight.inputType:single
SliderComponent.letterHeight.label:Letter height
SliderComponent.letterHeight.readOnly:False
SliderComponent.letterHeight.staticUpdater:None
SliderComponent.letterHeight.updates:constant
SliderComponent.letterHeight.val:0.05
SliderComponent.letterHeight.valType:num
SliderComponent.name.default:slider
SliderComponent.name.allowedLabels:[]
SliderComponent.name.allowedTypes:[]
SliderComponent.name.allowedUpdates:None
SliderComponent.name.allowedVals:[]
SliderComponent.name.canBePath:True
SliderComponent.name.categ:Basic
SliderComponent.name.codeWanted:False
SliderComponent.name.direct:True
SliderComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
SliderComponent.name.inputType:single
SliderComponent.name.label:Name
SliderComponent.name.readOnly:False
SliderComponent.name.staticUpdater:None
SliderComponent.name.val:slider
SliderComponent.name.valType:code
SliderComponent.opacity.default:None
SliderComponent.opacity.allowedLabels:[]
SliderComponent.opacity.allowedTypes:[]
SliderComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.opacity.allowedVals:[]
SliderComponent.opacity.canBePath:True
SliderComponent.opacity.categ:Appearance
SliderComponent.opacity.codeWanted:False
SliderComponent.opacity.direct:True
SliderComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
SliderComponent.opacity.inputType:single
SliderComponent.opacity.label:Opacity
SliderComponent.opacity.readOnly:False
SliderComponent.opacity.staticUpdater:None
SliderComponent.opacity.updates:constant
SliderComponent.opacity.val:
SliderComponent.opacity.valType:num
SliderComponent.ori.default:0.0
SliderComponent.ori.allowedLabels:[]
SliderComponent.ori.allowedTypes:[]
SliderComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.ori.allowedVals:[-360, 360]
SliderComponent.ori.canBePath:True
SliderComponent.ori.categ:Layout
SliderComponent.ori.codeWanted:False
SliderComponent.ori.direct:True
SliderComponent.ori.hint:Orientation of this stimulus (in deg)
SliderComponent.ori.inputType:spin
SliderComponent.ori.label:Orientation
SliderComponent.ori.readOnly:False
SliderComponent.ori.staticUpdater:None
SliderComponent.ori.updates:constant
SliderComponent.ori.val:0
SliderComponent.ori.valType:num
SliderComponent.pos.default:(0, -0.4)
SliderComponent.pos.allowedLabels:[]
SliderComponent.pos.allowedTypes:[]
SliderComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.pos.allowedVals:[]
SliderComponent.pos.canBePath:True
SliderComponent.pos.categ:Layout
SliderComponent.pos.codeWanted:False
SliderComponent.pos.direct:True
SliderComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
SliderComponent.pos.inputType:single
SliderComponent.pos.label:Position [x,y]
SliderComponent.pos.readOnly:False
SliderComponent.pos.staticUpdater:None
SliderComponent.pos.updates:constant
SliderComponent.pos.val:(0, -0.4)
SliderComponent.pos.valType:list
SliderComponent.readOnly.default:False
SliderComponent.readOnly.allowedLabels:[]
SliderComponent.readOnly.allowedTypes:[]
SliderComponent.readOnly.allowedUpdates:[]
SliderComponent.readOnly.allowedVals:[]
SliderComponent.readOnly.canBePath:True
SliderComponent.readOnly.categ:Data
SliderComponent.readOnly.codeWanted:False
SliderComponent.readOnly.direct:True
SliderComponent.readOnly.hint:Should participant be able to change the rating on the Slider?
SliderComponent.readOnly.inputType:bool
SliderComponent.readOnly.label:readOnly
SliderComponent.readOnly.readOnly:False
SliderComponent.readOnly.staticUpdater:None
SliderComponent.readOnly.updates:constant
SliderComponent.readOnly.val:False
SliderComponent.readOnly.valType:bool
SliderComponent.saveStartStop.default:True
SliderComponent.saveStartStop.allowedLabels:[]
SliderComponent.saveStartStop.allowedTypes:[]
SliderComponent.saveStartStop.allowedUpdates:None
SliderComponent.saveStartStop.allowedVals:[]
SliderComponent.saveStartStop.canBePath:True
SliderComponent.saveStartStop.categ:Data
SliderComponent.saveStartStop.codeWanted:False
SliderComponent.saveStartStop.direct:True
SliderComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
SliderComponent.saveStartStop.inputType:bool
SliderComponent.saveStartStop.label:Save onset/offset times
SliderComponent.saveStartStop.readOnly:False
SliderComponent.saveStartStop.staticUpdater:None
SliderComponent.saveStartStop.updates:None
SliderComponent.saveStartStop.val:True
SliderComponent.saveStartStop.valType:bool
SliderComponent.size.default:(1.0, 0.1)
SliderComponent.size.allowedLabels:[]
SliderComponent.size.allowedTypes:[]
SliderComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.size.allowedVals:[]
SliderComponent.size.canBePath:True
SliderComponent.size.categ:Layout
SliderComponent.size.codeWanted:False
SliderComponent.size.direct:True
SliderComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
SliderComponent.size.inputType:single
SliderComponent.size.label:Size [w,h]
SliderComponent.size.readOnly:False
SliderComponent.size.staticUpdater:None
SliderComponent.size.updates:constant
SliderComponent.size.val:(1.0, 0.1)
SliderComponent.size.valType:list
SliderComponent.startEstim.default:
SliderComponent.startEstim.allowedLabels:[]
SliderComponent.startEstim.allowedTypes:[]
SliderComponent.startEstim.allowedUpdates:None
SliderComponent.startEstim.allowedVals:[]
SliderComponent.startEstim.canBePath:True
SliderComponent.startEstim.categ:Basic
SliderComponent.startEstim.codeWanted:False
SliderComponent.startEstim.direct:False
SliderComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SliderComponent.startEstim.inputType:single
SliderComponent.startEstim.label:Expected start (s)
SliderComponent.startEstim.readOnly:False
SliderComponent.startEstim.staticUpdater:None
SliderComponent.startEstim.updates:None
SliderComponent.startEstim.val:
SliderComponent.startEstim.valType:code
SliderComponent.startType.default:'time (s)'
SliderComponent.startType.allowedLabels:[]
SliderComponent.startType.allowedTypes:[]
SliderComponent.startType.allowedUpdates:None
SliderComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SliderComponent.startType.canBePath:True
SliderComponent.startType.categ:Basic
SliderComponent.startType.codeWanted:False
SliderComponent.startType.direct:False
SliderComponent.startType.hint:How do you want to define your start point?
SliderComponent.startType.inputType:choice
SliderComponent.startType.label:start type
SliderComponent.startType.readOnly:False
SliderComponent.startType.staticUpdater:None
SliderComponent.startType.updates:None
SliderComponent.startType.val:time (s)
SliderComponent.startType.valType:str
SliderComponent.startVal.default:0.0
SliderComponent.startVal.allowedLabels:[]
SliderComponent.startVal.allowedTypes:[]
SliderComponent.startVal.allowedUpdates:None
SliderComponent.startVal.allowedVals:[]
SliderComponent.startVal.canBePath:True
SliderComponent.startVal.categ:Basic
SliderComponent.startVal.codeWanted:False
SliderComponent.startVal.direct:True
SliderComponent.startVal.hint:When does the component start?
SliderComponent.startVal.inputType:single
SliderComponent.startVal.label:Start
SliderComponent.startVal.readOnly:False
SliderComponent.startVal.staticUpdater:None
SliderComponent.startVal.updates:None
SliderComponent.startVal.val:0.0
SliderComponent.startVal.valType:code
SliderComponent.stopType.default:'condition'
SliderComponent.stopType.allowedLabels:[]
SliderComponent.stopType.allowedTypes:[]
SliderComponent.stopType.allowedUpdates:None
SliderComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
SliderComponent.stopType.canBePath:True
SliderComponent.stopType.categ:Basic
SliderComponent.stopType.codeWanted:False
SliderComponent.stopType.direct:False
SliderComponent.stopType.hint:How do you want to define your end point?
SliderComponent.stopType.inputType:choice
SliderComponent.stopType.label:stop type
SliderComponent.stopType.readOnly:False
SliderComponent.stopType.staticUpdater:None
SliderComponent.stopType.updates:None
SliderComponent.stopType.val:condition
SliderComponent.stopType.valType:str
SliderComponent.stopVal.default:
SliderComponent.stopVal.allowedLabels:[]
SliderComponent.stopVal.allowedTypes:[]
SliderComponent.stopVal.allowedUpdates:[]
SliderComponent.stopVal.allowedVals:[]
SliderComponent.stopVal.canBePath:True
SliderComponent.stopVal.categ:Basic
SliderComponent.stopVal.codeWanted:False
SliderComponent.stopVal.direct:True
SliderComponent.stopVal.hint:When does the component end? (blank is endless)
SliderComponent.stopVal.inputType:single
SliderComponent.stopVal.label:Stop
SliderComponent.stopVal.readOnly:False
SliderComponent.stopVal.staticUpdater:None
SliderComponent.stopVal.updates:constant
SliderComponent.stopVal.val:
SliderComponent.stopVal.valType:code
SliderComponent.storeHistory.default:False
SliderComponent.storeHistory.allowedLabels:[]
SliderComponent.storeHistory.allowedTypes:[]
SliderComponent.storeHistory.allowedUpdates:[]
SliderComponent.storeHistory.allowedVals:[]
SliderComponent.storeHistory.canBePath:True
SliderComponent.storeHistory.categ:Data
SliderComponent.storeHistory.codeWanted:False
SliderComponent.storeHistory.direct:True
SliderComponent.storeHistory.hint:store the history of (selection, time)
SliderComponent.storeHistory.inputType:bool
SliderComponent.storeHistory.label:Store history
SliderComponent.storeHistory.readOnly:False
SliderComponent.storeHistory.staticUpdater:None
SliderComponent.storeHistory.updates:constant
SliderComponent.storeHistory.val:False
SliderComponent.storeHistory.valType:bool
SliderComponent.storeRating.default:True
SliderComponent.storeRating.allowedLabels:[]
SliderComponent.storeRating.allowedTypes:[]
SliderComponent.storeRating.allowedUpdates:[]
SliderComponent.storeRating.allowedVals:[]
SliderComponent.storeRating.canBePath:True
SliderComponent.storeRating.categ:Data
SliderComponent.storeRating.codeWanted:False
SliderComponent.storeRating.direct:True
SliderComponent.storeRating.hint:store the rating
SliderComponent.storeRating.inputType:bool
SliderComponent.storeRating.label:Store rating
SliderComponent.storeRating.readOnly:False
SliderComponent.storeRating.staticUpdater:None
SliderComponent.storeRating.updates:constant
SliderComponent.storeRating.val:True
SliderComponent.storeRating.valType:bool
SliderComponent.storeRatingTime.default:True
SliderComponent.storeRatingTime.allowedLabels:[]
SliderComponent.storeRatingTime.allowedTypes:[]
SliderComponent.storeRatingTime.allowedUpdates:[]
SliderComponent.storeRatingTime.allowedVals:[]
SliderComponent.storeRatingTime.canBePath:True
SliderComponent.storeRatingTime.categ:Data
SliderComponent.storeRatingTime.codeWanted:False
SliderComponent.storeRatingTime.direct:True
SliderComponent.storeRatingTime.hint:Store the time taken to make the choice (in seconds)
SliderComponent.storeRatingTime.inputType:bool
SliderComponent.storeRatingTime.label:Store rating time
SliderComponent.storeRatingTime.readOnly:False
SliderComponent.storeRatingTime.staticUpdater:None
SliderComponent.storeRatingTime.updates:constant
SliderComponent.storeRatingTime.val:True
SliderComponent.storeRatingTime.valType:bool
SliderComponent.styleTweaks.default:[]
SliderComponent.styleTweaks.allowedLabels:[]
SliderComponent.styleTweaks.allowedTypes:[]
SliderComponent.styleTweaks.allowedUpdates:None
SliderComponent.styleTweaks.allowedVals:['labels45', 'triangleMarker']
SliderComponent.styleTweaks.canBePath:True
SliderComponent.styleTweaks.categ:Appearance
SliderComponent.styleTweaks.codeWanted:False
SliderComponent.styleTweaks.direct:True
SliderComponent.styleTweaks.hint:Tweaks to change the appearance of the slider beyond its style.
SliderComponent.styleTweaks.inputType:multiChoice
SliderComponent.styleTweaks.label:Style Tweaks
SliderComponent.styleTweaks.readOnly:False
SliderComponent.styleTweaks.staticUpdater:None
SliderComponent.styleTweaks.updates:constant
SliderComponent.styleTweaks.val:[]
SliderComponent.styleTweaks.valType:list
SliderComponent.styles.default:'rating'
SliderComponent.styles.allowedLabels:[]
SliderComponent.styles.allowedTypes:[]
SliderComponent.styles.allowedUpdates:None
SliderComponent.styles.allowedVals:['slider', 'rating', 'radio', 'scrollbar']
SliderComponent.styles.canBePath:True
SliderComponent.styles.categ:Appearance
SliderComponent.styles.codeWanted:False
SliderComponent.styles.direct:True
SliderComponent.styles.hint:Discrete styles to control the overall appearance of the slider.
SliderComponent.styles.inputType:choice
SliderComponent.styles.label:Styles
SliderComponent.styles.readOnly:False
SliderComponent.styles.staticUpdater:None
SliderComponent.styles.updates:constant
SliderComponent.styles.val:rating
SliderComponent.styles.valType:str
SliderComponent.syncScreenRefresh.default:True
SliderComponent.syncScreenRefresh.allowedLabels:[]
SliderComponent.syncScreenRefresh.allowedTypes:[]
SliderComponent.syncScreenRefresh.allowedUpdates:None
SliderComponent.syncScreenRefresh.allowedVals:[]
SliderComponent.syncScreenRefresh.canBePath:True
SliderComponent.syncScreenRefresh.categ:Data
SliderComponent.syncScreenRefresh.codeWanted:False
SliderComponent.syncScreenRefresh.direct:True
SliderComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
SliderComponent.syncScreenRefresh.inputType:bool
SliderComponent.syncScreenRefresh.label:Sync timing with screen refresh
SliderComponent.syncScreenRefresh.readOnly:True
SliderComponent.syncScreenRefresh.staticUpdater:None
SliderComponent.syncScreenRefresh.updates:None
SliderComponent.syncScreenRefresh.val:True
SliderComponent.syncScreenRefresh.valType:bool
SliderComponent.ticks.default:(1, 2, 3, 4, 5)
SliderComponent.ticks.allowedLabels:[]
SliderComponent.ticks.allowedTypes:[]
SliderComponent.ticks.allowedUpdates:None
SliderComponent.ticks.allowedVals:[]
SliderComponent.ticks.canBePath:True
SliderComponent.ticks.categ:Basic
SliderComponent.ticks.codeWanted:False
SliderComponent.ticks.direct:True
SliderComponent.ticks.hint:Tick positions (numerical) on the scale, separated by commas
SliderComponent.ticks.inputType:single
SliderComponent.ticks.label:Ticks
SliderComponent.ticks.readOnly:False
SliderComponent.ticks.staticUpdater:None
SliderComponent.ticks.updates:constant
SliderComponent.ticks.val:(1, 2, 3, 4, 5)
SliderComponent.ticks.valType:list
SliderComponent.units.default:'from exp settings'
SliderComponent.units.allowedLabels:[]
SliderComponent.units.allowedTypes:[]
SliderComponent.units.allowedUpdates:None
SliderComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
SliderComponent.units.canBePath:True
SliderComponent.units.categ:Layout
SliderComponent.units.codeWanted:False
SliderComponent.units.direct:True
SliderComponent.units.hint:Units of dimensions for this stimulus
SliderComponent.units.inputType:choice
SliderComponent.units.label:Spatial Units
SliderComponent.units.readOnly:False
SliderComponent.units.staticUpdater:None
SliderComponent.units.updates:None
SliderComponent.units.val:from exp settings
SliderComponent.units.valType:str
SoundComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'sound', 'volume', 'hammingWindow']
SoundComponent.disabled.default:False
SoundComponent.disabled.allowedLabels:[]
SoundComponent.disabled.allowedTypes:[]
SoundComponent.disabled.allowedUpdates:None
SoundComponent.disabled.allowedVals:[]
SoundComponent.disabled.canBePath:True
SoundComponent.disabled.categ:Testing
SoundComponent.disabled.codeWanted:False
SoundComponent.disabled.direct:False
SoundComponent.disabled.hint:Disable this component
SoundComponent.disabled.inputType:bool
SoundComponent.disabled.label:Disable component
SoundComponent.disabled.readOnly:False
SoundComponent.disabled.staticUpdater:None
SoundComponent.disabled.updates:None
SoundComponent.disabled.val:False
SoundComponent.disabled.valType:bool
SoundComponent.durationEstim.default:
SoundComponent.durationEstim.allowedLabels:[]
SoundComponent.durationEstim.allowedTypes:[]
SoundComponent.durationEstim.allowedUpdates:None
SoundComponent.durationEstim.allowedVals:[]
SoundComponent.durationEstim.canBePath:True
SoundComponent.durationEstim.categ:Basic
SoundComponent.durationEstim.codeWanted:False
SoundComponent.durationEstim.direct:False
SoundComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SoundComponent.durationEstim.inputType:single
SoundComponent.durationEstim.label:Expected duration (s)
SoundComponent.durationEstim.readOnly:False
SoundComponent.durationEstim.staticUpdater:None
SoundComponent.durationEstim.updates:None
SoundComponent.durationEstim.val:
SoundComponent.durationEstim.valType:code
SoundComponent.hamming.default:True
SoundComponent.hamming.allowedLabels:[]
SoundComponent.hamming.allowedTypes:[]
SoundComponent.hamming.allowedUpdates:None
SoundComponent.hamming.allowedVals:[]
SoundComponent.hamming.canBePath:True
SoundComponent.hamming.categ:Playback
SoundComponent.hamming.codeWanted:False
SoundComponent.hamming.direct:True
SoundComponent.hamming.hint:For tones we can apply a Hamming window to prevent 'clicks' that are caused by a sudden onset. This delays onset by roughly 1ms.
SoundComponent.hamming.inputType:bool
SoundComponent.hamming.label:Hamming window
SoundComponent.hamming.readOnly:False
SoundComponent.hamming.staticUpdater:None
SoundComponent.hamming.updates:constant
SoundComponent.hamming.val:True
SoundComponent.hamming.valType:bool
SoundComponent.name.default:sound_1
SoundComponent.name.allowedLabels:[]
SoundComponent.name.allowedTypes:[]
SoundComponent.name.allowedUpdates:None
SoundComponent.name.allowedVals:[]
SoundComponent.name.canBePath:True
SoundComponent.name.categ:Basic
SoundComponent.name.codeWanted:False
SoundComponent.name.direct:True
SoundComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
SoundComponent.name.inputType:single
SoundComponent.name.label:Name
SoundComponent.name.readOnly:False
SoundComponent.name.staticUpdater:None
SoundComponent.name.val:sound_1
SoundComponent.name.valType:code
SoundComponent.saveStartStop.default:True
SoundComponent.saveStartStop.allowedLabels:[]
SoundComponent.saveStartStop.allowedTypes:[]
SoundComponent.saveStartStop.allowedUpdates:None
SoundComponent.saveStartStop.allowedVals:[]
SoundComponent.saveStartStop.canBePath:True
SoundComponent.saveStartStop.categ:Data
SoundComponent.saveStartStop.codeWanted:False
SoundComponent.saveStartStop.direct:True
SoundComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
SoundComponent.saveStartStop.inputType:bool
SoundComponent.saveStartStop.label:Save onset/offset times
SoundComponent.saveStartStop.readOnly:False
SoundComponent.saveStartStop.staticUpdater:None
SoundComponent.saveStartStop.updates:None
SoundComponent.saveStartStop.val:True
SoundComponent.saveStartStop.valType:bool
SoundComponent.sound.default:'A'
SoundComponent.sound.allowedLabels:[]
SoundComponent.sound.allowedTypes:[]
SoundComponent.sound.allowedUpdates:['constant', 'set every repeat']
SoundComponent.sound.allowedVals:[]
SoundComponent.sound.canBePath:True
SoundComponent.sound.categ:Basic
SoundComponent.sound.codeWanted:False
SoundComponent.sound.direct:True
SoundComponent.sound.hint:A sound can be a note name (e.g. A or Bf), a number to specify Hz (e.g. 440) or a filename
SoundComponent.sound.inputType:file
SoundComponent.sound.label:Sound
SoundComponent.sound.readOnly:False
SoundComponent.sound.staticUpdater:None
SoundComponent.sound.updates:constant
SoundComponent.sound.val:A
SoundComponent.sound.valType:str
SoundComponent.startEstim.default:
SoundComponent.startEstim.allowedLabels:[]
SoundComponent.startEstim.allowedTypes:[]
SoundComponent.startEstim.allowedUpdates:None
SoundComponent.startEstim.allowedVals:[]
SoundComponent.startEstim.canBePath:True
SoundComponent.startEstim.categ:Basic
SoundComponent.startEstim.codeWanted:False
SoundComponent.startEstim.direct:False
SoundComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SoundComponent.startEstim.inputType:single
SoundComponent.startEstim.label:Expected start (s)
SoundComponent.startEstim.readOnly:False
SoundComponent.startEstim.staticUpdater:None
SoundComponent.startEstim.updates:None
SoundComponent.startEstim.val:
SoundComponent.startEstim.valType:code
SoundComponent.startType.default:'time (s)'
SoundComponent.startType.allowedLabels:[]
SoundComponent.startType.allowedTypes:[]
SoundComponent.startType.allowedUpdates:None
SoundComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SoundComponent.startType.canBePath:True
SoundComponent.startType.categ:Basic
SoundComponent.startType.codeWanted:False
SoundComponent.startType.direct:False
SoundComponent.startType.hint:How do you want to define your start point?
SoundComponent.startType.inputType:choice
SoundComponent.startType.label:start type
SoundComponent.startType.readOnly:False
SoundComponent.startType.staticUpdater:None
SoundComponent.startType.updates:None
SoundComponent.startType.val:time (s)
SoundComponent.startType.valType:str
SoundComponent.startVal.default:0.0
SoundComponent.startVal.allowedLabels:[]
SoundComponent.startVal.allowedTypes:[]
SoundComponent.startVal.allowedUpdates:None
SoundComponent.startVal.allowedVals:[]
SoundComponent.startVal.canBePath:True
SoundComponent.startVal.categ:Basic
SoundComponent.startVal.codeWanted:False
SoundComponent.startVal.direct:True
SoundComponent.startVal.hint:When does the component start?
SoundComponent.startVal.inputType:single
SoundComponent.startVal.label:Start
SoundComponent.startVal.readOnly:False
SoundComponent.startVal.staticUpdater:None
SoundComponent.startVal.updates:None
SoundComponent.startVal.val:0.0
SoundComponent.startVal.valType:code
SoundComponent.stopType.default:'duration (s)'
SoundComponent.stopType.allowedLabels:[]
SoundComponent.stopType.allowedTypes:[]
SoundComponent.stopType.allowedUpdates:None
SoundComponent.stopType.allowedVals:['duration (s)']
SoundComponent.stopType.canBePath:True
SoundComponent.stopType.categ:Basic
SoundComponent.stopType.codeWanted:False
SoundComponent.stopType.direct:False
SoundComponent.stopType.hint:The maximum duration of a sound in seconds
SoundComponent.stopType.inputType:choice
SoundComponent.stopType.label:stop type
SoundComponent.stopType.readOnly:False
SoundComponent.stopType.staticUpdater:None
SoundComponent.stopType.updates:None
SoundComponent.stopType.val:duration (s)
SoundComponent.stopType.valType:str
SoundComponent.stopVal.default:1.0
SoundComponent.stopVal.allowedLabels:[]
SoundComponent.stopVal.allowedTypes:[]
SoundComponent.stopVal.allowedUpdates:[]
SoundComponent.stopVal.allowedVals:[]
SoundComponent.stopVal.canBePath:True
SoundComponent.stopVal.categ:Basic
SoundComponent.stopVal.codeWanted:False
SoundComponent.stopVal.direct:True
SoundComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
SoundComponent.stopVal.inputType:single
SoundComponent.stopVal.label:Stop
SoundComponent.stopVal.readOnly:False
SoundComponent.stopVal.staticUpdater:None
SoundComponent.stopVal.updates:constant
SoundComponent.stopVal.val:1.0
SoundComponent.stopVal.valType:code
SoundComponent.syncScreenRefresh.default:True
SoundComponent.syncScreenRefresh.allowedLabels:[]
SoundComponent.syncScreenRefresh.allowedTypes:[]
SoundComponent.syncScreenRefresh.allowedUpdates:None
SoundComponent.syncScreenRefresh.allowedVals:[]
SoundComponent.syncScreenRefresh.canBePath:True
SoundComponent.syncScreenRefresh.categ:Basic
SoundComponent.syncScreenRefresh.codeWanted:False
SoundComponent.syncScreenRefresh.direct:True
SoundComponent.syncScreenRefresh.hint:A reaction time to a sound stimulus should be based on when the screen flipped
SoundComponent.syncScreenRefresh.inputType:bool
SoundComponent.syncScreenRefresh.label:Sync Start With Screen
SoundComponent.syncScreenRefresh.readOnly:False
SoundComponent.syncScreenRefresh.staticUpdater:None
SoundComponent.syncScreenRefresh.updates:constant
SoundComponent.syncScreenRefresh.val:True
SoundComponent.syncScreenRefresh.valType:bool
SoundComponent.volume.default:1.0
SoundComponent.volume.allowedLabels:[]
SoundComponent.volume.allowedTypes:[]
SoundComponent.volume.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SoundComponent.volume.allowedVals:[]
SoundComponent.volume.canBePath:True
SoundComponent.volume.categ:Playback
SoundComponent.volume.codeWanted:False
SoundComponent.volume.direct:True
SoundComponent.volume.hint:The volume (in range 0 to 1)
SoundComponent.volume.inputType:single
SoundComponent.volume.label:Volume
SoundComponent.volume.readOnly:False
SoundComponent.volume.staticUpdater:None
SoundComponent.volume.updates:constant
SoundComponent.volume.val:1
SoundComponent.volume.valType:num
StaticComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType']
StaticComponent.code.default:
StaticComponent.code.allowedLabels:[]
StaticComponent.code.allowedTypes:[]
StaticComponent.code.allowedUpdates:None
StaticComponent.code.allowedVals:[]
StaticComponent.code.canBePath:True
StaticComponent.code.categ:Custom
StaticComponent.code.codeWanted:False
StaticComponent.code.direct:True
StaticComponent.code.hint:Custom code to be run during the static period (after updates)
StaticComponent.code.inputType:multi
StaticComponent.code.label:Custom code
StaticComponent.code.readOnly:False
StaticComponent.code.staticUpdater:None
StaticComponent.code.updates:None
StaticComponent.code.val:
StaticComponent.code.valType:code
StaticComponent.disabled.default:False
StaticComponent.disabled.allowedLabels:[]
StaticComponent.disabled.allowedTypes:[]
StaticComponent.disabled.allowedUpdates:None
StaticComponent.disabled.allowedVals:[]
StaticComponent.disabled.canBePath:True
StaticComponent.disabled.categ:Testing
StaticComponent.disabled.codeWanted:False
StaticComponent.disabled.direct:False
StaticComponent.disabled.hint:Disable this component
StaticComponent.disabled.inputType:bool
StaticComponent.disabled.label:Disable component
StaticComponent.disabled.readOnly:False
StaticComponent.disabled.staticUpdater:None
StaticComponent.disabled.updates:None
StaticComponent.disabled.val:False
StaticComponent.disabled.valType:bool
StaticComponent.durationEstim.default:
StaticComponent.durationEstim.allowedLabels:[]
StaticComponent.durationEstim.allowedTypes:[]
StaticComponent.durationEstim.allowedUpdates:None
StaticComponent.durationEstim.allowedVals:[]
StaticComponent.durationEstim.canBePath:True
StaticComponent.durationEstim.categ:Basic
StaticComponent.durationEstim.codeWanted:False
StaticComponent.durationEstim.direct:False
StaticComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
StaticComponent.durationEstim.inputType:single
StaticComponent.durationEstim.label:Expected duration (s)
StaticComponent.durationEstim.readOnly:False
StaticComponent.durationEstim.staticUpdater:None
StaticComponent.durationEstim.updates:None
StaticComponent.durationEstim.val:
StaticComponent.durationEstim.valType:code
StaticComponent.name.default:ISI
StaticComponent.name.allowedLabels:[]
StaticComponent.name.allowedTypes:[]
StaticComponent.name.allowedUpdates:None
StaticComponent.name.allowedVals:[]
StaticComponent.name.canBePath:True
StaticComponent.name.categ:Basic
StaticComponent.name.codeWanted:False
StaticComponent.name.direct:True
StaticComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
StaticComponent.name.inputType:single
StaticComponent.name.label:Name
StaticComponent.name.readOnly:False
StaticComponent.name.staticUpdater:None
StaticComponent.name.val:ISI
StaticComponent.name.valType:code
StaticComponent.saveStartStop.default:True
StaticComponent.saveStartStop.allowedLabels:[]
StaticComponent.saveStartStop.allowedTypes:[]
StaticComponent.saveStartStop.allowedUpdates:None
StaticComponent.saveStartStop.allowedVals:[]
StaticComponent.saveStartStop.canBePath:True
StaticComponent.saveStartStop.categ:Data
StaticComponent.saveStartStop.codeWanted:False
StaticComponent.saveStartStop.direct:True
StaticComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
StaticComponent.saveStartStop.inputType:bool
StaticComponent.saveStartStop.label:Save onset/offset times
StaticComponent.saveStartStop.readOnly:False
StaticComponent.saveStartStop.staticUpdater:None
StaticComponent.saveStartStop.updates:None
StaticComponent.saveStartStop.val:True
StaticComponent.saveStartStop.valType:bool
StaticComponent.startEstim.default:
StaticComponent.startEstim.allowedLabels:[]
StaticComponent.startEstim.allowedTypes:[]
StaticComponent.startEstim.allowedUpdates:None
StaticComponent.startEstim.allowedVals:[]
StaticComponent.startEstim.canBePath:True
StaticComponent.startEstim.categ:Basic
StaticComponent.startEstim.codeWanted:False
StaticComponent.startEstim.direct:False
StaticComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
StaticComponent.startEstim.inputType:single
StaticComponent.startEstim.label:Expected start (s)
StaticComponent.startEstim.readOnly:False
StaticComponent.startEstim.staticUpdater:None
StaticComponent.startEstim.updates:None
StaticComponent.startEstim.val:
StaticComponent.startEstim.valType:code
StaticComponent.startType.default:'time (s)'
StaticComponent.startType.allowedLabels:[]
StaticComponent.startType.allowedTypes:[]
StaticComponent.startType.allowedUpdates:None
StaticComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
StaticComponent.startType.canBePath:True
StaticComponent.startType.categ:Basic
StaticComponent.startType.codeWanted:False
StaticComponent.startType.direct:False
StaticComponent.startType.hint:How do you want to define your start point?
StaticComponent.startType.inputType:choice
StaticComponent.startType.label:start type
StaticComponent.startType.readOnly:False
StaticComponent.startType.staticUpdater:None
StaticComponent.startType.updates:None
StaticComponent.startType.val:time (s)
StaticComponent.startType.valType:str
StaticComponent.startVal.default:
StaticComponent.startVal.allowedLabels:[]
StaticComponent.startVal.allowedTypes:[]
StaticComponent.startVal.allowedUpdates:None
StaticComponent.startVal.allowedVals:[]
StaticComponent.startVal.canBePath:True
StaticComponent.startVal.categ:Basic
StaticComponent.startVal.codeWanted:False
StaticComponent.startVal.direct:True
StaticComponent.startVal.hint:When does the component start?
StaticComponent.startVal.inputType:single
StaticComponent.startVal.label:Start
StaticComponent.startVal.readOnly:False
StaticComponent.startVal.staticUpdater:None
StaticComponent.startVal.updates:None
StaticComponent.startVal.val:
StaticComponent.startVal.valType:code
StaticComponent.stopType.default:'duration (s)'
StaticComponent.stopType.allowedLabels:[]
StaticComponent.stopType.allowedTypes:[]
StaticComponent.stopType.allowedUpdates:None
StaticComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
StaticComponent.stopType.canBePath:True
StaticComponent.stopType.categ:Basic
StaticComponent.stopType.codeWanted:False
StaticComponent.stopType.direct:False
StaticComponent.stopType.hint:How do you want to define your end point?
StaticComponent.stopType.inputType:choice
StaticComponent.stopType.label:stop type
StaticComponent.stopType.readOnly:False
StaticComponent.stopType.staticUpdater:None
StaticComponent.stopType.updates:None
StaticComponent.stopType.val:duration (s)
StaticComponent.stopType.valType:str
StaticComponent.stopVal.default:
StaticComponent.stopVal.allowedLabels:[]
StaticComponent.stopVal.allowedTypes:[]
StaticComponent.stopVal.allowedUpdates:[]
StaticComponent.stopVal.allowedVals:[]
StaticComponent.stopVal.canBePath:True
StaticComponent.stopVal.categ:Basic
StaticComponent.stopVal.codeWanted:False
StaticComponent.stopVal.direct:True
StaticComponent.stopVal.hint:When does the component end? (blank is endless)
StaticComponent.stopVal.inputType:single
StaticComponent.stopVal.label:Stop
StaticComponent.stopVal.readOnly:False
StaticComponent.stopVal.staticUpdater:None
StaticComponent.stopVal.updates:constant
StaticComponent.stopVal.val:
StaticComponent.stopVal.valType:code
StaticComponent.syncScreenRefresh.default:False
StaticComponent.syncScreenRefresh.allowedLabels:[]
StaticComponent.syncScreenRefresh.allowedTypes:[]
StaticComponent.syncScreenRefresh.allowedUpdates:None
StaticComponent.syncScreenRefresh.allowedVals:[]
StaticComponent.syncScreenRefresh.canBePath:True
StaticComponent.syncScreenRefresh.categ:Data
StaticComponent.syncScreenRefresh.codeWanted:False
StaticComponent.syncScreenRefresh.direct:True
StaticComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
StaticComponent.syncScreenRefresh.inputType:bool
StaticComponent.syncScreenRefresh.label:Sync timing with screen refresh
StaticComponent.syncScreenRefresh.readOnly:False
StaticComponent.syncScreenRefresh.staticUpdater:None
StaticComponent.syncScreenRefresh.updates:None
StaticComponent.syncScreenRefresh.val:False
StaticComponent.syncScreenRefresh.valType:bool
TextComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'units', 'anchor', 'ori']
TextComponent.color.default:'white'
TextComponent.color.allowedLabels:[]
TextComponent.color.allowedTypes:[]
TextComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.color.allowedVals:[]
TextComponent.color.canBePath:True
TextComponent.color.categ:Appearance
TextComponent.color.codeWanted:False
TextComponent.color.direct:True
TextComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
TextComponent.color.inputType:color
TextComponent.color.label:Foreground Color
TextComponent.color.readOnly:False
TextComponent.color.staticUpdater:None
TextComponent.color.updates:constant
TextComponent.color.val:white
TextComponent.color.valType:color
TextComponent.colorSpace.default:'rgb'
TextComponent.colorSpace.allowedLabels:[]
TextComponent.colorSpace.allowedTypes:[]
TextComponent.colorSpace.allowedUpdates:None
TextComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
TextComponent.colorSpace.canBePath:True
TextComponent.colorSpace.categ:Appearance
TextComponent.colorSpace.codeWanted:False
TextComponent.colorSpace.direct:True
TextComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
TextComponent.colorSpace.inputType:choice
TextComponent.colorSpace.label:Color Space
TextComponent.colorSpace.readOnly:False
TextComponent.colorSpace.staticUpdater:None
TextComponent.colorSpace.updates:constant
TextComponent.colorSpace.val:rgb
TextComponent.colorSpace.valType:str
TextComponent.contrast.default:1.0
TextComponent.contrast.allowedLabels:[]
TextComponent.contrast.allowedTypes:[]
TextComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.contrast.allowedVals:[]
TextComponent.contrast.canBePath:True
TextComponent.contrast.categ:Appearance
TextComponent.contrast.codeWanted:False
TextComponent.contrast.direct:True
TextComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
TextComponent.contrast.inputType:single
TextComponent.contrast.label:Contrast
TextComponent.contrast.readOnly:False
TextComponent.contrast.staticUpdater:None
TextComponent.contrast.updates:constant
TextComponent.contrast.val:1
TextComponent.contrast.valType:num
TextComponent.disabled.default:False
TextComponent.disabled.allowedLabels:[]
TextComponent.disabled.allowedTypes:[]
TextComponent.disabled.allowedUpdates:None
TextComponent.disabled.allowedVals:[]
TextComponent.disabled.canBePath:True
TextComponent.disabled.categ:Testing
TextComponent.disabled.codeWanted:False
TextComponent.disabled.direct:False
TextComponent.disabled.hint:Disable this component
TextComponent.disabled.inputType:bool
TextComponent.disabled.label:Disable component
TextComponent.disabled.readOnly:False
TextComponent.disabled.staticUpdater:None
TextComponent.disabled.updates:None
TextComponent.disabled.val:False
TextComponent.disabled.valType:bool
TextComponent.durationEstim.default:
TextComponent.durationEstim.allowedLabels:[]
TextComponent.durationEstim.allowedTypes:[]
TextComponent.durationEstim.allowedUpdates:None
TextComponent.durationEstim.allowedVals:[]
TextComponent.durationEstim.canBePath:True
TextComponent.durationEstim.categ:Basic
TextComponent.durationEstim.codeWanted:False
TextComponent.durationEstim.direct:False
TextComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
TextComponent.durationEstim.inputType:single
TextComponent.durationEstim.label:Expected duration (s)
TextComponent.durationEstim.readOnly:False
TextComponent.durationEstim.staticUpdater:None
TextComponent.durationEstim.updates:None
TextComponent.durationEstim.val:
TextComponent.durationEstim.valType:code
TextComponent.flip.default:'None'
TextComponent.flip.allowedLabels:[]
TextComponent.flip.allowedTypes:[]
TextComponent.flip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.flip.allowedVals:['horiz', 'vert', 'None']
TextComponent.flip.canBePath:True
TextComponent.flip.categ:Layout
TextComponent.flip.codeWanted:False
TextComponent.flip.direct:True
TextComponent.flip.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextComponent.flip.inputType:single
TextComponent.flip.label:Flip (mirror)
TextComponent.flip.readOnly:False
TextComponent.flip.staticUpdater:None
TextComponent.flip.updates:constant
TextComponent.flip.val:None
TextComponent.flip.valType:str
TextComponent.font.default:'Open Sans'
TextComponent.font.allowedLabels:[]
TextComponent.font.allowedTypes:[]
TextComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.font.allowedVals:[]
TextComponent.font.canBePath:True
TextComponent.font.categ:Formatting
TextComponent.font.codeWanted:False
TextComponent.font.direct:True
TextComponent.font.hint:The font name (e.g. Comic Sans)
TextComponent.font.inputType:single
TextComponent.font.label:Font
TextComponent.font.readOnly:False
TextComponent.font.staticUpdater:None
TextComponent.font.updates:constant
TextComponent.font.val:Open Sans
TextComponent.font.valType:str
TextComponent.languageStyle.default:'LTR'
TextComponent.languageStyle.allowedLabels:[]
TextComponent.languageStyle.allowedTypes:[]
TextComponent.languageStyle.allowedUpdates:None
TextComponent.languageStyle.allowedVals:['LTR', 'RTL', 'Arabic']
TextComponent.languageStyle.canBePath:True
TextComponent.languageStyle.categ:Formatting
TextComponent.languageStyle.codeWanted:False
TextComponent.languageStyle.direct:True
TextComponent.languageStyle.hint:Handle right-to-left (RTL) languages and Arabic reshaping
TextComponent.languageStyle.inputType:choice
TextComponent.languageStyle.label:Language style
TextComponent.languageStyle.readOnly:False
TextComponent.languageStyle.staticUpdater:None
TextComponent.languageStyle.updates:None
TextComponent.languageStyle.val:LTR
TextComponent.languageStyle.valType:str
TextComponent.letterHeight.default:0.05
TextComponent.letterHeight.allowedLabels:[]
TextComponent.letterHeight.allowedTypes:[]
TextComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.letterHeight.allowedVals:[]
TextComponent.letterHeight.canBePath:True
TextComponent.letterHeight.categ:Formatting
TextComponent.letterHeight.codeWanted:False
TextComponent.letterHeight.direct:True
TextComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
TextComponent.letterHeight.inputType:single
TextComponent.letterHeight.label:Letter height
TextComponent.letterHeight.readOnly:False
TextComponent.letterHeight.staticUpdater:None
TextComponent.letterHeight.updates:constant
TextComponent.letterHeight.val:0.05
TextComponent.letterHeight.valType:num
TextComponent.name.default:text
TextComponent.name.allowedLabels:[]
TextComponent.name.allowedTypes:[]
TextComponent.name.allowedUpdates:None
TextComponent.name.allowedVals:[]
TextComponent.name.canBePath:True
TextComponent.name.categ:Basic
TextComponent.name.codeWanted:False
TextComponent.name.direct:True
TextComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
TextComponent.name.inputType:single
TextComponent.name.label:Name
TextComponent.name.readOnly:False
TextComponent.name.staticUpdater:None
TextComponent.name.val:text
TextComponent.name.valType:code
TextComponent.opacity.default:None
TextComponent.opacity.allowedLabels:[]
TextComponent.opacity.allowedTypes:[]
TextComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.opacity.allowedVals:[]
TextComponent.opacity.canBePath:True
TextComponent.opacity.categ:Appearance
TextComponent.opacity.codeWanted:False
TextComponent.opacity.direct:True
TextComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
TextComponent.opacity.inputType:single
TextComponent.opacity.label:Opacity
TextComponent.opacity.readOnly:False
TextComponent.opacity.staticUpdater:None
TextComponent.opacity.updates:constant
TextComponent.opacity.val:
TextComponent.opacity.valType:num
TextComponent.ori.default:0.0
TextComponent.ori.allowedLabels:[]
TextComponent.ori.allowedTypes:[]
TextComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.ori.allowedVals:[-360, 360]
TextComponent.ori.canBePath:True
TextComponent.ori.categ:Layout
TextComponent.ori.codeWanted:False
TextComponent.ori.direct:True
TextComponent.ori.hint:Orientation of this stimulus (in deg)
TextComponent.ori.inputType:spin
TextComponent.ori.label:Orientation
TextComponent.ori.readOnly:False
TextComponent.ori.staticUpdater:None
TextComponent.ori.updates:constant
TextComponent.ori.val:0
TextComponent.ori.valType:num
TextComponent.pos.default:(0, 0)
TextComponent.pos.allowedLabels:[]
TextComponent.pos.allowedTypes:[]
TextComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.pos.allowedVals:[]
TextComponent.pos.canBePath:True
TextComponent.pos.categ:Layout
TextComponent.pos.codeWanted:False
TextComponent.pos.direct:True
TextComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
TextComponent.pos.inputType:single
TextComponent.pos.label:Position [x,y]
TextComponent.pos.readOnly:False
TextComponent.pos.staticUpdater:None
TextComponent.pos.updates:constant
TextComponent.pos.val:(0, 0)
TextComponent.pos.valType:list
TextComponent.saveStartStop.default:True
TextComponent.saveStartStop.allowedLabels:[]
TextComponent.saveStartStop.allowedTypes:[]
TextComponent.saveStartStop.allowedUpdates:None
TextComponent.saveStartStop.allowedVals:[]
TextComponent.saveStartStop.canBePath:True
TextComponent.saveStartStop.categ:Data
TextComponent.saveStartStop.codeWanted:False
TextComponent.saveStartStop.direct:True
TextComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
TextComponent.saveStartStop.inputType:bool
TextComponent.saveStartStop.label:Save onset/offset times
TextComponent.saveStartStop.readOnly:False
TextComponent.saveStartStop.staticUpdater:None
TextComponent.saveStartStop.updates:None
TextComponent.saveStartStop.val:True
TextComponent.saveStartStop.valType:bool
TextComponent.startEstim.default:
TextComponent.startEstim.allowedLabels:[]
TextComponent.startEstim.allowedTypes:[]
TextComponent.startEstim.allowedUpdates:None
TextComponent.startEstim.allowedVals:[]
TextComponent.startEstim.canBePath:True
TextComponent.startEstim.categ:Basic
TextComponent.startEstim.codeWanted:False
TextComponent.startEstim.direct:False
TextComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
TextComponent.startEstim.inputType:single
TextComponent.startEstim.label:Expected start (s)
TextComponent.startEstim.readOnly:False
TextComponent.startEstim.staticUpdater:None
TextComponent.startEstim.updates:None
TextComponent.startEstim.val:
TextComponent.startEstim.valType:code
TextComponent.startType.default:'time (s)'
TextComponent.startType.allowedLabels:[]
TextComponent.startType.allowedTypes:[]
TextComponent.startType.allowedUpdates:None
TextComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
TextComponent.startType.canBePath:True
TextComponent.startType.categ:Basic
TextComponent.startType.codeWanted:False
TextComponent.startType.direct:False
TextComponent.startType.hint:How do you want to define your start point?
TextComponent.startType.inputType:choice
TextComponent.startType.label:start type
TextComponent.startType.readOnly:False
TextComponent.startType.staticUpdater:None
TextComponent.startType.updates:None
TextComponent.startType.val:time (s)
TextComponent.startType.valType:str
TextComponent.startVal.default:0.0
TextComponent.startVal.allowedLabels:[]
TextComponent.startVal.allowedTypes:[]
TextComponent.startVal.allowedUpdates:None
TextComponent.startVal.allowedVals:[]
TextComponent.startVal.canBePath:True
TextComponent.startVal.categ:Basic
TextComponent.startVal.codeWanted:False
TextComponent.startVal.direct:True
TextComponent.startVal.hint:When does the component start?
TextComponent.startVal.inputType:single
TextComponent.startVal.label:Start
TextComponent.startVal.readOnly:False
TextComponent.startVal.staticUpdater:None
TextComponent.startVal.updates:None
TextComponent.startVal.val:0.0
TextComponent.startVal.valType:code
TextComponent.stopType.default:'duration (s)'
TextComponent.stopType.allowedLabels:[]
TextComponent.stopType.allowedTypes:[]
TextComponent.stopType.allowedUpdates:None
TextComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
TextComponent.stopType.canBePath:True
TextComponent.stopType.categ:Basic
TextComponent.stopType.codeWanted:False
TextComponent.stopType.direct:False
TextComponent.stopType.hint:How do you want to define your end point?
TextComponent.stopType.inputType:choice
TextComponent.stopType.label:stop type
TextComponent.stopType.readOnly:False
TextComponent.stopType.staticUpdater:None
TextComponent.stopType.updates:None
TextComponent.stopType.val:duration (s)
TextComponent.stopType.valType:str
TextComponent.stopVal.default:1.0
TextComponent.stopVal.allowedLabels:[]
TextComponent.stopVal.allowedTypes:[]
TextComponent.stopVal.allowedUpdates:[]
TextComponent.stopVal.allowedVals:[]
TextComponent.stopVal.canBePath:True
TextComponent.stopVal.categ:Basic
TextComponent.stopVal.codeWanted:False
TextComponent.stopVal.direct:True
TextComponent.stopVal.hint:When does the component end? (blank is endless)
TextComponent.stopVal.inputType:single
TextComponent.stopVal.label:Stop
TextComponent.stopVal.readOnly:False
TextComponent.stopVal.staticUpdater:None
TextComponent.stopVal.updates:constant
TextComponent.stopVal.val:1.0
TextComponent.stopVal.valType:code
TextComponent.syncScreenRefresh.default:True
TextComponent.syncScreenRefresh.allowedLabels:[]
TextComponent.syncScreenRefresh.allowedTypes:[]
TextComponent.syncScreenRefresh.allowedUpdates:None
TextComponent.syncScreenRefresh.allowedVals:[]
TextComponent.syncScreenRefresh.canBePath:True
TextComponent.syncScreenRefresh.categ:Data
TextComponent.syncScreenRefresh.codeWanted:False
TextComponent.syncScreenRefresh.direct:True
TextComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
TextComponent.syncScreenRefresh.inputType:bool
TextComponent.syncScreenRefresh.label:Sync timing with screen refresh
TextComponent.syncScreenRefresh.readOnly:True
TextComponent.syncScreenRefresh.staticUpdater:None
TextComponent.syncScreenRefresh.updates:None
TextComponent.syncScreenRefresh.val:True
TextComponent.syncScreenRefresh.valType:bool
TextComponent.text.default:'Any text\n\nincluding line breaks'
TextComponent.text.allowedLabels:[]
TextComponent.text.allowedTypes:[]
TextComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.text.allowedVals:[]
TextComponent.text.canBePath:False
TextComponent.text.categ:Basic
TextComponent.text.codeWanted:False
TextComponent.text.direct:True
TextComponent.text.hint:The text to be displayed
TextComponent.text.inputType:multi
TextComponent.text.label:Text
TextComponent.text.readOnly:False
TextComponent.text.staticUpdater:None
TextComponent.text.updates:constant
TextComponent.text.val:Any text

including line breaks
TextComponent.text.valType:str
TextComponent.units.default:'from exp settings'
TextComponent.units.allowedLabels:[]
TextComponent.units.allowedTypes:[]
TextComponent.units.allowedUpdates:None
TextComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
TextComponent.units.canBePath:True
TextComponent.units.categ:Layout
TextComponent.units.codeWanted:False
TextComponent.units.direct:True
TextComponent.units.hint:Units of dimensions for this stimulus
TextComponent.units.inputType:choice
TextComponent.units.label:Spatial Units
TextComponent.units.readOnly:False
TextComponent.units.staticUpdater:None
TextComponent.units.updates:None
TextComponent.units.val:from exp settings
TextComponent.units.valType:str
TextComponent.wrapWidth.default:None
TextComponent.wrapWidth.allowedLabels:[]
TextComponent.wrapWidth.allowedTypes:[]
TextComponent.wrapWidth.allowedUpdates:['constant']
TextComponent.wrapWidth.allowedVals:[]
TextComponent.wrapWidth.canBePath:True
TextComponent.wrapWidth.categ:Layout
TextComponent.wrapWidth.codeWanted:False
TextComponent.wrapWidth.direct:True
TextComponent.wrapWidth.hint:How wide should the text get when it wraps? (in the specified units)
TextComponent.wrapWidth.inputType:single
TextComponent.wrapWidth.label:Wrap width
TextComponent.wrapWidth.readOnly:False
TextComponent.wrapWidth.staticUpdater:None
TextComponent.wrapWidth.updates:constant
TextComponent.wrapWidth.val:
TextComponent.wrapWidth.valType:num
TextboxComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'color', 'fillColor', 'borderColor', 'colorSpace', 'opacity', 'size', 'pos', 'padding', 'units', 'anchor', 'ori', 'editable', 'text', 'borderWidth', 'opacity', 'font', 'letterHeight', 'lineSpacing', 'bold', 'italic']
TextboxComponent.alignment.default:'center'
TextboxComponent.alignment.allowedLabels:[]
TextboxComponent.alignment.allowedTypes:[]
TextboxComponent.alignment.allowedUpdates:None
TextboxComponent.alignment.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
TextboxComponent.alignment.canBePath:True
TextboxComponent.alignment.categ:Formatting
TextboxComponent.alignment.codeWanted:False
TextboxComponent.alignment.direct:True
TextboxComponent.alignment.hint:How should text be laid out within the box?
TextboxComponent.alignment.inputType:choice
TextboxComponent.alignment.label:Alignment
TextboxComponent.alignment.readOnly:False
TextboxComponent.alignment.staticUpdater:None
TextboxComponent.alignment.updates:constant
TextboxComponent.alignment.val:center
TextboxComponent.alignment.valType:str
TextboxComponent.anchor.default:'center'
TextboxComponent.anchor.allowedLabels:[]
TextboxComponent.anchor.allowedTypes:[]
TextboxComponent.anchor.allowedUpdates:None
TextboxComponent.anchor.allowedVals:['center', 'top-center', 'bottom-center', 'center-left', 'center-right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
TextboxComponent.anchor.canBePath:True
TextboxComponent.anchor.categ:Layout
TextboxComponent.anchor.codeWanted:False
TextboxComponent.anchor.direct:True
TextboxComponent.anchor.hint:Which point on the stimulus should be anchored to its exact position?
TextboxComponent.anchor.inputType:choice
TextboxComponent.anchor.label:Anchor
TextboxComponent.anchor.readOnly:False
TextboxComponent.anchor.staticUpdater:None
TextboxComponent.anchor.updates:constant
TextboxComponent.anchor.val:center
TextboxComponent.anchor.valType:str
TextboxComponent.autoLog.default:True
TextboxComponent.autoLog.allowedLabels:[]
TextboxComponent.autoLog.allowedTypes:[]
TextboxComponent.autoLog.allowedUpdates:None
TextboxComponent.autoLog.allowedVals:[]
TextboxComponent.autoLog.canBePath:True
TextboxComponent.autoLog.categ:Data
TextboxComponent.autoLog.codeWanted:False
TextboxComponent.autoLog.direct:True
TextboxComponent.autoLog.hint:Automatically record all changes to this in the log file
TextboxComponent.autoLog.inputType:bool
TextboxComponent.autoLog.label:Auto Log
TextboxComponent.autoLog.readOnly:False
TextboxComponent.autoLog.staticUpdater:None
TextboxComponent.autoLog.updates:constant
TextboxComponent.autoLog.val:True
TextboxComponent.autoLog.valType:bool
TextboxComponent.bold.default:False
TextboxComponent.bold.allowedLabels:[]
TextboxComponent.bold.allowedTypes:[]
TextboxComponent.bold.allowedUpdates:None
TextboxComponent.bold.allowedVals:[]
TextboxComponent.bold.canBePath:True
TextboxComponent.bold.categ:Formatting
TextboxComponent.bold.codeWanted:False
TextboxComponent.bold.direct:True
TextboxComponent.bold.hint:Should text be bold?
TextboxComponent.bold.inputType:bool
TextboxComponent.bold.label:Bold
TextboxComponent.bold.readOnly:False
TextboxComponent.bold.staticUpdater:None
TextboxComponent.bold.updates:constant
TextboxComponent.bold.val:False
TextboxComponent.bold.valType:bool
TextboxComponent.borderColor.default:'None'
TextboxComponent.borderColor.allowedLabels:[]
TextboxComponent.borderColor.allowedTypes:[]
TextboxComponent.borderColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.borderColor.allowedVals:[]
TextboxComponent.borderColor.canBePath:True
TextboxComponent.borderColor.categ:Appearance
TextboxComponent.borderColor.codeWanted:False
TextboxComponent.borderColor.direct:True
TextboxComponent.borderColor.hint:Color of this stimulus (e.g. $[1,1,0], red )
TextboxComponent.borderColor.inputType:color
TextboxComponent.borderColor.label:Border Color
TextboxComponent.borderColor.readOnly:False
TextboxComponent.borderColor.staticUpdater:None
TextboxComponent.borderColor.updates:constant
TextboxComponent.borderColor.val:None
TextboxComponent.borderColor.valType:color
TextboxComponent.borderWidth.default:2.0
TextboxComponent.borderWidth.allowedLabels:[]
TextboxComponent.borderWidth.allowedTypes:[]
TextboxComponent.borderWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.borderWidth.allowedVals:[]
TextboxComponent.borderWidth.canBePath:True
TextboxComponent.borderWidth.categ:Appearance
TextboxComponent.borderWidth.codeWanted:False
TextboxComponent.borderWidth.direct:True
TextboxComponent.borderWidth.hint:Textbox border width
TextboxComponent.borderWidth.inputType:single
TextboxComponent.borderWidth.label:Border Width
TextboxComponent.borderWidth.readOnly:False
TextboxComponent.borderWidth.staticUpdater:None
TextboxComponent.borderWidth.updates:constant
TextboxComponent.borderWidth.val:2
TextboxComponent.borderWidth.valType:num
TextboxComponent.color.default:'white'
TextboxComponent.color.allowedLabels:[]
TextboxComponent.color.allowedTypes:[]
TextboxComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.color.allowedVals:[]
TextboxComponent.color.canBePath:True
TextboxComponent.color.categ:Appearance
TextboxComponent.color.codeWanted:False
TextboxComponent.color.direct:True
TextboxComponent.color.hint:Foreground color of this stimulus (e.g. $[1,1,0], red )
TextboxComponent.color.inputType:color
TextboxComponent.color.label:Text Color
TextboxComponent.color.readOnly:False
TextboxComponent.color.staticUpdater:None
TextboxComponent.color.updates:constant
TextboxComponent.color.val:white
TextboxComponent.color.valType:color
TextboxComponent.colorSpace.default:'rgb'
TextboxComponent.colorSpace.allowedLabels:[]
TextboxComponent.colorSpace.allowedTypes:[]
TextboxComponent.colorSpace.allowedUpdates:None
TextboxComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
TextboxComponent.colorSpace.canBePath:True
TextboxComponent.colorSpace.categ:Appearance
TextboxComponent.colorSpace.codeWanted:False
TextboxComponent.colorSpace.direct:True
TextboxComponent.colorSpace.hint:In what format (color space) have you specified the colors? (rgb, dkl, lms, hsv)
TextboxComponent.colorSpace.inputType:choice
TextboxComponent.colorSpace.label:Color Space
TextboxComponent.colorSpace.readOnly:False
TextboxComponent.colorSpace.staticUpdater:None
TextboxComponent.colorSpace.updates:constant
TextboxComponent.colorSpace.val:rgb
TextboxComponent.colorSpace.valType:str
TextboxComponent.contrast.default:1.0
TextboxComponent.contrast.allowedLabels:[]
TextboxComponent.contrast.allowedTypes:[]
TextboxComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.contrast.allowedVals:[]
TextboxComponent.contrast.canBePath:True
TextboxComponent.contrast.categ:Appearance
TextboxComponent.contrast.codeWanted:False
TextboxComponent.contrast.direct:True
TextboxComponent.contrast.hint:Contrast of the stimulus (1.0=unchanged contrast, 0.5=decrease contrast, 0.0=uniform/no contrast, -0.5=slightly inverted, -1.0=totally inverted)
TextboxComponent.contrast.inputType:single
TextboxComponent.contrast.label:Contrast
TextboxComponent.contrast.readOnly:False
TextboxComponent.contrast.staticUpdater:None
TextboxComponent.contrast.updates:constant
TextboxComponent.contrast.val:1
TextboxComponent.contrast.valType:num
TextboxComponent.disabled.default:False
TextboxComponent.disabled.allowedLabels:[]
TextboxComponent.disabled.allowedTypes:[]
TextboxComponent.disabled.allowedUpdates:None
TextboxComponent.disabled.allowedVals:[]
TextboxComponent.disabled.canBePath:True
TextboxComponent.disabled.categ:Testing
TextboxComponent.disabled.codeWanted:False
TextboxComponent.disabled.direct:False
TextboxComponent.disabled.hint:Disable this component
TextboxComponent.disabled.inputType:bool
TextboxComponent.disabled.label:Disable component
TextboxComponent.disabled.readOnly:False
TextboxComponent.disabled.staticUpdater:None
TextboxComponent.disabled.updates:None
TextboxComponent.disabled.val:False
TextboxComponent.disabled.valType:bool
TextboxComponent.durationEstim.default:
TextboxComponent.durationEstim.allowedLabels:[]
TextboxComponent.durationEstim.allowedTypes:[]
TextboxComponent.durationEstim.allowedUpdates:None
TextboxComponent.durationEstim.allowedVals:[]
TextboxComponent.durationEstim.canBePath:True
TextboxComponent.durationEstim.categ:Basic
TextboxComponent.durationEstim.codeWanted:False
TextboxComponent.durationEstim.direct:False
TextboxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
TextboxComponent.durationEstim.inputType:single
TextboxComponent.durationEstim.label:Expected duration (s)
TextboxComponent.durationEstim.readOnly:False
TextboxComponent.durationEstim.staticUpdater:None
TextboxComponent.durationEstim.updates:None
TextboxComponent.durationEstim.val:
TextboxComponent.durationEstim.valType:code
TextboxComponent.editable.default:False
TextboxComponent.editable.allowedLabels:[]
TextboxComponent.editable.allowedTypes:[]
TextboxComponent.editable.allowedUpdates:None
TextboxComponent.editable.allowedVals:[]
TextboxComponent.editable.canBePath:True
TextboxComponent.editable.categ:Basic
TextboxComponent.editable.codeWanted:False
TextboxComponent.editable.direct:True
TextboxComponent.editable.hint:Should textbox be editable?
TextboxComponent.editable.inputType:bool
TextboxComponent.editable.label:Editable?
TextboxComponent.editable.readOnly:False
TextboxComponent.editable.staticUpdater:None
TextboxComponent.editable.updates:constant
TextboxComponent.editable.val:False
TextboxComponent.editable.valType:bool
TextboxComponent.fillColor.default:'None'
TextboxComponent.fillColor.allowedLabels:[]
TextboxComponent.fillColor.allowedTypes:[]
TextboxComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.fillColor.allowedVals:[]
TextboxComponent.fillColor.canBePath:True
TextboxComponent.fillColor.categ:Appearance
TextboxComponent.fillColor.codeWanted:False
TextboxComponent.fillColor.direct:True
TextboxComponent.fillColor.hint:Fill color of this stimulus (e.g. $[1,1,0], red )
TextboxComponent.fillColor.inputType:color
TextboxComponent.fillColor.label:Fill Color
TextboxComponent.fillColor.readOnly:False
TextboxComponent.fillColor.staticUpdater:None
TextboxComponent.fillColor.updates:constant
TextboxComponent.fillColor.val:None
TextboxComponent.fillColor.valType:color
TextboxComponent.flipHoriz.default:False
TextboxComponent.flipHoriz.allowedLabels:[]
TextboxComponent.flipHoriz.allowedTypes:[]
TextboxComponent.flipHoriz.allowedUpdates:None
TextboxComponent.flipHoriz.allowedVals:[]
TextboxComponent.flipHoriz.canBePath:True
TextboxComponent.flipHoriz.categ:Layout
TextboxComponent.flipHoriz.codeWanted:False
TextboxComponent.flipHoriz.direct:True
TextboxComponent.flipHoriz.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextboxComponent.flipHoriz.inputType:bool
TextboxComponent.flipHoriz.label:Flip horizontal
TextboxComponent.flipHoriz.readOnly:False
TextboxComponent.flipHoriz.staticUpdater:None
TextboxComponent.flipHoriz.updates:constant
TextboxComponent.flipHoriz.val:False
TextboxComponent.flipHoriz.valType:bool
TextboxComponent.flipVert.default:False
TextboxComponent.flipVert.allowedLabels:[]
TextboxComponent.flipVert.allowedTypes:[]
TextboxComponent.flipVert.allowedUpdates:None
TextboxComponent.flipVert.allowedVals:[]
TextboxComponent.flipVert.canBePath:True
TextboxComponent.flipVert.categ:Layout
TextboxComponent.flipVert.codeWanted:False
TextboxComponent.flipVert.direct:True
TextboxComponent.flipVert.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextboxComponent.flipVert.inputType:bool
TextboxComponent.flipVert.label:Flip vertical
TextboxComponent.flipVert.readOnly:False
TextboxComponent.flipVert.staticUpdater:None
TextboxComponent.flipVert.updates:constant
TextboxComponent.flipVert.val:False
TextboxComponent.flipVert.valType:bool
TextboxComponent.font.default:'Open Sans'
TextboxComponent.font.allowedLabels:[]
TextboxComponent.font.allowedTypes:[]
TextboxComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.font.allowedVals:[]
TextboxComponent.font.canBePath:True
TextboxComponent.font.categ:Formatting
TextboxComponent.font.codeWanted:False
TextboxComponent.font.direct:True
TextboxComponent.font.hint:The font name (e.g. Comic Sans)
TextboxComponent.font.inputType:single
TextboxComponent.font.label:Font
TextboxComponent.font.readOnly:False
TextboxComponent.font.staticUpdater:None
TextboxComponent.font.updates:constant
TextboxComponent.font.val:Open Sans
TextboxComponent.font.valType:str
TextboxComponent.italic.default:False
TextboxComponent.italic.allowedLabels:[]
TextboxComponent.italic.allowedTypes:[]
TextboxComponent.italic.allowedUpdates:None
TextboxComponent.italic.allowedVals:[]
TextboxComponent.italic.canBePath:True
TextboxComponent.italic.categ:Formatting
TextboxComponent.italic.codeWanted:False
TextboxComponent.italic.direct:True
TextboxComponent.italic.hint:Should text be italic?
TextboxComponent.italic.inputType:bool
TextboxComponent.italic.label:Italic
TextboxComponent.italic.readOnly:False
TextboxComponent.italic.staticUpdater:None
TextboxComponent.italic.updates:constant
TextboxComponent.italic.val:False
TextboxComponent.italic.valType:bool
TextboxComponent.languageStyle.default:'LTR'
TextboxComponent.languageStyle.allowedLabels:[]
TextboxComponent.languageStyle.allowedTypes:[]
TextboxComponent.languageStyle.allowedUpdates:None
TextboxComponent.languageStyle.allowedVals:['LTR', 'RTL', 'Arabic']
TextboxComponent.languageStyle.canBePath:True
TextboxComponent.languageStyle.categ:Formatting
TextboxComponent.languageStyle.codeWanted:False
TextboxComponent.languageStyle.direct:True
TextboxComponent.languageStyle.hint:Handle right-to-left (RTL) languages and Arabic reshaping
TextboxComponent.languageStyle.inputType:choice
TextboxComponent.languageStyle.label:Language style
TextboxComponent.languageStyle.readOnly:False
TextboxComponent.languageStyle.staticUpdater:None
TextboxComponent.languageStyle.updates:None
TextboxComponent.languageStyle.val:LTR
TextboxComponent.languageStyle.valType:str
TextboxComponent.letterHeight.default:0.05
TextboxComponent.letterHeight.allowedLabels:[]
TextboxComponent.letterHeight.allowedTypes:[]
TextboxComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.letterHeight.allowedVals:[]
TextboxComponent.letterHeight.canBePath:True
TextboxComponent.letterHeight.categ:Formatting
TextboxComponent.letterHeight.codeWanted:False
TextboxComponent.letterHeight.direct:True
TextboxComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
TextboxComponent.letterHeight.inputType:single
TextboxComponent.letterHeight.label:Letter height
TextboxComponent.letterHeight.readOnly:False
TextboxComponent.letterHeight.staticUpdater:None
TextboxComponent.letterHeight.updates:constant
TextboxComponent.letterHeight.val:0.05
TextboxComponent.letterHeight.valType:num
TextboxComponent.lineSpacing.default:1.0
TextboxComponent.lineSpacing.allowedLabels:[]
TextboxComponent.lineSpacing.allowedTypes:[]
TextboxComponent.lineSpacing.allowedUpdates:None
TextboxComponent.lineSpacing.allowedVals:[]
TextboxComponent.lineSpacing.canBePath:True
TextboxComponent.lineSpacing.categ:Formatting
TextboxComponent.lineSpacing.codeWanted:False
TextboxComponent.lineSpacing.direct:True
TextboxComponent.lineSpacing.hint:Defines the space between lines
TextboxComponent.lineSpacing.inputType:single
TextboxComponent.lineSpacing.label:Line Spacing
TextboxComponent.lineSpacing.readOnly:False
TextboxComponent.lineSpacing.staticUpdater:None
TextboxComponent.lineSpacing.updates:constant
TextboxComponent.lineSpacing.val:1.0
TextboxComponent.lineSpacing.valType:num
TextboxComponent.name.default:textbox
TextboxComponent.name.allowedLabels:[]
TextboxComponent.name.allowedTypes:[]
TextboxComponent.name.allowedUpdates:None
TextboxComponent.name.allowedVals:[]
TextboxComponent.name.canBePath:True
TextboxComponent.name.categ:Basic
TextboxComponent.name.codeWanted:False
TextboxComponent.name.direct:True
TextboxComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
TextboxComponent.name.inputType:single
TextboxComponent.name.label:Name
TextboxComponent.name.readOnly:False
TextboxComponent.name.staticUpdater:None
TextboxComponent.name.val:textbox
TextboxComponent.name.valType:code
TextboxComponent.opacity.default:None
TextboxComponent.opacity.allowedLabels:[]
TextboxComponent.opacity.allowedTypes:[]
TextboxComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.opacity.allowedVals:[]
TextboxComponent.opacity.canBePath:True
TextboxComponent.opacity.categ:Appearance
TextboxComponent.opacity.codeWanted:False
TextboxComponent.opacity.direct:True
TextboxComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent). Leave blank for each color to have its own opacity (recommended if any color is None).
TextboxComponent.opacity.inputType:single
TextboxComponent.opacity.label:Opacity
TextboxComponent.opacity.readOnly:False
TextboxComponent.opacity.staticUpdater:None
TextboxComponent.opacity.updates:constant
TextboxComponent.opacity.val:
TextboxComponent.opacity.valType:num
TextboxComponent.ori.default:0.0
TextboxComponent.ori.allowedLabels:[]
TextboxComponent.ori.allowedTypes:[]
TextboxComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.ori.allowedVals:[-360, 360]
TextboxComponent.ori.canBePath:True
TextboxComponent.ori.categ:Layout
TextboxComponent.ori.codeWanted:False
TextboxComponent.ori.direct:True
TextboxComponent.ori.hint:Orientation of this stimulus (in deg)
TextboxComponent.ori.inputType:spin
TextboxComponent.ori.label:Orientation
TextboxComponent.ori.readOnly:False
TextboxComponent.ori.staticUpdater:None
TextboxComponent.ori.updates:constant
TextboxComponent.ori.val:0
TextboxComponent.ori.valType:num
TextboxComponent.padding.default:0.0
TextboxComponent.padding.allowedLabels:[]
TextboxComponent.padding.allowedTypes:[]
TextboxComponent.padding.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.padding.allowedVals:[]
TextboxComponent.padding.canBePath:True
TextboxComponent.padding.categ:Layout
TextboxComponent.padding.codeWanted:False
TextboxComponent.padding.direct:True
TextboxComponent.padding.hint:Defines the space between text and the textbox border
TextboxComponent.padding.inputType:single
TextboxComponent.padding.label:Padding
TextboxComponent.padding.readOnly:False
TextboxComponent.padding.staticUpdater:None
TextboxComponent.padding.updates:constant
TextboxComponent.padding.val:0
TextboxComponent.padding.valType:num
TextboxComponent.pos.default:(0, 0)
TextboxComponent.pos.allowedLabels:[]
TextboxComponent.pos.allowedTypes:[]
TextboxComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.pos.allowedVals:[]
TextboxComponent.pos.canBePath:True
TextboxComponent.pos.categ:Layout
TextboxComponent.pos.codeWanted:False
TextboxComponent.pos.direct:True
TextboxComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
TextboxComponent.pos.inputType:single
TextboxComponent.pos.label:Position [x,y]
TextboxComponent.pos.readOnly:False
TextboxComponent.pos.staticUpdater:None
TextboxComponent.pos.updates:constant
TextboxComponent.pos.val:(0, 0)
TextboxComponent.pos.valType:list
TextboxComponent.saveStartStop.default:True
TextboxComponent.saveStartStop.allowedLabels:[]
TextboxComponent.saveStartStop.allowedTypes:[]
TextboxComponent.saveStartStop.allowedUpdates:None
TextboxComponent.saveStartStop.allowedVals:[]
TextboxComponent.saveStartStop.canBePath:True
TextboxComponent.saveStartStop.categ:Data
TextboxComponent.saveStartStop.codeWanted:False
TextboxComponent.saveStartStop.direct:True
TextboxComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
TextboxComponent.saveStartStop.inputType:bool
TextboxComponent.saveStartStop.label:Save onset/offset times
TextboxComponent.saveStartStop.readOnly:False
TextboxComponent.saveStartStop.staticUpdater:None
TextboxComponent.saveStartStop.updates:None
TextboxComponent.saveStartStop.val:True
TextboxComponent.saveStartStop.valType:bool
TextboxComponent.size.default:(None, None)
TextboxComponent.size.allowedLabels:[]
TextboxComponent.size.allowedTypes:[]
TextboxComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.size.allowedVals:[]
TextboxComponent.size.canBePath:True
TextboxComponent.size.categ:Layout
TextboxComponent.size.codeWanted:False
TextboxComponent.size.direct:True
TextboxComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
TextboxComponent.size.inputType:single
TextboxComponent.size.label:Size [w,h]
TextboxComponent.size.readOnly:False
TextboxComponent.size.staticUpdater:None
TextboxComponent.size.updates:constant
TextboxComponent.size.val:(None, None)
TextboxComponent.size.valType:list
TextboxComponent.startEstim.default:
TextboxComponent.startEstim.allowedLabels:[]
TextboxComponent.startEstim.allowedTypes:[]
TextboxComponent.startEstim.allowedUpdates:None
TextboxComponent.startEstim.allowedVals:[]
TextboxComponent.startEstim.canBePath:True
TextboxComponent.startEstim.categ:Basic
TextboxComponent.startEstim.codeWanted:False
TextboxComponent.startEstim.direct:False
TextboxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
TextboxComponent.startEstim.inputType:single
TextboxComponent.startEstim.label:Expected start (s)
TextboxComponent.startEstim.readOnly:False
TextboxComponent.startEstim.staticUpdater:None
TextboxComponent.startEstim.updates:None
TextboxComponent.startEstim.val:
TextboxComponent.startEstim.valType:code
TextboxComponent.startType.default:'time (s)'
TextboxComponent.startType.allowedLabels:[]
TextboxComponent.startType.allowedTypes:[]
TextboxComponent.startType.allowedUpdates:None
TextboxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
TextboxComponent.startType.canBePath:True
TextboxComponent.startType.categ:Basic
TextboxComponent.startType.codeWanted:False
TextboxComponent.startType.direct:False
TextboxComponent.startType.hint:How do you want to define your start point?
TextboxComponent.startType.inputType:choice
TextboxComponent.startType.label:start type
TextboxComponent.startType.readOnly:False
TextboxComponent.startType.staticUpdater:None
TextboxComponent.startType.updates:None
TextboxComponent.startType.val:time (s)
TextboxComponent.startType.valType:str
TextboxComponent.startVal.default:0.0
TextboxComponent.startVal.allowedLabels:[]
TextboxComponent.startVal.allowedTypes:[]
TextboxComponent.startVal.allowedUpdates:None
TextboxComponent.startVal.allowedVals:[]
TextboxComponent.startVal.canBePath:True
TextboxComponent.startVal.categ:Basic
TextboxComponent.startVal.codeWanted:False
TextboxComponent.startVal.direct:True
TextboxComponent.startVal.hint:When does the component start?
TextboxComponent.startVal.inputType:single
TextboxComponent.startVal.label:Start
TextboxComponent.startVal.readOnly:False
TextboxComponent.startVal.staticUpdater:None
TextboxComponent.startVal.updates:None
TextboxComponent.startVal.val:0.0
TextboxComponent.startVal.valType:code
TextboxComponent.stopType.default:'duration (s)'
TextboxComponent.stopType.allowedLabels:[]
TextboxComponent.stopType.allowedTypes:[]
TextboxComponent.stopType.allowedUpdates:None
TextboxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
TextboxComponent.stopType.canBePath:True
TextboxComponent.stopType.categ:Basic
TextboxComponent.stopType.codeWanted:False
TextboxComponent.stopType.direct:False
TextboxComponent.stopType.hint:How do you want to define your end point?
TextboxComponent.stopType.inputType:choice
TextboxComponent.stopType.label:stop type
TextboxComponent.stopType.readOnly:False
TextboxComponent.stopType.staticUpdater:None
TextboxComponent.stopType.updates:None
TextboxComponent.stopType.val:duration (s)
TextboxComponent.stopType.valType:str
TextboxComponent.stopVal.default:1.0
TextboxComponent.stopVal.allowedLabels:[]
TextboxComponent.stopVal.allowedTypes:[]
TextboxComponent.stopVal.allowedUpdates:[]
TextboxComponent.stopVal.allowedVals:[]
TextboxComponent.stopVal.canBePath:True
TextboxComponent.stopVal.categ:Basic
TextboxComponent.stopVal.codeWanted:False
TextboxComponent.stopVal.direct:True
TextboxComponent.stopVal.hint:When does the component end? (blank is endless)
TextboxComponent.stopVal.inputType:single
TextboxComponent.stopVal.label:Stop
TextboxComponent.stopVal.readOnly:False
TextboxComponent.stopVal.staticUpdater:None
TextboxComponent.stopVal.updates:constant
TextboxComponent.stopVal.val:1.0
TextboxComponent.stopVal.valType:code
TextboxComponent.syncScreenRefresh.default:True
TextboxComponent.syncScreenRefresh.allowedLabels:[]
TextboxComponent.syncScreenRefresh.allowedTypes:[]
TextboxComponent.syncScreenRefresh.allowedUpdates:None
TextboxComponent.syncScreenRefresh.allowedVals:[]
TextboxComponent.syncScreenRefresh.canBePath:True
TextboxComponent.syncScreenRefresh.categ:Data
TextboxComponent.syncScreenRefresh.codeWanted:False
TextboxComponent.syncScreenRefresh.direct:True
TextboxComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
TextboxComponent.syncScreenRefresh.inputType:bool
TextboxComponent.syncScreenRefresh.label:Sync timing with screen refresh
TextboxComponent.syncScreenRefresh.readOnly:True
TextboxComponent.syncScreenRefresh.staticUpdater:None
TextboxComponent.syncScreenRefresh.updates:None
TextboxComponent.syncScreenRefresh.val:True
TextboxComponent.syncScreenRefresh.valType:bool
TextboxComponent.text.default:'Any text\n\nincluding line breaks'
TextboxComponent.text.allowedLabels:[]
TextboxComponent.text.allowedTypes:[]
TextboxComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextboxComponent.text.allowedVals:[]
TextboxComponent.text.canBePath:False
TextboxComponent.text.categ:Basic
TextboxComponent.text.codeWanted:False
TextboxComponent.text.direct:True
TextboxComponent.text.hint:The text to be displayed
TextboxComponent.text.inputType:multi
TextboxComponent.text.label:Text
TextboxComponent.text.readOnly:False
TextboxComponent.text.staticUpdater:None
TextboxComponent.text.updates:constant
TextboxComponent.text.val:Any text

including line breaks
TextboxComponent.text.valType:str
TextboxComponent.units.default:'from exp settings'
TextboxComponent.units.allowedLabels:[]
TextboxComponent.units.allowedTypes:[]
TextboxComponent.units.allowedUpdates:None
TextboxComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
TextboxComponent.units.canBePath:True
TextboxComponent.units.categ:Layout
TextboxComponent.units.codeWanted:False
TextboxComponent.units.direct:True
TextboxComponent.units.hint:Units of dimensions for this stimulus
TextboxComponent.units.inputType:choice
TextboxComponent.units.label:Spatial Units
TextboxComponent.units.readOnly:False
TextboxComponent.units.staticUpdater:None
TextboxComponent.units.updates:None
TextboxComponent.units.val:from exp settings
TextboxComponent.units.valType:str
UnknownComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType']
UnknownComponent.disabled.default:False
UnknownComponent.disabled.allowedLabels:[]
UnknownComponent.disabled.allowedTypes:[]
UnknownComponent.disabled.allowedUpdates:None
UnknownComponent.disabled.allowedVals:[]
UnknownComponent.disabled.canBePath:True
UnknownComponent.disabled.categ:Testing
UnknownComponent.disabled.codeWanted:False
UnknownComponent.disabled.direct:False
UnknownComponent.disabled.hint:Disable this component
UnknownComponent.disabled.inputType:bool
UnknownComponent.disabled.label:Disable component
UnknownComponent.disabled.readOnly:False
UnknownComponent.disabled.staticUpdater:None
UnknownComponent.disabled.updates:None
UnknownComponent.disabled.val:False
UnknownComponent.disabled.valType:bool
UnknownComponent.durationEstim.default:
UnknownComponent.durationEstim.allowedLabels:[]
UnknownComponent.durationEstim.allowedTypes:[]
UnknownComponent.durationEstim.allowedUpdates:None
UnknownComponent.durationEstim.allowedVals:[]
UnknownComponent.durationEstim.canBePath:True
UnknownComponent.durationEstim.categ:Basic
UnknownComponent.durationEstim.codeWanted:False
UnknownComponent.durationEstim.direct:False
UnknownComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
UnknownComponent.durationEstim.inputType:single
UnknownComponent.durationEstim.label:Expected duration (s)
UnknownComponent.durationEstim.readOnly:False
UnknownComponent.durationEstim.staticUpdater:None
UnknownComponent.durationEstim.updates:None
UnknownComponent.durationEstim.val:
UnknownComponent.durationEstim.valType:code
UnknownComponent.name.default:
UnknownComponent.name.allowedLabels:[]
UnknownComponent.name.allowedTypes:[]
UnknownComponent.name.allowedUpdates:None
UnknownComponent.name.allowedVals:[]
UnknownComponent.name.canBePath:True
UnknownComponent.name.categ:Basic
UnknownComponent.name.codeWanted:False
UnknownComponent.name.direct:True
UnknownComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
UnknownComponent.name.inputType:single
UnknownComponent.name.label:Name
UnknownComponent.name.readOnly:False
UnknownComponent.name.staticUpdater:None
UnknownComponent.name.val:
UnknownComponent.name.valType:code
UnknownComponent.saveStartStop.default:True
UnknownComponent.saveStartStop.allowedLabels:[]
UnknownComponent.saveStartStop.allowedTypes:[]
UnknownComponent.saveStartStop.allowedUpdates:None
UnknownComponent.saveStartStop.allowedVals:[]
UnknownComponent.saveStartStop.canBePath:True
UnknownComponent.saveStartStop.categ:Data
UnknownComponent.saveStartStop.codeWanted:False
UnknownComponent.saveStartStop.direct:True
UnknownComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
UnknownComponent.saveStartStop.inputType:bool
UnknownComponent.saveStartStop.label:Save onset/offset times
UnknownComponent.saveStartStop.readOnly:False
UnknownComponent.saveStartStop.staticUpdater:None
UnknownComponent.saveStartStop.updates:None
UnknownComponent.saveStartStop.val:True
UnknownComponent.saveStartStop.valType:bool
UnknownComponent.startEstim.default:
UnknownComponent.startEstim.allowedLabels:[]
UnknownComponent.startEstim.allowedTypes:[]
UnknownComponent.startEstim.allowedUpdates:None
UnknownComponent.startEstim.allowedVals:[]
UnknownComponent.startEstim.canBePath:True
UnknownComponent.startEstim.categ:Basic
UnknownComponent.startEstim.codeWanted:False
UnknownComponent.startEstim.direct:False
UnknownComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
UnknownComponent.startEstim.inputType:single
UnknownComponent.startEstim.label:Expected start (s)
UnknownComponent.startEstim.readOnly:False
UnknownComponent.startEstim.staticUpdater:None
UnknownComponent.startEstim.updates:None
UnknownComponent.startEstim.val:
UnknownComponent.startEstim.valType:code
UnknownComponent.startType.default:'time (s)'
UnknownComponent.startType.allowedLabels:[]
UnknownComponent.startType.allowedTypes:[]
UnknownComponent.startType.allowedUpdates:None
UnknownComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
UnknownComponent.startType.canBePath:True
UnknownComponent.startType.categ:Basic
UnknownComponent.startType.codeWanted:False
UnknownComponent.startType.direct:False
UnknownComponent.startType.hint:How do you want to define your start point?
UnknownComponent.startType.inputType:choice
UnknownComponent.startType.label:start type
UnknownComponent.startType.readOnly:False
UnknownComponent.startType.staticUpdater:None
UnknownComponent.startType.updates:None
UnknownComponent.startType.val:time (s)
UnknownComponent.startType.valType:str
UnknownComponent.startVal.default:
UnknownComponent.startVal.allowedLabels:[]
UnknownComponent.startVal.allowedTypes:[]
UnknownComponent.startVal.allowedUpdates:None
UnknownComponent.startVal.allowedVals:[]
UnknownComponent.startVal.canBePath:True
UnknownComponent.startVal.categ:Basic
UnknownComponent.startVal.codeWanted:False
UnknownComponent.startVal.direct:True
UnknownComponent.startVal.hint:When does the component start?
UnknownComponent.startVal.inputType:single
UnknownComponent.startVal.label:Start
UnknownComponent.startVal.readOnly:False
UnknownComponent.startVal.staticUpdater:None
UnknownComponent.startVal.updates:None
UnknownComponent.startVal.val:
UnknownComponent.startVal.valType:code
UnknownComponent.stopType.default:'duration (s)'
UnknownComponent.stopType.allowedLabels:[]
UnknownComponent.stopType.allowedTypes:[]
UnknownComponent.stopType.allowedUpdates:None
UnknownComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
UnknownComponent.stopType.canBePath:True
UnknownComponent.stopType.categ:Basic
UnknownComponent.stopType.codeWanted:False
UnknownComponent.stopType.direct:False
UnknownComponent.stopType.hint:How do you want to define your end point?
UnknownComponent.stopType.inputType:choice
UnknownComponent.stopType.label:stop type
UnknownComponent.stopType.readOnly:False
UnknownComponent.stopType.staticUpdater:None
UnknownComponent.stopType.updates:None
UnknownComponent.stopType.val:duration (s)
UnknownComponent.stopType.valType:str
UnknownComponent.stopVal.default:
UnknownComponent.stopVal.allowedLabels:[]
UnknownComponent.stopVal.allowedTypes:[]
UnknownComponent.stopVal.allowedUpdates:[]
UnknownComponent.stopVal.allowedVals:[]
UnknownComponent.stopVal.canBePath:True
UnknownComponent.stopVal.categ:Basic
UnknownComponent.stopVal.codeWanted:False
UnknownComponent.stopVal.direct:True
UnknownComponent.stopVal.hint:When does the component end? (blank is endless)
UnknownComponent.stopVal.inputType:single
UnknownComponent.stopVal.label:Stop
UnknownComponent.stopVal.readOnly:False
UnknownComponent.stopVal.staticUpdater:None
UnknownComponent.stopVal.updates:constant
UnknownComponent.stopVal.val:
UnknownComponent.stopVal.valType:code
UnknownComponent.syncScreenRefresh.default:False
UnknownComponent.syncScreenRefresh.allowedLabels:[]
UnknownComponent.syncScreenRefresh.allowedTypes:[]
UnknownComponent.syncScreenRefresh.allowedUpdates:None
UnknownComponent.syncScreenRefresh.allowedVals:[]
UnknownComponent.syncScreenRefresh.canBePath:True
UnknownComponent.syncScreenRefresh.categ:Data
UnknownComponent.syncScreenRefresh.codeWanted:False
UnknownComponent.syncScreenRefresh.direct:True
UnknownComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
UnknownComponent.syncScreenRefresh.inputType:bool
UnknownComponent.syncScreenRefresh.label:Sync timing with screen refresh
UnknownComponent.syncScreenRefresh.readOnly:False
UnknownComponent.syncScreenRefresh.staticUpdater:None
UnknownComponent.syncScreenRefresh.updates:None
UnknownComponent.syncScreenRefresh.val:False
UnknownComponent.syncScreenRefresh.valType:bool
VariableComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'startExpValue', 'saveStartExp', 'startRoutineValue', 'saveStartRoutine', 'startFrameValue', 'saveFrameValue', 'saveEndRoutine', 'saveEndExp']
VariableComponent.disabled.default:False
VariableComponent.disabled.allowedLabels:[]
VariableComponent.disabled.allowedTypes:[]
VariableComponent.disabled.allowedUpdates:None
VariableComponent.disabled.allowedVals:[]
VariableComponent.disabled.canBePath:True
VariableComponent.disabled.categ:Testing
VariableComponent.disabled.codeWanted:False
VariableComponent.disabled.direct:False
VariableComponent.disabled.hint:Disable this component
VariableComponent.disabled.inputType:bool
VariableComponent.disabled.label:Disable component
VariableComponent.disabled.readOnly:False
VariableComponent.disabled.staticUpdater:None
VariableComponent.disabled.updates:None
VariableComponent.disabled.val:False
VariableComponent.disabled.valType:bool
VariableComponent.durationEstim.default:
VariableComponent.durationEstim.allowedLabels:[]
VariableComponent.durationEstim.allowedTypes:[]
VariableComponent.durationEstim.allowedUpdates:None
VariableComponent.durationEstim.allowedVals:[]
VariableComponent.durationEstim.canBePath:True
VariableComponent.durationEstim.categ:Basic
VariableComponent.durationEstim.codeWanted:False
VariableComponent.durationEstim.direct:False
VariableComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
VariableComponent.durationEstim.inputType:single
VariableComponent.durationEstim.label:Expected duration (s)
VariableComponent.durationEstim.readOnly:False
VariableComponent.durationEstim.staticUpdater:None
VariableComponent.durationEstim.updates:None
VariableComponent.durationEstim.val:
VariableComponent.durationEstim.valType:code
VariableComponent.name.default:var1
VariableComponent.name.allowedLabels:[]
VariableComponent.name.allowedTypes:[]
VariableComponent.name.allowedUpdates:None
VariableComponent.name.allowedVals:[]
VariableComponent.name.canBePath:True
VariableComponent.name.categ:Basic
VariableComponent.name.codeWanted:False
VariableComponent.name.direct:True
VariableComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
VariableComponent.name.inputType:single
VariableComponent.name.label:Name
VariableComponent.name.readOnly:False
VariableComponent.name.staticUpdater:None
VariableComponent.name.val:var1
VariableComponent.name.valType:code
VariableComponent.saveEndExp.default:False
VariableComponent.saveEndExp.allowedLabels:[]
VariableComponent.saveEndExp.allowedTypes:[]
VariableComponent.saveEndExp.allowedUpdates:None
VariableComponent.saveEndExp.allowedVals:[]
VariableComponent.saveEndExp.canBePath:True
VariableComponent.saveEndExp.categ:Data
VariableComponent.saveEndExp.codeWanted:False
VariableComponent.saveEndExp.direct:True
VariableComponent.saveEndExp.hint:Save the experiment end value in data file.
VariableComponent.saveEndExp.inputType:bool
VariableComponent.saveEndExp.label:Save exp end value
VariableComponent.saveEndExp.readOnly:False
VariableComponent.saveEndExp.staticUpdater:None
VariableComponent.saveEndExp.updates:constant
VariableComponent.saveEndExp.val:False
VariableComponent.saveEndExp.valType:bool
VariableComponent.saveEndRoutine.default:True
VariableComponent.saveEndRoutine.allowedLabels:[]
VariableComponent.saveEndRoutine.allowedTypes:[]
VariableComponent.saveEndRoutine.allowedUpdates:None
VariableComponent.saveEndRoutine.allowedVals:[]
VariableComponent.saveEndRoutine.canBePath:True
VariableComponent.saveEndRoutine.categ:Data
VariableComponent.saveEndRoutine.codeWanted:False
VariableComponent.saveEndRoutine.direct:True
VariableComponent.saveEndRoutine.hint:Save the routine end value in data file.
VariableComponent.saveEndRoutine.inputType:bool
VariableComponent.saveEndRoutine.label:Save routine end value
VariableComponent.saveEndRoutine.readOnly:False
VariableComponent.saveEndRoutine.staticUpdater:None
VariableComponent.saveEndRoutine.updates:constant
VariableComponent.saveEndRoutine.val:True
VariableComponent.saveEndRoutine.valType:bool
VariableComponent.saveFrameValue.default:'never'
VariableComponent.saveFrameValue.allowedLabels:[]
VariableComponent.saveFrameValue.allowedTypes:[]
VariableComponent.saveFrameValue.allowedUpdates:None
VariableComponent.saveFrameValue.allowedVals:['first', 'last', 'all', 'never']
VariableComponent.saveFrameValue.canBePath:True
VariableComponent.saveFrameValue.categ:Data
VariableComponent.saveFrameValue.codeWanted:False
VariableComponent.saveFrameValue.direct:False
VariableComponent.saveFrameValue.hint:Save choice of frame value in data file.
VariableComponent.saveFrameValue.inputType:choice
VariableComponent.saveFrameValue.label:Save frame value
VariableComponent.saveFrameValue.readOnly:False
VariableComponent.saveFrameValue.staticUpdater:None
VariableComponent.saveFrameValue.updates:constant
VariableComponent.saveFrameValue.val:never
VariableComponent.saveFrameValue.valType:str
VariableComponent.saveStartExp.default:False
VariableComponent.saveStartExp.allowedLabels:[]
VariableComponent.saveStartExp.allowedTypes:[]
VariableComponent.saveStartExp.allowedUpdates:None
VariableComponent.saveStartExp.allowedVals:[]
VariableComponent.saveStartExp.canBePath:True
VariableComponent.saveStartExp.categ:Data
VariableComponent.saveStartExp.codeWanted:False
VariableComponent.saveStartExp.direct:True
VariableComponent.saveStartExp.hint:Save the experiment start value in data file.
VariableComponent.saveStartExp.inputType:bool
VariableComponent.saveStartExp.label:Save exp start value
VariableComponent.saveStartExp.readOnly:False
VariableComponent.saveStartExp.staticUpdater:None
VariableComponent.saveStartExp.updates:constant
VariableComponent.saveStartExp.val:False
VariableComponent.saveStartExp.valType:bool
VariableComponent.saveStartRoutine.default:False
VariableComponent.saveStartRoutine.allowedLabels:[]
VariableComponent.saveStartRoutine.allowedTypes:[]
VariableComponent.saveStartRoutine.allowedUpdates:None
VariableComponent.saveStartRoutine.allowedVals:[]
VariableComponent.saveStartRoutine.canBePath:True
VariableComponent.saveStartRoutine.categ:Data
VariableComponent.saveStartRoutine.codeWanted:False
VariableComponent.saveStartRoutine.direct:True
VariableComponent.saveStartRoutine.hint:Save the routine start value in data file.
VariableComponent.saveStartRoutine.inputType:bool
VariableComponent.saveStartRoutine.label:Save routine start value
VariableComponent.saveStartRoutine.readOnly:False
VariableComponent.saveStartRoutine.staticUpdater:None
VariableComponent.saveStartRoutine.updates:constant
VariableComponent.saveStartRoutine.val:False
VariableComponent.saveStartRoutine.valType:bool
VariableComponent.saveStartStop.default:True
VariableComponent.saveStartStop.allowedLabels:[]
VariableComponent.saveStartStop.allowedTypes:[]
VariableComponent.saveStartStop.allowedUpdates:None
VariableComponent.saveStartStop.allowedVals:[]
VariableComponent.saveStartStop.canBePath:True
VariableComponent.saveStartStop.categ:Data
VariableComponent.saveStartStop.codeWanted:False
VariableComponent.saveStartStop.direct:True
VariableComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
VariableComponent.saveStartStop.inputType:bool
VariableComponent.saveStartStop.label:Save onset/offset times
VariableComponent.saveStartStop.readOnly:False
VariableComponent.saveStartStop.staticUpdater:None
VariableComponent.saveStartStop.updates:None
VariableComponent.saveStartStop.val:True
VariableComponent.saveStartStop.valType:bool
VariableComponent.startEstim.default:
VariableComponent.startEstim.allowedLabels:[]
VariableComponent.startEstim.allowedTypes:[]
VariableComponent.startEstim.allowedUpdates:None
VariableComponent.startEstim.allowedVals:[]
VariableComponent.startEstim.canBePath:True
VariableComponent.startEstim.categ:Basic
VariableComponent.startEstim.codeWanted:False
VariableComponent.startEstim.direct:False
VariableComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
VariableComponent.startEstim.inputType:single
VariableComponent.startEstim.label:Expected start (s)
VariableComponent.startEstim.readOnly:False
VariableComponent.startEstim.staticUpdater:None
VariableComponent.startEstim.updates:None
VariableComponent.startEstim.val:
VariableComponent.startEstim.valType:code
VariableComponent.startExpValue.default:
VariableComponent.startExpValue.allowedLabels:[]
VariableComponent.startExpValue.allowedTypes:[]
VariableComponent.startExpValue.allowedUpdates:None
VariableComponent.startExpValue.allowedVals:[]
VariableComponent.startExpValue.canBePath:True
VariableComponent.startExpValue.categ:Basic
VariableComponent.startExpValue.codeWanted:False
VariableComponent.startExpValue.direct:True
VariableComponent.startExpValue.hint:The start value. A variable can be set to any value.
VariableComponent.startExpValue.inputType:single
VariableComponent.startExpValue.label:Experiment start value
VariableComponent.startExpValue.readOnly:False
VariableComponent.startExpValue.staticUpdater:None
VariableComponent.startExpValue.updates:constant
VariableComponent.startExpValue.val:
VariableComponent.startExpValue.valType:code
VariableComponent.startFrameValue.default:
VariableComponent.startFrameValue.allowedLabels:[]
VariableComponent.startFrameValue.allowedTypes:[]
VariableComponent.startFrameValue.allowedUpdates:None
VariableComponent.startFrameValue.allowedVals:[]
VariableComponent.startFrameValue.canBePath:True
VariableComponent.startFrameValue.categ:Basic
VariableComponent.startFrameValue.codeWanted:False
VariableComponent.startFrameValue.direct:True
VariableComponent.startFrameValue.hint:Set the value for the beginning of every screen refresh.
VariableComponent.startFrameValue.inputType:single
VariableComponent.startFrameValue.label:Frame start value
VariableComponent.startFrameValue.readOnly:False
VariableComponent.startFrameValue.staticUpdater:None
VariableComponent.startFrameValue.updates:None
VariableComponent.startFrameValue.val:
VariableComponent.startFrameValue.valType:code
VariableComponent.startRoutineValue.default:
VariableComponent.startRoutineValue.allowedLabels:[]
VariableComponent.startRoutineValue.allowedTypes:[]
VariableComponent.startRoutineValue.allowedUpdates:None
VariableComponent.startRoutineValue.allowedVals:[]
VariableComponent.startRoutineValue.canBePath:True
VariableComponent.startRoutineValue.categ:Basic
VariableComponent.startRoutineValue.codeWanted:False
VariableComponent.startRoutineValue.direct:True
VariableComponent.startRoutineValue.hint:Set the value for the beginning of each routine.
VariableComponent.startRoutineValue.inputType:single
VariableComponent.startRoutineValue.label:Routine start value
VariableComponent.startRoutineValue.readOnly:False
VariableComponent.startRoutineValue.staticUpdater:None
VariableComponent.startRoutineValue.updates:constant
VariableComponent.startRoutineValue.val:
VariableComponent.startRoutineValue.valType:code
VariableComponent.startType.default:'time (s)'
VariableComponent.startType.allowedLabels:[]
VariableComponent.startType.allowedTypes:[]
VariableComponent.startType.allowedUpdates:None
VariableComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
VariableComponent.startType.canBePath:True
VariableComponent.startType.categ:Basic
VariableComponent.startType.codeWanted:False
VariableComponent.startType.direct:False
VariableComponent.startType.hint:How do you want to define your start point?
VariableComponent.startType.inputType:choice
VariableComponent.startType.label:start type
VariableComponent.startType.readOnly:False
VariableComponent.startType.staticUpdater:None
VariableComponent.startType.updates:None
VariableComponent.startType.val:time (s)
VariableComponent.startType.valType:str
VariableComponent.startVal.default:
VariableComponent.startVal.allowedLabels:[]
VariableComponent.startVal.allowedTypes:[]
VariableComponent.startVal.allowedUpdates:None
VariableComponent.startVal.allowedVals:[]
VariableComponent.startVal.canBePath:True
VariableComponent.startVal.categ:Basic
VariableComponent.startVal.codeWanted:False
VariableComponent.startVal.direct:True
VariableComponent.startVal.hint:When does the component start?
VariableComponent.startVal.inputType:single
VariableComponent.startVal.label:Start
VariableComponent.startVal.readOnly:False
VariableComponent.startVal.staticUpdater:None
VariableComponent.startVal.updates:None
VariableComponent.startVal.val:
VariableComponent.startVal.valType:code
VariableComponent.stopType.default:'duration (s)'
VariableComponent.stopType.allowedLabels:[]
VariableComponent.stopType.allowedTypes:[]
VariableComponent.stopType.allowedUpdates:None
VariableComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
VariableComponent.stopType.canBePath:True
VariableComponent.stopType.categ:Basic
VariableComponent.stopType.codeWanted:False
VariableComponent.stopType.direct:False
VariableComponent.stopType.hint:How do you want to define your end point?
VariableComponent.stopType.inputType:choice
VariableComponent.stopType.label:stop type
VariableComponent.stopType.readOnly:False
VariableComponent.stopType.staticUpdater:None
VariableComponent.stopType.updates:None
VariableComponent.stopType.val:duration (s)
VariableComponent.stopType.valType:str
VariableComponent.stopVal.default:
VariableComponent.stopVal.allowedLabels:[]
VariableComponent.stopVal.allowedTypes:[]
VariableComponent.stopVal.allowedUpdates:[]
VariableComponent.stopVal.allowedVals:[]
VariableComponent.stopVal.canBePath:True
VariableComponent.stopVal.categ:Basic
VariableComponent.stopVal.codeWanted:False
VariableComponent.stopVal.direct:True
VariableComponent.stopVal.hint:When does the component end? (blank is endless)
VariableComponent.stopVal.inputType:single
VariableComponent.stopVal.label:Stop
VariableComponent.stopVal.readOnly:False
VariableComponent.stopVal.staticUpdater:None
VariableComponent.stopVal.updates:constant
VariableComponent.stopVal.val:
VariableComponent.stopVal.valType:code
VariableComponent.syncScreenRefresh.default:False
VariableComponent.syncScreenRefresh.allowedLabels:[]
VariableComponent.syncScreenRefresh.allowedTypes:[]
VariableComponent.syncScreenRefresh.allowedUpdates:None
VariableComponent.syncScreenRefresh.allowedVals:[]
VariableComponent.syncScreenRefresh.canBePath:True
VariableComponent.syncScreenRefresh.categ:Data
VariableComponent.syncScreenRefresh.codeWanted:False
VariableComponent.syncScreenRefresh.direct:True
VariableComponent.syncScreenRefresh.hint:Synchronize times with screen refresh (good for visual stimuli and responses based on them)
VariableComponent.syncScreenRefresh.inputType:bool
VariableComponent.syncScreenRefresh.label:Sync timing with screen refresh
VariableComponent.syncScreenRefresh.readOnly:False
VariableComponent.syncScreenRefresh.staticUpdater:None
VariableComponent.syncScreenRefresh.updates:None
VariableComponent.syncScreenRefresh.val:False
VariableComponent.syncScreenRefresh.valType:bool
cedrusButtonBoxComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns', 'forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
cedrusButtonBoxComponent.allowedKeys.default:[]
cedrusButtonBoxComponent.allowedKeys.allowedLabels:[]
cedrusButtonBoxComponent.allowedKeys.allowedTypes:[]
cedrusButtonBoxComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
cedrusButtonBoxComponent.allowedKeys.allowedVals:[]
cedrusButtonBoxComponent.allowedKeys.canBePath:True
cedrusButtonBoxComponent.allowedKeys.categ:Basic
cedrusButtonBoxComponent.allowedKeys.codeWanted:False
cedrusButtonBoxComponent.allowedKeys.direct:True
cedrusButtonBoxComponent.allowedKeys.hint:Keys to be read (blank for any) or key numbers separated by commas
cedrusButtonBoxComponent.allowedKeys.inputType:single
cedrusButtonBoxComponent.allowedKeys.label:Allowed keys
cedrusButtonBoxComponent.allowedKeys.readOnly:False
cedrusButtonBoxComponent.allowedKeys.staticUpdater:None
cedrusButtonBoxComponent.allowedKeys.updates:constant
cedrusButtonBoxComponent.allowedKeys.val:
cedrusButtonBoxComponent.allowedKeys.valType:list
cedrusButtonBoxComponent.correctAns.default:
cedrusButtonBoxComponent.correctAns.allowedLabels:[]
cedrusButtonBoxComponent.correctAns.allowedTypes:[]
cedrusButtonBoxComponent.correctAns.allowedUpdates:None
cedrusButtonBoxComponent.correctAns.allowedVals:[]
cedrusButtonBoxComponent.correctAns.canBePath:True
cedrusButtonBoxComponent.correctAns.categ:Data
cedrusButtonBoxComponent.correctAns.codeWanted:False
cedrusButtonBoxComponent.correctAns.direct:False
cedrusButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 6 on a 7-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
cedrusButtonBoxComponent.correctAns.inputType:single
cedrusButtonBoxComponent.correctAns.label:Correct answer
cedrusButtonBoxComponent.correctAns.readOnly:False
cedrusButtonBoxComponent.correctAns.staticUpdater:None
cedrusButtonBoxComponent.correctAns.updates:constant
cedrusButtonBoxComponent.correctAns.val:
cedrusButtonBoxComponent.correctAns.valType:code
cedrusButtonBoxComponent.deviceNumber.default:0
cedrusButtonBoxComponent.deviceNumber.allowedLabels:[]
cedrusButtonBoxComponent.deviceNumber.allowedTypes:[]
cedrusButtonBoxComponent.deviceNumber.allowedUpdates:[]
cedrusButtonBoxComponent.deviceNumber.allowedVals:[]
cedrusButtonBoxComponent.deviceNumber.canBePath:True
cedrusButtonBoxComponent.deviceNumber.categ:Hardware
cedrusButtonBoxComponent.deviceNumber.codeWanted:False
cedrusButtonBoxComponent.deviceNumber.direct:True
cedrusButtonBoxComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
cedrusButtonBoxComponent.deviceNumber.inputType:spin
cedrusButtonBoxComponent.deviceNumber.label:Device number
cedrusButtonBoxComponent.deviceNumber.readOnly:False
cedrusButtonBoxComponent.deviceNumber.staticUpdater:None
cedrusButtonBoxComponent.deviceNumber.updates:constant
cedrusButtonBoxComponent.deviceNumber.val:0
cedrusButtonBoxComponent.deviceNumber.valType:int
cedrusButtonBoxComponent.disabled.default:False
cedrusButtonBoxComponent.disabled.allowedLabels:[]
cedrusButtonBoxComponent.disabled.allowedTypes:[]
cedrusButtonBoxComponent.disabled.allowedUpdates:None
cedrusButtonBoxComponent.disabled.allowedVals:[]
cedrusButtonBoxComponent.disabled.canBePath:True
cedrusButtonBoxComponent.disabled.categ:Testing
cedrusButtonBoxComponent.disabled.codeWanted:False
cedrusButtonBoxComponent.disabled.direct:False
cedrusButtonBoxComponent.disabled.hint:Disable this component
cedrusButtonBoxComponent.disabled.inputType:bool
cedrusButtonBoxComponent.disabled.label:Disable component
cedrusButtonBoxComponent.disabled.readOnly:False
cedrusButtonBoxComponent.disabled.staticUpdater:None
cedrusButtonBoxComponent.disabled.updates:None
cedrusButtonBoxComponent.disabled.val:False
cedrusButtonBoxComponent.disabled.valType:bool
cedrusButtonBoxComponent.discard previous.default:True
cedrusButtonBoxComponent.discard previous.allowedLabels:[]
cedrusButtonBoxComponent.discard previous.allowedTypes:[]
cedrusButtonBoxComponent.discard previous.allowedUpdates:None
cedrusButtonBoxComponent.discard previous.allowedVals:[]
cedrusButtonBoxComponent.discard previous.canBePath:True
cedrusButtonBoxComponent.discard previous.categ:Data
cedrusButtonBoxComponent.discard previous.codeWanted:False
cedrusButtonBoxComponent.discard previous.direct:True
cedrusButtonBoxComponent.discard previous.hint:Do you want to discard all responses occurring before the onset of this component?
cedrusButtonBoxComponent.discard previous.inputType:bool
cedrusButtonBoxComponent.discard previous.label:Discard previous
cedrusButtonBoxComponent.discard previous.readOnly:False
cedrusButtonBoxComponent.discard previous.staticUpdater:None
cedrusButtonBoxComponent.discard previous.updates:constant
cedrusButtonBoxComponent.discard previous.val:True
cedrusButtonBoxComponent.discard previous.valType:bool
cedrusButtonBoxComponent.durationEstim.default:
cedrusButtonBoxComponent.durationEstim.allowedLabels:[]
cedrusButtonBoxComponent.durationEstim.allowedTypes:[]
cedrusButtonBoxComponent.durationEstim.allowedUpdates:None
cedrusButtonBoxComponent.durationEstim.allowedVals:[]
cedrusButtonBoxComponent.durationEstim.canBePath:True
cedrusButtonBoxComponent.durationEstim.categ:Basic
cedrusButtonBoxComponent.durationEstim.codeWanted:False
cedrusButtonBoxComponent.durationEstim.direct:False
cedrusButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
cedrusButtonBoxComponent.durationEstim.inputType:single
cedrusButtonBoxComponent.durationEstim.label:Expected duration (s)
cedrusButtonBoxComponent.durationEstim.readOnly:False
cedrusButtonBoxComponent.durationEstim.staticUpdater:None
cedrusButtonBoxComponent.durationEstim.updates:None
cedrusButtonBoxComponent.durationEstim.val:
cedrusButtonBoxComponent.durationEstim.valType:code
cedrusButtonBoxComponent.forceEndRoutine.default:True
cedrusButtonBoxComponent.forceEndRoutine.allowedLabels:[]
cedrusButtonBoxComponent.forceEndRoutine.allowedTypes:[]
cedrusButtonBoxComponent.forceEndRoutine.allowedUpdates:None
cedrusButtonBoxComponent.forceEndRoutine.allowedVals:[]
cedrusButtonBoxComponent.forceEndRoutine.canBePath:True
cedrusButtonBoxComponent.forceEndRoutine.categ:Basic
cedrusButtonBoxComponent.forceEndRoutine.codeWanted:False
cedrusButtonBoxComponent.forceEndRoutine.direct:True
cedrusButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
cedrusButtonBoxComponent.forceEndRoutine.inputType:bool
cedrusButtonBoxComponent.forceEndRoutine.label:Force end of Routine
cedrusButtonBoxComponent.forceEndRoutine.readOnly:False
cedrusButtonBoxComponent.forceEndRoutine.staticUpdater:None
cedrusButtonBoxComponent.forceEndRoutine.updates:constant
cedrusButtonBoxComponent.forceEndRoutine.val:True
cedrusButtonBoxComponent.forceEndRoutine.valType:bool
cedrusButtonBoxComponent.name.default:buttonBox
cedrusButtonBoxComponent.name.allowedLabels:[]
cedrusButtonBoxComponent.name.allowedTypes:[]
cedrusButtonBoxComponent.name.allowedUpdates:None
cedrusButtonBoxComponent.name.allowedVals:[]
cedrusButtonBoxComponent.name.canBePath:True
cedrusButtonBoxComponent.name.categ:Basic
cedrusButtonBoxComponent.name.codeWanted:False
cedrusButtonBoxComponent.name.direct:True
cedrusButtonBoxComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
cedrusButtonBoxComponent.name.inputType:single
cedrusButtonBoxComponent.name.label:Name
cedrusButtonBoxComponent.name.readOnly:False
cedrusButtonBoxComponent.name.staticUpdater:None
cedrusButtonBoxComponent.name.val:buttonBox
cedrusButtonBoxComponent.name.valType:code
cedrusButtonBoxComponent.saveStartStop.default:True
cedrusButtonBoxComponent.saveStartStop.allowedLabels:[]
cedrusButtonBoxComponent.saveStartStop.allowedTypes:[]
cedrusButtonBoxComponent.saveStartStop.allowedUpdates:None
cedrusButtonBoxComponent.saveStartStop.allowedVals:[]
cedrusButtonBoxComponent.saveStartStop.canBePath:True
cedrusButtonBoxComponent.saveStartStop.categ:Data
cedrusButtonBoxComponent.saveStartStop.codeWanted:False
cedrusButtonBoxComponent.saveStartStop.direct:True
cedrusButtonBoxComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
cedrusButtonBoxComponent.saveStartStop.inputType:bool
cedrusButtonBoxComponent.saveStartStop.label:Save onset/offset times
cedrusButtonBoxComponent.saveStartStop.readOnly:False
cedrusButtonBoxComponent.saveStartStop.staticUpdater:None
cedrusButtonBoxComponent.saveStartStop.updates:None
cedrusButtonBoxComponent.saveStartStop.val:True
cedrusButtonBoxComponent.saveStartStop.valType:bool
cedrusButtonBoxComponent.startEstim.default:
cedrusButtonBoxComponent.startEstim.allowedLabels:[]
cedrusButtonBoxComponent.startEstim.allowedTypes:[]
cedrusButtonBoxComponent.startEstim.allowedUpdates:None
cedrusButtonBoxComponent.startEstim.allowedVals:[]
cedrusButtonBoxComponent.startEstim.canBePath:True
cedrusButtonBoxComponent.startEstim.categ:Basic
cedrusButtonBoxComponent.startEstim.codeWanted:False
cedrusButtonBoxComponent.startEstim.direct:False
cedrusButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
cedrusButtonBoxComponent.startEstim.inputType:single
cedrusButtonBoxComponent.startEstim.label:Expected start (s)
cedrusButtonBoxComponent.startEstim.readOnly:False
cedrusButtonBoxComponent.startEstim.staticUpdater:None
cedrusButtonBoxComponent.startEstim.updates:None
cedrusButtonBoxComponent.startEstim.val:
cedrusButtonBoxComponent.startEstim.valType:code
cedrusButtonBoxComponent.startType.default:'time (s)'
cedrusButtonBoxComponent.startType.allowedLabels:[]
cedrusButtonBoxComponent.startType.allowedTypes:[]
cedrusButtonBoxComponent.startType.allowedUpdates:None
cedrusButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.startType.canBePath:True
cedrusButtonBoxComponent.startType.categ:Basic
cedrusButtonBoxComponent.startType.codeWanted:False
cedrusButtonBoxComponent.startType.direct:False
cedrusButtonBoxComponent.startType.hint:How do you want to define your start point?
cedrusButtonBoxComponent.startType.inputType:choice
cedrusButtonBoxComponent.startType.label:start type
cedrusButtonBoxComponent.startType.readOnly:False
cedrusButtonBoxComponent.startType.staticUpdater:None
cedrusButtonBoxComponent.startType.updates:None
cedrusButtonBoxComponent.startType.val:time (s)
cedrusButtonBoxComponent.startType.valType:str
cedrusButtonBoxComponent.startVal.default:0.0
cedrusButtonBoxComponent.startVal.allowedLabels:[]
cedrusButtonBoxComponent.startVal.allowedTypes:[]
cedrusButtonBoxComponent.startVal.allowedUpdates:None
cedrusButtonBoxComponent.startVal.allowedVals:[]
cedrusButtonBoxComponent.startVal.canBePath:True
cedrusButtonBoxComponent.startVal.categ:Basic
cedrusButtonBoxComponent.startVal.codeWanted:False
cedrusButtonBoxComponent.startVal.direct:True
cedrusButtonBoxComponent.startVal.hint:When does the component start?
cedrusButtonBoxComponent.startVal.inputType:single
cedrusButtonBoxComponent.startVal.label:Start
cedrusButtonBoxComponent.startVal.readOnly:False
cedrusButtonBoxComponent.startVal.staticUpdater:None
cedrusButtonBoxComponent.startVal.updates:None
cedrusButtonBoxComponent.startVal.val:0.0
cedrusButtonBoxComponent.startVal.valType:code
cedrusButtonBoxComponent.stopType.default:'duration (s)'
cedrusButtonBoxComponent.stopType.allowedLabels:[]
cedrusButtonBoxComponent.stopType.allowedTypes:[]
cedrusButtonBoxComponent.stopType.allowedUpdates:None
cedrusButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.stopType.canBePath:True
cedrusButtonBoxComponent.stopType.categ:Basic
cedrusButtonBoxComponent.stopType.codeWanted:False
cedrusButtonBoxComponent.stopType.direct:False
cedrusButtonBoxComponent.stopType.hint:How do you want to define your end point?
cedrusButtonBoxComponent.stopType.inputType:choice
cedrusButtonBoxComponent.stopType.label:stop type
cedrusButtonBoxComponent.stopType.readOnly:False
cedrusButtonBoxComponent.stopType.staticUpdater:None
cedrusButtonBoxComponent.stopType.updates:None
cedrusButtonBoxComponent.stopType.val:duration (s)
cedrusButtonBoxComponent.stopType.valType:str
cedrusButtonBoxComponent.stopVal.default:1.0
cedrusButtonBoxComponent.stopVal.allowedLabels:[]
cedrusButtonBoxComponent.stopVal.allowedTypes:[]
cedrusButtonBoxComponent.stopVal.allowedUpdates:[]
cedrusButtonBoxComponent.stopVal.allowedVals:[]
cedrusButtonBoxComponent.stopVal.canBePath:True
cedrusButtonBoxComponent.stopVal.categ:Basic
cedrusButtonBoxComponent.stopVal.codeWanted:False
cedrusButtonBoxComponent.stopVal.direct:True
cedrusButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
cedrusButtonBoxComponent.stopVal.inputType:single
cedrusButtonBoxComponent.stopVal.label:Stop
cedrusButtonBoxComponent.stopVal.readOnly:False
cedrusButtonBoxComponent.stopVal.staticUpdater:None
cedrusButtonBoxComponent.stopVal.updates:constant
cedrusButtonBoxComponent.stopVal.val:1.0
cedrusButtonBoxComponent.stopVal.valType:code
cedrusButtonBoxComponent.store.default:'first key'
cedrusButtonBoxComponent.store.allowedLabels:[]
cedrusButtonBoxComponent.store.allowedTypes:[]
cedrusButtonBoxComponent.store.allowedUpdates:None
cedrusButtonBoxComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
cedrusButtonBoxComponent.store.canBePath:True
cedrusButtonBoxComponent.store.categ:Data
cedrusButtonBoxComponent.store.codeWanted:False
cedrusButtonBoxComponent.store.direct:False
cedrusButtonBoxComponent.store.hint:Choose which (if any) responses to store at the end of a trial
cedrusButtonBoxComponent.store.inputType:choice
cedrusButtonBoxComponent.store.label:Store
cedrusButtonBoxComponent.store.readOnly:False
cedrusButtonBoxComponent.store.staticUpdater:None
cedrusButtonBoxComponent.store.updates:constant
cedrusButtonBoxComponent.store.val:first key
cedrusButtonBoxComponent.store.valType:str
cedrusButtonBoxComponent.storeCorrect.default:False
cedrusButtonBoxComponent.storeCorrect.allowedLabels:[]
cedrusButtonBoxComponent.storeCorrect.allowedTypes:[]
cedrusButtonBoxComponent.storeCorrect.allowedUpdates:None
cedrusButtonBoxComponent.storeCorrect.allowedVals:[]
cedrusButtonBoxComponent.storeCorrect.canBePath:True
cedrusButtonBoxComponent.storeCorrect.categ:Data
cedrusButtonBoxComponent.storeCorrect.codeWanted:False
cedrusButtonBoxComponent.storeCorrect.direct:True
cedrusButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
cedrusButtonBoxComponent.storeCorrect.inputType:bool
cedrusButtonBoxComponent.storeCorrect.label:Store correct
cedrusButtonBoxComponent.storeCorrect.readOnly:False
cedrusButtonBoxComponent.storeCorrect.staticUpdater:None
cedrusButtonBoxComponent.storeCorrect.updates:constant
cedrusButtonBoxComponent.storeCorrect.val:False
cedrusButtonBoxComponent.storeCorrect.valType:bool
cedrusButtonBoxComponent.syncScreenRefresh.default:True
cedrusButtonBoxComponent.syncScreenRefresh.allowedLabels:[]
cedrusButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
cedrusButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
cedrusButtonBoxComponent.syncScreenRefresh.allowedVals:[]
cedrusButtonBoxComponent.syncScreenRefresh.canBePath:True
cedrusButtonBoxComponent.syncScreenRefresh.categ:Data
cedrusButtonBoxComponent.syncScreenRefresh.codeWanted:False
cedrusButtonBoxComponent.syncScreenRefresh.direct:True
cedrusButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
cedrusButtonBoxComponent.syncScreenRefresh.inputType:bool
cedrusButtonBoxComponent.syncScreenRefresh.label:Sync timing with screen
cedrusButtonBoxComponent.syncScreenRefresh.readOnly:False
cedrusButtonBoxComponent.syncScreenRefresh.staticUpdater:None
cedrusButtonBoxComponent.syncScreenRefresh.updates:constant
cedrusButtonBoxComponent.syncScreenRefresh.val:True
cedrusButtonBoxComponent.syncScreenRefresh.valType:bool
cedrusButtonBoxComponent.useBoxTimer.default:False
cedrusButtonBoxComponent.useBoxTimer.allowedLabels:[]
cedrusButtonBoxComponent.useBoxTimer.allowedTypes:[]
cedrusButtonBoxComponent.useBoxTimer.allowedUpdates:[]
cedrusButtonBoxComponent.useBoxTimer.allowedVals:[True, False]
cedrusButtonBoxComponent.useBoxTimer.canBePath:True
cedrusButtonBoxComponent.useBoxTimer.categ:Hardware
cedrusButtonBoxComponent.useBoxTimer.codeWanted:False
cedrusButtonBoxComponent.useBoxTimer.direct:True
cedrusButtonBoxComponent.useBoxTimer.hint:According to Cedrus the response box timer has a drift - use with caution!
cedrusButtonBoxComponent.useBoxTimer.inputType:bool
cedrusButtonBoxComponent.useBoxTimer.label:Use box timer
cedrusButtonBoxComponent.useBoxTimer.readOnly:False
cedrusButtonBoxComponent.useBoxTimer.staticUpdater:None
cedrusButtonBoxComponent.useBoxTimer.updates:constant
cedrusButtonBoxComponent.useBoxTimer.val:False
cedrusButtonBoxComponent.useBoxTimer.valType:bool
ioLabsButtonBoxComponent.order:['name', 'startVal', 'startEstim', 'startType', 'stopVal', 'durationEstim', 'stopType', 'forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns', 'forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
ioLabsButtonBoxComponent.active.default:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.allowedLabels:[]
ioLabsButtonBoxComponent.active.allowedTypes:[]
ioLabsButtonBoxComponent.active.allowedUpdates:['constant', 'set every repeat']
ioLabsButtonBoxComponent.active.allowedVals:[]
ioLabsButtonBoxComponent.active.canBePath:True
ioLabsButtonBoxComponent.active.categ:Data
ioLabsButtonBoxComponent.active.codeWanted:False
ioLabsButtonBoxComponent.active.direct:True
ioLabsButtonBoxComponent.active.hint:Active buttons, such as '1,6', '(1,2,5,6)' or '0' (without quotes)
ioLabsButtonBoxComponent.active.inputType:single
ioLabsButtonBoxComponent.active.label:Active buttons
ioLabsButtonBoxComponent.active.readOnly:False
ioLabsButtonBoxComponent.active.staticUpdater:None
ioLabsButtonBoxComponent.active.updates:constant
ioLabsButtonBoxComponent.active.val:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.valType:code
ioLabsButtonBoxComponent.correctAns.default:'0'
ioLabsButtonBoxComponent.correctAns.allowedLabels:[]
ioLabsButtonBoxComponent.correctAns.allowedTypes:[]
ioLabsButtonBoxComponent.correctAns.allowedUpdates:None
ioLabsButtonBoxComponent.correctAns.allowedVals:[]
ioLabsButtonBoxComponent.correctAns.canBePath:True
ioLabsButtonBoxComponent.correctAns.categ:Data
ioLabsButtonBoxComponent.correctAns.codeWanted:False
ioLabsButtonBoxComponent.correctAns.direct:False
ioLabsButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 7 on a 8-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
ioLabsButtonBoxComponent.correctAns.inputType:single
ioLabsButtonBoxComponent.correctAns.label:Correct answer
ioLabsButtonBoxComponent.correctAns.readOnly:False
ioLabsButtonBoxComponent.correctAns.staticUpdater:None
ioLabsButtonBoxComponent.correctAns.updates:constant
ioLabsButtonBoxComponent.correctAns.val:0
ioLabsButtonBoxComponent.correctAns.valType:str
ioLabsButtonBoxComponent.disabled.default:False
ioLabsButtonBoxComponent.disabled.allowedLabels:[]
ioLabsButtonBoxComponent.disabled.allowedTypes:[]
ioLabsButtonBoxComponent.disabled.allowedUpdates:None
ioLabsButtonBoxComponent.disabled.allowedVals:[]
ioLabsButtonBoxComponent.disabled.canBePath:True
ioLabsButtonBoxComponent.disabled.categ:Testing
ioLabsButtonBoxComponent.disabled.codeWanted:False
ioLabsButtonBoxComponent.disabled.direct:False
ioLabsButtonBoxComponent.disabled.hint:Disable this component
ioLabsButtonBoxComponent.disabled.inputType:bool
ioLabsButtonBoxComponent.disabled.label:Disable component
ioLabsButtonBoxComponent.disabled.readOnly:False
ioLabsButtonBoxComponent.disabled.staticUpdater:None
ioLabsButtonBoxComponent.disabled.updates:None
ioLabsButtonBoxComponent.disabled.val:False
ioLabsButtonBoxComponent.disabled.valType:bool
ioLabsButtonBoxComponent.discard previous.default:True
ioLabsButtonBoxComponent.discard previous.allowedLabels:[]
ioLabsButtonBoxComponent.discard previous.allowedTypes:[]
ioLabsButtonBoxComponent.discard previous.allowedUpdates:None
ioLabsButtonBoxComponent.discard previous.allowedVals:[]
ioLabsButtonBoxComponent.discard previous.canBePath:True
ioLabsButtonBoxComponent.discard previous.categ:Data
ioLabsButtonBoxComponent.discard previous.codeWanted:False
ioLabsButtonBoxComponent.discard previous.direct:True
ioLabsButtonBoxComponent.discard previous.hint:Do you want to discard all responses occurring before the onset of this component?
ioLabsButtonBoxComponent.discard previous.inputType:bool
ioLabsButtonBoxComponent.discard previous.label:Discard previous
ioLabsButtonBoxComponent.discard previous.readOnly:False
ioLabsButtonBoxComponent.discard previous.staticUpdater:None
ioLabsButtonBoxComponent.discard previous.updates:constant
ioLabsButtonBoxComponent.discard previous.val:True
ioLabsButtonBoxComponent.discard previous.valType:bool
ioLabsButtonBoxComponent.durationEstim.default:
ioLabsButtonBoxComponent.durationEstim.allowedLabels:[]
ioLabsButtonBoxComponent.durationEstim.allowedTypes:[]
ioLabsButtonBoxComponent.durationEstim.allowedUpdates:None
ioLabsButtonBoxComponent.durationEstim.allowedVals:[]
ioLabsButtonBoxComponent.durationEstim.canBePath:True
ioLabsButtonBoxComponent.durationEstim.categ:Basic
ioLabsButtonBoxComponent.durationEstim.codeWanted:False
ioLabsButtonBoxComponent.durationEstim.direct:False
ioLabsButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ioLabsButtonBoxComponent.durationEstim.inputType:single
ioLabsButtonBoxComponent.durationEstim.label:Expected duration (s)
ioLabsButtonBoxComponent.durationEstim.readOnly:False
ioLabsButtonBoxComponent.durationEstim.staticUpdater:None
ioLabsButtonBoxComponent.durationEstim.updates:None
ioLabsButtonBoxComponent.durationEstim.val:
ioLabsButtonBoxComponent.durationEstim.valType:code
ioLabsButtonBoxComponent.forceEndRoutine.default:True
ioLabsButtonBoxComponent.forceEndRoutine.allowedLabels:[]
ioLabsButtonBoxComponent.forceEndRoutine.allowedTypes:[]
ioLabsButtonBoxComponent.forceEndRoutine.allowedUpdates:None
ioLabsButtonBoxComponent.forceEndRoutine.allowedVals:[]
ioLabsButtonBoxComponent.forceEndRoutine.canBePath:True
ioLabsButtonBoxComponent.forceEndRoutine.categ:Basic
ioLabsButtonBoxComponent.forceEndRoutine.codeWanted:False
ioLabsButtonBoxComponent.forceEndRoutine.direct:True
ioLabsButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
ioLabsButtonBoxComponent.forceEndRoutine.inputType:bool
ioLabsButtonBoxComponent.forceEndRoutine.label:Force end of Routine
ioLabsButtonBoxComponent.forceEndRoutine.readOnly:False
ioLabsButtonBoxComponent.forceEndRoutine.staticUpdater:None
ioLabsButtonBoxComponent.forceEndRoutine.updates:constant
ioLabsButtonBoxComponent.forceEndRoutine.val:True
ioLabsButtonBoxComponent.forceEndRoutine.valType:bool
ioLabsButtonBoxComponent.lights.default:True
ioLabsButtonBoxComponent.lights.allowedLabels:[]
ioLabsButtonBoxComponent.lights.allowedTypes:[]
ioLabsButtonBoxComponent.lights.allowedUpdates:[]
ioLabsButtonBoxComponent.lights.allowedVals:[]
ioLabsButtonBoxComponent.lights.canBePath:True
ioLabsButtonBoxComponent.lights.categ:Hardware
ioLabsButtonBoxComponent.lights.codeWanted:False
ioLabsButtonBoxComponent.lights.direct:True
ioLabsButtonBoxComponent.lights.hint:Turn ON the lights for the active buttons?
ioLabsButtonBoxComponent.lights.inputType:bool
ioLabsButtonBoxComponent.lights.label:Lights
ioLabsButtonBoxComponent.lights.readOnly:False
ioLabsButtonBoxComponent.lights.staticUpdater:None
ioLabsButtonBoxComponent.lights.updates:constant
ioLabsButtonBoxComponent.lights.val:True
ioLabsButtonBoxComponent.lights.valType:bool
ioLabsButtonBoxComponent.lights off.default:False
ioLabsButtonBoxComponent.lights off.allowedLabels:[]
ioLabsButtonBoxComponent.lights off.allowedTypes:[]
ioLabsButtonBoxComponent.lights off.allowedUpdates:[]
ioLabsButtonBoxComponent.lights off.allowedVals:[]
ioLabsButtonBoxComponent.lights off.canBePath:True
ioLabsButtonBoxComponent.lights off.categ:Hardware
ioLabsButtonBoxComponent.lights off.codeWanted:False
ioLabsButtonBoxComponent.lights off.direct:True
ioLabsButtonBoxComponent.lights off.hint:Turn OFF all lights at the end of each routine?
ioLabsButtonBoxComponent.lights off.inputType:bool
ioLabsButtonBoxComponent.lights off.label:Lights off
ioLabsButtonBoxComponent.lights off.readOnly:False
ioLabsButtonBoxComponent.lights off.staticUpdater:None
ioLabsButtonBoxComponent.lights off.updates:constant
ioLabsButtonBoxComponent.lights off.val:False
ioLabsButtonBoxComponent.lights off.valType:bool
ioLabsButtonBoxComponent.name.default:bbox
ioLabsButtonBoxComponent.name.allowedLabels:[]
ioLabsButtonBoxComponent.name.allowedTypes:[]
ioLabsButtonBoxComponent.name.allowedUpdates:None
ioLabsButtonBoxComponent.name.allowedVals:[]
ioLabsButtonBoxComponent.name.canBePath:True
ioLabsButtonBoxComponent.name.categ:Basic
ioLabsButtonBoxComponent.name.codeWanted:False
ioLabsButtonBoxComponent.name.direct:True
ioLabsButtonBoxComponent.name.hint:Name of this component (alphanumeric or _, no spaces)
ioLabsButtonBoxComponent.name.inputType:single
ioLabsButtonBoxComponent.name.label:Name
ioLabsButtonBoxComponent.name.readOnly:False
ioLabsButtonBoxComponent.name.staticUpdater:None
ioLabsButtonBoxComponent.name.val:bbox
ioLabsButtonBoxComponent.name.valType:code
ioLabsButtonBoxComponent.saveStartStop.default:True
ioLabsButtonBoxComponent.saveStartStop.allowedLabels:[]
ioLabsButtonBoxComponent.saveStartStop.allowedTypes:[]
ioLabsButtonBoxComponent.saveStartStop.allowedUpdates:None
ioLabsButtonBoxComponent.saveStartStop.allowedVals:[]
ioLabsButtonBoxComponent.saveStartStop.canBePath:True
ioLabsButtonBoxComponent.saveStartStop.categ:Data
ioLabsButtonBoxComponent.saveStartStop.codeWanted:False
ioLabsButtonBoxComponent.saveStartStop.direct:True
ioLabsButtonBoxComponent.saveStartStop.hint:Store the onset/offset times in the data file (as well as in the log file).
ioLabsButtonBoxComponent.saveStartStop.inputType:bool
ioLabsButtonBoxComponent.saveStartStop.label:Save onset/offset times
ioLabsButtonBoxComponent.saveStartStop.readOnly:False
ioLabsButtonBoxComponent.saveStartStop.staticUpdater:None
ioLabsButtonBoxComponent.saveStartStop.updates:None
ioLabsButtonBoxComponent.saveStartStop.val:True
ioLabsButtonBoxComponent.saveStartStop.valType:bool
ioLabsButtonBoxComponent.startEstim.default:
ioLabsButtonBoxComponent.startEstim.allowedLabels:[]
ioLabsButtonBoxComponent.startEstim.allowedTypes:[]
ioLabsButtonBoxComponent.startEstim.allowedUpdates:None
ioLabsButtonBoxComponent.startEstim.allowedVals:[]
ioLabsButtonBoxComponent.startEstim.canBePath:True
ioLabsButtonBoxComponent.startEstim.categ:Basic
ioLabsButtonBoxComponent.startEstim.codeWanted:False
ioLabsButtonBoxComponent.startEstim.direct:False
ioLabsButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ioLabsButtonBoxComponent.startEstim.inputType:single
ioLabsButtonBoxComponent.startEstim.label:Expected start (s)
ioLabsButtonBoxComponent.startEstim.readOnly:False
ioLabsButtonBoxComponent.startEstim.staticUpdater:None
ioLabsButtonBoxComponent.startEstim.updates:None
ioLabsButtonBoxComponent.startEstim.val:
ioLabsButtonBoxComponent.startEstim.valType:code
ioLabsButtonBoxComponent.startType.default:'time (s)'
ioLabsButtonBoxComponent.startType.allowedLabels:[]
ioLabsButtonBoxComponent.startType.allowedTypes:[]
ioLabsButtonBoxComponent.startType.allowedUpdates:None
ioLabsButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.startType.canBePath:True
ioLabsButtonBoxComponent.startType.categ:Basic
ioLabsButtonBoxComponent.startType.codeWanted:False
ioLabsButtonBoxComponent.startType.direct:False
ioLabsButtonBoxComponent.startType.hint:How do you want to define your start point?
ioLabsButtonBoxComponent.startType.inputType:choice
ioLabsButtonBoxComponent.startType.label:start type
ioLabsButtonBoxComponent.startType.readOnly:False
ioLabsButtonBoxComponent.startType.staticUpdater:None
ioLabsButtonBoxComponent.startType.updates:None
ioLabsButtonBoxComponent.startType.val:time (s)
ioLabsButtonBoxComponent.startType.valType:str
ioLabsButtonBoxComponent.startVal.default:0.0
ioLabsButtonBoxComponent.startVal.allowedLabels:[]
ioLabsButtonBoxComponent.startVal.allowedTypes:[]
ioLabsButtonBoxComponent.startVal.allowedUpdates:None
ioLabsButtonBoxComponent.startVal.allowedVals:[]
ioLabsButtonBoxComponent.startVal.canBePath:True
ioLabsButtonBoxComponent.startVal.categ:Basic
ioLabsButtonBoxComponent.startVal.codeWanted:False
ioLabsButtonBoxComponent.startVal.direct:True
ioLabsButtonBoxComponent.startVal.hint:When does the component start?
ioLabsButtonBoxComponent.startVal.inputType:single
ioLabsButtonBoxComponent.startVal.label:Start
ioLabsButtonBoxComponent.startVal.readOnly:False
ioLabsButtonBoxComponent.startVal.staticUpdater:None
ioLabsButtonBoxComponent.startVal.updates:None
ioLabsButtonBoxComponent.startVal.val:0.0
ioLabsButtonBoxComponent.startVal.valType:code
ioLabsButtonBoxComponent.stopType.default:'duration (s)'
ioLabsButtonBoxComponent.stopType.allowedLabels:[]
ioLabsButtonBoxComponent.stopType.allowedTypes:[]
ioLabsButtonBoxComponent.stopType.allowedUpdates:None
ioLabsButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.stopType.canBePath:True
ioLabsButtonBoxComponent.stopType.categ:Basic
ioLabsButtonBoxComponent.stopType.codeWanted:False
ioLabsButtonBoxComponent.stopType.direct:False
ioLabsButtonBoxComponent.stopType.hint:How do you want to define your end point?
ioLabsButtonBoxComponent.stopType.inputType:choice
ioLabsButtonBoxComponent.stopType.label:stop type
ioLabsButtonBoxComponent.stopType.readOnly:False
ioLabsButtonBoxComponent.stopType.staticUpdater:None
ioLabsButtonBoxComponent.stopType.updates:None
ioLabsButtonBoxComponent.stopType.val:duration (s)
ioLabsButtonBoxComponent.stopType.valType:str
ioLabsButtonBoxComponent.stopVal.default:1.0
ioLabsButtonBoxComponent.stopVal.allowedLabels:[]
ioLabsButtonBoxComponent.stopVal.allowedTypes:[]
ioLabsButtonBoxComponent.stopVal.allowedUpdates:[]
ioLabsButtonBoxComponent.stopVal.allowedVals:[]
ioLabsButtonBoxComponent.stopVal.canBePath:True
ioLabsButtonBoxComponent.stopVal.categ:Basic
ioLabsButtonBoxComponent.stopVal.codeWanted:False
ioLabsButtonBoxComponent.stopVal.direct:True
ioLabsButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
ioLabsButtonBoxComponent.stopVal.inputType:single
ioLabsButtonBoxComponent.stopVal.label:Stop
ioLabsButtonBoxComponent.stopVal.readOnly:False
ioLabsButtonBoxComponent.stopVal.staticUpdater:None
ioLabsButtonBoxComponent.stopVal.updates:constant
ioLabsButtonBoxComponent.stopVal.val:1.0
ioLabsButtonBoxComponent.stopVal.valType:code
ioLabsButtonBoxComponent.store.default:'first button'
ioLabsButtonBoxComponent.store.allowedLabels:[]
ioLabsButtonBoxComponent.store.allowedTypes:[]
ioLabsButtonBoxComponent.store.allowedUpdates:None
ioLabsButtonBoxComponent.store.allowedVals:['last button', 'first button', 'all buttons', 'nothing']
ioLabsButtonBoxComponent.store.canBePath:True
ioLabsButtonBoxComponent.store.categ:Data
ioLabsButtonBoxComponent.store.codeWanted:False
ioLabsButtonBoxComponent.store.direct:False
ioLabsButtonBoxComponent.store.hint:Choose which (if any) responses to store at end of a trial
ioLabsButtonBoxComponent.store.inputType:choice
ioLabsButtonBoxComponent.store.label:Store
ioLabsButtonBoxComponent.store.readOnly:False
ioLabsButtonBoxComponent.store.staticUpdater:None
ioLabsButtonBoxComponent.store.updates:constant
ioLabsButtonBoxComponent.store.val:first button
ioLabsButtonBoxComponent.store.valType:str
ioLabsButtonBoxComponent.storeCorrect.default:False
ioLabsButtonBoxComponent.storeCorrect.allowedLabels:[]
ioLabsButtonBoxComponent.storeCorrect.allowedTypes:[]
ioLabsButtonBoxComponent.storeCorrect.allowedUpdates:None
ioLabsButtonBoxComponent.storeCorrect.allowedVals:[]
ioLabsButtonBoxComponent.storeCorrect.canBePath:True
ioLabsButtonBoxComponent.storeCorrect.categ:Data
ioLabsButtonBoxComponent.storeCorrect.codeWanted:False
ioLabsButtonBoxComponent.storeCorrect.direct:True
ioLabsButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
ioLabsButtonBoxComponent.storeCorrect.inputType:bool
ioLabsButtonBoxComponent.storeCorrect.label:Store correct
ioLabsButtonBoxComponent.storeCorrect.readOnly:False
ioLabsButtonBoxComponent.storeCorrect.staticUpdater:None
ioLabsButtonBoxComponent.storeCorrect.updates:constant
ioLabsButtonBoxComponent.storeCorrect.val:False
ioLabsButtonBoxComponent.storeCorrect.valType:bool
ioLabsButtonBoxComponent.syncScreenRefresh.default:True
ioLabsButtonBoxComponent.syncScreenRefresh.allowedLabels:[]
ioLabsButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
ioLabsButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
ioLabsButtonBoxComponent.syncScreenRefresh.allowedVals:[]
ioLabsButtonBoxComponent.syncScreenRefresh.canBePath:True
ioLabsButtonBoxComponent.syncScreenRefresh.categ:Data
ioLabsButtonBoxComponent.syncScreenRefresh.codeWanted:False
ioLabsButtonBoxComponent.syncScreenRefresh.direct:True
ioLabsButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
ioLabsButtonBoxComponent.syncScreenRefresh.inputType:bool
ioLabsButtonBoxComponent.syncScreenRefresh.label:Sync timing with screen
ioLabsButtonBoxComponent.syncScreenRefresh.readOnly:False
ioLabsButtonBoxComponent.syncScreenRefresh.staticUpdater:None
ioLabsButtonBoxComponent.syncScreenRefresh.updates:constant
ioLabsButtonBoxComponent.syncScreenRefresh.val:True
ioLabsButtonBoxComponent.syncScreenRefresh.valType:bool
